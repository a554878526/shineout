(window.webpackJsonpShineoutDoc=window.webpackJsonpShineoutDoc||[]).push([[12],{301:function(e,n,t){"use strict";var a=t(60),o=t(20),u=t(90),r=t(74),c=t(4),l=t(5),i=t(1),d=t(21),h=t(6),s=t(7),b=t(2),f=t(0),m=t.n(f),p=t(14),k=t.n(p),y=t(17),x=t(22),v=t(10),g=t(562),C=t(61);function w(a){return function(){var e,n=Object(b.a)(a);if(function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],function(){})),!0}catch(e){return!1}}()){var t=Object(b.a)(this).constructor;e=Reflect.construct(n,arguments,t)}else e=n.apply(this,arguments);return Object(s.a)(this,e)}}var V=function(e){Object(h.a)(a,e);var t=w(a);function a(e){var n;return Object(c.a)(this,a),(n=t.call(this,e)).handleClick=n.handleClick.bind(Object(i.a)(n)),n.handleUpdate=n.handleUpdate.bind(Object(i.a)(n)),n.handleRawChange=n.handleRawChange.bind(Object(i.a)(n)),n}return Object(l.a)(a,[{key:"componentDidMount",value:function(){Object(d.a)(Object(b.a)(a.prototype),"componentDidMount",this).call(this),this.props.datum.subscribe(v.a,this.handleUpdate)}},{key:"componentWillUnmount",value:function(){Object(d.a)(Object(b.a)(a.prototype),"componentWillUnmount",this).call(this),this.props.datum.unsubscribe(v.a,this.handleUpdate)}},{key:"getContent",value:function(e){var n=this.props.renderItem;return"string"==typeof n?e[n]:"function"==typeof n?n(e):""}},{key:"handleUpdate",value:function(){this.forceUpdate()}},{key:"handleClick",value:function(e,n,t){var a=this.props,o=a.data,r=a.datum;n?r.add(o[t]):r.remove(o[t])}},{key:"handleRawChange",value:function(e,n){var t=this.props.datum;n?t.add(e):t.remove(e)}},{key:"render",value:function(){var t=this,e=this.props,n=e.block,a=e.data,o=e.datum,r=e.keygen,c=e.children,l=e.style,i=k()(Object(C.a)("group",["no-block","block"][Number(n)]),this.props.className);return void 0===a?m.a.createElement("div",{className:i,style:l},m.a.createElement(g.a,{value:{onRawChange:this.handleRawChange,checked:o.check.bind(o)}},c)):m.a.createElement("div",{className:i,style:l},a.map(function(e,n){return m.a.createElement(u.a,{checked:o.check(e),disabled:o.disabled(e),key:Object(x.b)(e,r,n),htmlValue:n,index:n,onChange:t.handleClick},t.getContent(e))}),c)}}]),a}(y.b);V.defaultProps={renderItem:function(e){return e}};var j=V,O=Object(o.compose)(a.a,g.b)(u.a);O.Group=Object(o.compose)(a.a,r.a.hoc({bindProps:["disabled","format","prediction","separator"]}))(j),O.Checkbox=u.a,O.displayName="ShineoutCheckbox",O.Group.displayName="ShineoutCheckboxGroup";n.a=O},562:function(e,n,t){"use strict";t.d(n,"a",function(){return l}),t.d(n,"b",function(){return i});var a=t(0),o=t.n(a),r=t(38),c=Object(r.a)(),l=c.Provider,i=function(t){return function(n){return o.a.createElement(c.Consumer,null,function(e){return o.a.createElement(t,Object.assign({},n,e))})}}},785:function(e,n,t){"use strict";t.r(n);var a=t(0),o=t.n(a),r=t(561),c=t(563),l=t(40),i=t(786),u=t.n(i),d=t(787),h=t.n(d),s=Object(l.b)(u.a,h.a),b=[{name:"01-base",title:Object(l.b)("基本用法 \n 基本的 Checkbox","Base \n Basic Checkbox"),component:t(788).default,rawText:t(789)},{name:"02-checked",title:Object(l.b)("状态 \n checked 有三个值，选中(true)、未选中(false)、半选中('indeterminate')。checked 设置时为受控组件（此示例没有处理 onChange 事件）。","Checked \n The checked has three values: true(checked), false(not checked), 'indeterminate'(half-checked)."),component:t(790).default,rawText:t(791)},{name:"03-value",title:Object(l.b)("选中值 \n 未设置htmlValue的状态下，checkbox选中时返回true，如果设置 htmlValue，返回 htmlValue。未选中状态都是返回 undefined。","Value \n When the htmlValue is set, the checkbox return the htmlValue (checked) and undefined (not checked); \n When the htmlValue is not set, the checkbox selected return true (checked) and undefined (not checked);"),component:t(792).default,rawText:t(793)},{name:"04-rawgroup",title:Object(l.b)("一组复选框 \n 一组复选框可以放在 Checkbox.Group 中","Group \n A series of checkboxes group by Checkbox.Group."),component:t(794).default,rawText:t(795)},{name:"05-group",title:Object(l.b)(" \n 可以直接通过数据来渲染一组 Checkbox"," \n Render a group of checkboxes from data."),component:t(796).default,rawText:t(797)},{name:"06-format",title:Object(l.b)("复杂数据 \n 复杂的数据可以使用 format 处理 value","Complex data \n Complex data can use format to process value."),component:t(798).default,rawText:t(799)},{name:"08-block",title:Object(l.b)("垂直布局 \n 默认是水平布局，设置 block 属性可以改为垂直布局","Block \n The default is horizontal layout, and setting the block property can change it to be vertical layout."),component:t(800).default,rawText:t(801)},{name:"09-disabled",title:Object(l.b)("禁用 \n 设置 Checkbox.Group 的 disabled 为 true，禁用全部选项","Disabled \n Set the disabled property of Checkbox.Group to true, disable all the checkboxes."),component:t(802).default,rawText:t(803)},{name:"10-disabled",title:Object(l.b)(" \n disabled 为函数时，根据函数结果实现有条件禁用"," \n When the disabled is a function, disbale the option that the function to return true."),component:t(804).default,rawText:t(805)},{name:"11-input",title:Object(l.b)("带输入 \n 设置 inputable 属性可以显示输入框，返回值为输入框内容","Inputable \n Set the inputable property to true can show the input box and the return value is the value of the input box."),component:t(806).default,rawText:t(807)}];n.default=Object(r.a)(function(e){return o.a.createElement(c.b,Object.assign({},e,{codes:void 0,source:s,examples:b}))})},786:function(e,n){e.exports="# Checkbox *复选框*\n\nCheckbox 可以单独使用。一组Checkbox使用时，使用一个Array类型的属性 data 来控制选项。\n\n<example />\n\n## API\n\n### Checkbox\n\n| 属性 | 类型 | 默认值 | 说明 |\n| --- | --- | --- | --- |\n| checked | boolean \\| 'indeterminate' | 无 | checked 传入时为受控组件 |\n| disabled | boolean | false | 是否禁用 |\n| htmlValue | any | true | 选中时返回值 |\n| name | string | 无 | Form 存取数据的名称 |\n| onChange | (value: any, checked: boolean) => void | 无 | 选中时，value 为 htmlValue，checked 为 true<br />未选中时，value 为 undefined，checked 为 false |\n| value | any | 无 | 如果 checked 未设置，checked 状态为 value === htmlValue |\n\n### Checkbox.Group\n\n| 属性 | 类型 | 默认值 | 说明 |\n| --- | --- | --- | --- |\n| data | any[] | 必填 | 数据项 |\n| defaultValue | any[] | | 初始值 |\n| disabled | (data: any) => boolean \\| boolean | false | 如果 disabled 为 true，禁用全部选项，如果 disabled 为函数，根据函数反回结果禁用选项 |\n| format | (data: any) => any \\| string | d => d | 格式化 value<br />默认值，返回原始数据<br />为string时，会作为key从原始数据中获取值，相当于 (d) => d\\[format\\]<br /> 为函数时，以函数返回结果作为 value |\n| name | string | 无 | Form 存取数据的名称 |\n| keygen | ((data: any) => string) \\| string \\| true | 必填 | 生成每一项key的辅助方法<br />为 true 时，以数据项本身作为key，相当于 (d => d)<br />为函数时，使用此函数返回值<br />为string时，使用这个string对应的数据值。如 'id'，相当于 (d => d.id) |\n| onChange | (value: any[]) => void | 无 | value 为 datum.getValue() |\n| prediction | (value: any, data: any) => boolean |  (val, d) => val===format(d) | 默认使用 format 函数执行的结果来比较是否匹配，在某些情况下（例如返回原始数据的对象，更新数据时，生成了一个值相同，非同一个对象的选项），需要借助 prediction 函数来判断是否匹配 |\n| renderItem | (data: any) => ReactNode \\| string | 必填 | 为 string 时，返回 d\\[string]<br />为 function 时，返回函数结果 |\n| value | any[] | | 在Form中，value会被表单接管，value无效 |\n"},787:function(e,n){e.exports="# Checkbox\n\n<example />\n\n## API\n\n### Checkbox\n\n| Property | Type | Default | Description |\n| --- | --- | --- | --- |\n| checked | boolean \\| 'indeterminate' | - | if not set, use (value === htmlValue). |\n| disabled | boolean | false | disable checkbox |\n| htmlValue | any | true | Specifies the result |\n| name | string | - | The name of the Form which access data |\n| onChange | (value: any, checked: boolean) => void | - | When selected, value is htmlValue and checked is true.<br />When not selected, value is undefined and checked is false. |\n| value | any | - |  |\n\n### Checkbox.Group\n\n| Property | Type | Default | Description |\n| --- | --- | --- | --- |\n| data | any[] | required | The data item |\n| datum | object | - | If the format and prediction does not satisfied your requirements, you can pass in a [Datum.List](/components/Datum.List) object or the Datum.List configuration to process data. |\n| defaultValue | any[] | [] | Initial value |\n| disabled | (data: any) => boolean \\| boolean | false | When the value is true, disabled all checkboxes; When the value is function, disable the checkbox that this function returns true. |\n| format | ((data: any) => any) | string | d => d | format value |\n| name | string | - | The name of the Form which access data |\n| keygen | ((data: any) => string) \\| string \\| true | required | Key generator<br />When it is true, the data itself is used as the key equivalent to (d => d)<br />When it is a function, use its return value.<br />When it is a string，ues the value of the string.For example, 'id' is the same thing as (d) => d.id. |\n| onChange | (value: any[]) => void  | - | value is datum.getValue() |\n| prediction | (value: any, data: any) => boolean |  (val, d) => val===format(d) | By default, the result of the format function is used to compare whether it matches. In some cases (for example, whe an object that returns the original data is updated, an different option with the same value  is generated), the prediction function needs to be used to determine whether match |\n| renderItem | (data: any) => ReactNode \\| string | required | When it is a string, return d\\[string]<br />When it is a function, return the result of the function. |\n| value | any[] | - | In the Form, the value will be taken over by the form and the value will lose efficacy. |\n"},788:function(e,n,t){"use strict";t.r(n);var a=t(0),o=t.n(a),r=t(301);n.default=function(){return o.a.createElement(r.a,null,"Checkbox")}},789:function(e,n){e.exports="/**\n * cn - 基本用法\n *    -- 基本的 Checkbox\n * en - Base\n *    -- Basic Checkbox\n */\nimport React from 'react'\nimport { Checkbox } from 'shineout'\n\nexport default function() {\n  return <Checkbox>Checkbox</Checkbox>\n}\n"},790:function(e,n,t){"use strict";t.r(n);var a=t(0),o=t.n(a),r=t(301);n.default=function(){return o.a.createElement("div",null,o.a.createElement(r.a,{checked:!1},"not checked"),o.a.createElement(r.a,{checked:!0},"checked"),o.a.createElement(r.a,{checked:"indeterminate"},"indeterminate"))}},791:function(e,n){e.exports="/**\n * cn - 状态\n *    -- checked 有三个值，选中(true)、未选中(false)、半选中('indeterminate')。checked 设置时为受控组件（此示例没有处理 onChange 事件）。\n * en - Checked\n *    -- The checked has three values: true(checked), false(not checked), 'indeterminate'(half-checked).\n */\nimport React from 'react'\nimport { Checkbox } from 'shineout'\n\nexport default function() {\n  return (\n    <div>\n      <Checkbox checked={false}>not checked</Checkbox>\n      <Checkbox checked>checked</Checkbox>\n      <Checkbox checked=\"indeterminate\">indeterminate</Checkbox>\n    </div>\n  )\n}\n"},792:function(e,n,t){"use strict";t.r(n);var a=t(0),o=t.n(a),r=t(301);n.default=function(){return o.a.createElement(r.a,{htmlValue:"ok",defaultValue:"ok"},'value is "ok"')}},793:function(e,n){e.exports="/**\n * cn - 选中值\n *    -- 未设置htmlValue的状态下，checkbox选中时返回true，如果设置 htmlValue，返回 htmlValue。未选中状态都是返回 undefined。\n * en - Value\n *    -- When the htmlValue is set, the checkbox return the htmlValue (checked) and undefined (not checked);\n *    -- When the htmlValue is not set, the checkbox selected return true (checked) and undefined (not checked);\n */\nimport React from 'react'\nimport { Checkbox } from 'shineout'\n\nexport default function() {\n  return (\n    <Checkbox htmlValue=\"ok\" defaultValue=\"ok\">\n      {'value is \"ok\"'}\n    </Checkbox>\n  )\n}\n"},794:function(e,n,t){"use strict";t.r(n);var a=t(0),o=t.n(a),r=t(301),c=[{id:1,color:"red"},{id:2,color:"orange"},{id:3,color:"yellow"},{id:4,color:"green"},{id:5,color:"cyan"},{id:6,color:"blue"},{id:7,color:"violet"}];n.default=function(){return o.a.createElement(r.a.Group,{keygen:"id",defaultValue:[3,5]},c.map(function(e){return o.a.createElement(r.a,{key:e.id,htmlValue:e.id},e.color)}))}},795:function(e,n){e.exports="/**\n * cn - 一组复选框\n *    -- 一组复选框可以放在 Checkbox.Group 中\n * en - Group\n *    -- A series of checkboxes group by Checkbox.Group.\n */\nimport React from 'react'\nimport { Checkbox } from 'shineout'\n\nconst data = [\n  { id: 1, color: 'red' },\n  { id: 2, color: 'orange' },\n  { id: 3, color: 'yellow' },\n  { id: 4, color: 'green' },\n  { id: 5, color: 'cyan' },\n  { id: 6, color: 'blue' },\n  { id: 7, color: 'violet' },\n]\n\nexport default function() {\n  return (\n    <Checkbox.Group keygen=\"id\" defaultValue={[3, 5]}>\n      {data.map(d => (\n        <Checkbox key={d.id} htmlValue={d.id}>\n          {d.color}\n        </Checkbox>\n      ))}\n    </Checkbox.Group>\n  )\n}\n"},796:function(e,n,t){"use strict";t.r(n);var a=t(0),o=t.n(a),r=t(301),c=["red","orange","yellow","green","cyan","blue","violet"];function l(e){var n={borderBottom:"solid 1px ".concat(e),paddingBottom:2};return o.a.createElement("span",{style:n},e)}n.default=function(){return o.a.createElement(r.a.Group,{keygen:function(e){return e},data:c,defaultValue:["blue","cyan"],renderItem:l})}},797:function(e,n){e.exports="/**\n * cn -\n *    -- 可以直接通过数据来渲染一组 Checkbox\n * en -\n *    -- Render a group of checkboxes from data.\n */\nimport React from 'react'\nimport { Checkbox } from 'shineout'\n\nconst data = ['red', 'orange', 'yellow', 'green', 'cyan', 'blue', 'violet']\n\nfunction renderItem(color) {\n  const style = { borderBottom: `solid 1px ${color}`, paddingBottom: 2 }\n  return <span style={style}>{color}</span>\n}\n\nexport default function() {\n  return <Checkbox.Group keygen={c => c} data={data} defaultValue={['blue', 'cyan']} renderItem={renderItem} />\n}\n"},798:function(e,n,t){"use strict";t.r(n),t.d(n,"default",function(){return b});var c=t(4),a=t(5),l=t(6),o=t(7),r=t(2),i=t(0),u=t.n(i),d=t(301);function h(a){return function(){var e,n=Object(r.a)(a);if(function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],function(){})),!0}catch(e){return!1}}()){var t=Object(r.a)(this).constructor;e=Reflect.construct(n,arguments,t)}else e=n.apply(this,arguments);return Object(o.a)(this,e)}}var s=[{id:1,color:"red"},{id:2,color:"orange"},{id:3,color:"yellow"},{id:4,color:"green"},{id:5,color:"cyan"},{id:6,color:"blue"},{id:7,color:"violet"}],b=function(e){Object(l.a)(r,e);var o=h(r);function r(){var e;Object(c.a)(this,r);for(var n=arguments.length,t=new Array(n),a=0;a<n;a++)t[a]=arguments[a];return(e=o.call.apply(o,[this].concat(t))).renderItem=function(e){var n={borderBottom:"solid 1px ".concat(e.color),paddingBottom:2};return u.a.createElement("span",{style:n},e.color)},e}return Object(a.a)(r,[{key:"render",value:function(){return u.a.createElement(d.a.Group,{keygen:"id",data:s,format:"color",defaultValue:["blue","cyan"],renderItem:this.renderItem})}}]),r}(i.Component)},799:function(e,n){e.exports="/**\n * cn - 复杂数据\n *    -- 复杂的数据可以使用 format 处理 value\n * en - Complex data\n *    -- Complex data can use format to process value.\n */\nimport React, { Component } from 'react'\nimport { Checkbox } from 'shineout'\n\nconst data = [\n  { id: 1, color: 'red' },\n  { id: 2, color: 'orange' },\n  { id: 3, color: 'yellow' },\n  { id: 4, color: 'green' },\n  { id: 5, color: 'cyan' },\n  { id: 6, color: 'blue' },\n  { id: 7, color: 'violet' },\n]\n\nexport default class extends Component {\n  renderItem = d => {\n    const style = { borderBottom: `solid 1px ${d.color}`, paddingBottom: 2 }\n    return <span style={style}>{d.color}</span>\n  }\n\n  render() {\n    return (\n      <Checkbox.Group\n        keygen=\"id\"\n        data={data}\n        format=\"color\"\n        defaultValue={['blue', 'cyan']}\n        renderItem={this.renderItem}\n      />\n    )\n  }\n}\n"},800:function(e,n,t){"use strict";t.r(n);var a=t(0),o=t.n(a),r=t(301),c=[{id:1,color:"red"},{id:2,color:"orange"},{id:3,color:"yellow"},{id:4,color:"green"},{id:5,color:"cyan"},{id:6,color:"blue"},{id:7,color:"violet"}];n.default=function(){return o.a.createElement(r.a.Group,{keygen:"id",block:!0,data:c,datum:{format:"color"},defaultValue:["blue","cyan"],renderItem:"color"})}},801:function(e,n){e.exports="/**\n * cn - 垂直布局\n *    -- 默认是水平布局，设置 block 属性可以改为垂直布局\n * en - Block\n *    -- The default is horizontal layout, and setting the block property can change it to be vertical layout.\n */\nimport React from 'react'\nimport { Checkbox } from 'shineout'\n\nconst data = [\n  { id: 1, color: 'red' },\n  { id: 2, color: 'orange' },\n  { id: 3, color: 'yellow' },\n  { id: 4, color: 'green' },\n  { id: 5, color: 'cyan' },\n  { id: 6, color: 'blue' },\n  { id: 7, color: 'violet' },\n]\n\nexport default function() {\n  return (\n    <Checkbox.Group\n      keygen=\"id\"\n      block\n      data={data}\n      datum={{ format: 'color' }}\n      defaultValue={['blue', 'cyan']}\n      renderItem=\"color\"\n    />\n  )\n}\n"},802:function(e,n,t){"use strict";t.r(n);var a=t(0),o=t.n(a),r=t(301),c=["red","orange","yellow","green","cyan","blue","violet"];n.default=function(){return o.a.createElement("div",null,o.a.createElement(r.a.Group,{disabled:!0,keygen:!0,data:c,defaultValue:["blue","cyan"],renderItem:function(e){return e}}),o.a.createElement("br",null),o.a.createElement(r.a,{disabled:!0,checked:!1},"not checked"),o.a.createElement(r.a,{disabled:!0,checked:!0},"checked"),o.a.createElement(r.a,{disabled:!0,checked:"indeterminate"},"indeterminate"))}},803:function(e,n){e.exports="/**\n * cn - 禁用\n *    -- 设置 Checkbox.Group 的 disabled 为 true，禁用全部选项\n * en - Disabled\n *    -- Set the disabled property of Checkbox.Group to true, disable all the checkboxes.\n */\nimport React from 'react'\nimport { Checkbox } from 'shineout'\n\nconst data = ['red', 'orange', 'yellow', 'green', 'cyan', 'blue', 'violet']\n\nexport default function() {\n  return (\n    <div>\n      <Checkbox.Group disabled keygen data={data} defaultValue={['blue', 'cyan']} renderItem={d => d} />\n      <br />\n      <Checkbox disabled checked={false}>\n        not checked\n      </Checkbox>\n      <Checkbox disabled checked>\n        checked\n      </Checkbox>\n      <Checkbox disabled checked=\"indeterminate\">\n        indeterminate\n      </Checkbox>\n    </div>\n  )\n}\n"},804:function(e,n,t){"use strict";t.r(n);var a=t(0),o=t.n(a),r=t(301),c=["red","orange","yellow","green","cyan","blue","violet"];n.default=function(){return o.a.createElement("div",null,o.a.createElement(r.a.Group,{data:c,disabled:function(e){return"yellow"===e},keygen:!0,defaultValue:["blue"],renderItem:function(e){return e}}))}},805:function(e,n){e.exports="/**\n * cn -\n *    -- disabled 为函数时，根据函数结果实现有条件禁用\n * en -\n *    -- When the disabled is a function, disbale the option that the function to return true.\n */\nimport React from 'react'\nimport { Checkbox } from 'shineout'\n\nconst data = ['red', 'orange', 'yellow', 'green', 'cyan', 'blue', 'violet']\n\nexport default function() {\n  return (\n    <div>\n      <Checkbox.Group data={data} disabled={d => d === 'yellow'} keygen defaultValue={['blue']} renderItem={d => d} />\n    </div>\n  )\n}\n"},806:function(e,n,t){"use strict";t.r(n);var a=t(0),o=t.n(a),r=t(301);n.default=function(){return o.a.createElement(r.a,{inputable:!0},"more...")}},807:function(e,n){e.exports="/**\n * cn - 带输入\n *    -- 设置 inputable 属性可以显示输入框，返回值为输入框内容\n * en - Inputable\n *    -- Set the inputable property to true can show the input box and the return value is the value of the input box.\n */\nimport React from 'react'\nimport { Checkbox } from 'shineout'\n\nexport default function() {\n  return <Checkbox inputable>more...</Checkbox>\n}\n"}}]);