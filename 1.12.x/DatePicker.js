(window.webpackJsonpShineoutDoc=window.webpackJsonpShineoutDoc||[]).push([[15],{877:function(e,t,n){"use strict";n.r(t);var a=n(0),r=n.n(a),o=n(565),l=n(566),i=n(41),s=n(878),c=n.n(s),d=n(879),u=n.n(d),p=Object(i.b)(c.a,u.a),m=[{name:"01-base",isTs:!0,isTest:!1,title:Object(i.b)("基本用法 \n 最基本的用法","Base \n The basic usage"),component:n(880).default,rawText:n(896),parseTsText:n(897)},{name:"02-format",isTs:!0,isTest:!1,title:Object(i.b)('格式化 \n 传入值可为 日期对象，时间戳，字符串，通过format 属性可以定义返回值的格式. <br />支持通过 formatResult 属性单独格式化值展示格式. <br /><br /> <b>注: 我们使用的格式化字符串(date-fns)和 moment 是不一致的, 如: <br /> <br /> moment: YYYY  => date-fns: yyyy <br /> moment: DD&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; => date-fns: dd <br /> moment: hh&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  => date-fns: HH  </b><br /><br /> 详细的请参照 <a href="#heading-3-Format">Format<a>','Format \n The format attribute defines the format of the return value.  <br /><br /> <b>tip: The format string we used (date-fns) and moment.js are inconsistent, such as: <br /> <br /> moment: YYYY  => date-fns: yyyy <br /> moment: DD&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; => date-fns: dd <br /> moment: hh&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  => date-fns: HH  </b><br /><br /> Please refer to the details <a href="#heading-3-Format">Format<a>'),component:n(898).default,rawText:n(899),parseTsText:n(900)},{name:"03-size",isTs:!0,isTest:!1,title:Object(i.b)("尺寸 \n 内置了三种尺寸，small、default、large","Size \n There are three built-in size: small、default、large."),component:n(901).default,rawText:n(902),parseTsText:n(903)},{name:"04-day",isTs:!0,isTest:!1,title:Object(i.b)("选择天 \n 设置 type 为 date，选择 天","Day Mode \n Set type to be date to select day."),component:n(904).default,rawText:n(905),parseTsText:n(906)},{name:"04-minmax",isTs:!0,isTest:!1,title:Object(i.b)("最大最小时间 \n 可以通过设置 min/max 去设置一个选择时间的最大最小值. 推荐在单选且datetime 类型下使用","min max date \n The basic usage"),component:n(907).default,rawText:n(908),parseTsText:n(909)},{name:"05-week",isTs:!0,isTest:!1,title:Object(i.b)("选择星期 \n 设置 type 为 week，选择星期","Week Mode \n Set type to be week to select week."),component:n(910).default,rawText:n(911),parseTsText:n(912)},{name:"06-a-month",isTs:!0,isTest:!1,title:Object(i.b)("选择月 \n 设置 type 为 month，选择月","Month Mode \n Set type to be month to select month."),component:n(913).default,rawText:n(914),parseTsText:n(915)},{name:"06-b-quarter",isTs:!0,isTest:!1,title:Object(i.b)("选择季度 \n 设置 type 为 quarter，选择季度","Quarter Mode \n Set type to be quarter to select month."),component:n(916).default,rawText:n(917),parseTsText:n(918)},{name:"06-c-year",isTs:!0,isTest:!1,title:Object(i.b)("选择年 \n 设置 type 为 year，选择年","Year Mode \n Set type to be year to select year."),component:n(919).default,rawText:n(920),parseTsText:n(921)},{name:"07-a-time",isTs:!0,isTest:!1,title:Object(i.b)("选择时间 \n 设置 type 为 time，选择时间，根据 format 自动加载相应的选择列","Time Mode \n Set type to be time to select time and automatically load the corresponding selection column according to the format property."),component:n(922).default,rawText:n(923),parseTsText:n(924)},{name:"07-b-time-step",isTs:!0,isTest:!1,title:Object(i.b)(" \n 步进设置","Step \n Set step of TimePicker"),component:n(925).default,rawText:n(926),parseTsText:n(927)},{name:"08-datetime",isTs:!0,isTest:!1,title:Object(i.b)("选择日期时间 \n 设置 type 为 datetime，选择日期 + 时间","Datetime Mode \n Set type to be datetime to select date and time."),component:n(928).default,rawText:n(929),parseTsText:n(930)},{name:"09-range-date",isTs:!0,isTest:!1,title:Object(i.b)("范围选择 \n 设置 range 属性可以选择范围，输入和返回的 value 为长度为 2 的数组","Range \n Set the range property to select range, the input value and return value is an array of length 2."),component:n(931).default,rawText:n(932),parseTsText:n(933)},{name:"09-range-month",isTs:!0,isTest:!1,title:Object(i.b)("默认月份 \n 设置  defaultRangeMonth 可以设置范围选择的初始面板月份.优先级低于 value 和 defaultValue, 值为时间对象或者时间戳","Range \n Set the range property to select range, the input value and return value is an array of length 2."),component:n(934).default,rawText:n(935),parseTsText:n(936)},{name:"09-single",isTs:!0,isTest:!1,title:Object(i.b)("允许单选 \n 可以设置范围选择的时候只选择一侧.","allow single \n can set range select only select single"),component:n(937).default,rawText:n(938),parseTsText:n(939)},{name:"09-squick",isTs:!0,isTest:!1,title:Object(i.b)("快速选择 \n 可以配置一些快速选择的选项, 日期可以是 Date, 时间戳, 或者字符串,字符串需要和所格式填写的 format 一致","Quick select \n can configure some options for quick selection. The date can be Date, timestamp, or string. The string needs to be in the same format as the format."),component:n(940).default,rawText:n(941),parseTsText:n(942)},{name:"10-disabled",isTs:!0,isTest:!1,title:Object(i.b)("禁用 \n disabled 为 true 时，禁用整个日期选择。","Disabled \n When the disabled is true, disable all the date selection."),component:n(943).default,rawText:n(944),parseTsText:n(945)},{name:"11-disabled-date-time",isTs:!1,isTest:!1,title:Object(i.b)(" \n 同时禁用日期和时间"," \n Disable both special date and special time"),component:n(946).default,rawText:n(947)},{name:"11-disabled-type",isTs:!0,isTest:!1,title:Object(i.b)(" \n disabledTime 属性支持单独禁用时间。"," \n The disabledTime attribute supports separate disable time."),component:n(948).default,rawText:n(949),parseTsText:n(950)},{name:"11-disabled",isTs:!0,isTest:!1,title:Object(i.b)(" \n disabled 为函数时，禁用返回为true的选项, disable 应该用于禁用一些特殊的时间, 如果需要使用比如现在以前的时间不能选择的, 推荐使用 min/max。（注意：如果只想单独禁用时间，可使用 disabledTime 属性。）"," \n When the disabled is a function, disbale should be used to disable some special time, if you need to use such as now before the time can not be selected, it is recommended to use min/max. (Note: If you only want to disable the time alone, you can use the disabledTime attribute.)"),component:n(951).default,rawText:n(952),parseTsText:n(953)},{name:"12-inputable",isTs:!0,isTest:!1,title:Object(i.b)("可输入 \n 设置 inputable 使日期可输入","Inputable \n Set inputable to true, you can change the value by input"),component:n(954).default,rawText:n(955),parseTsText:n(956)},{name:"13-absolute",isTs:!0,isTest:!1,title:Object(i.b)("绝对定位 \n 如果选项弹出层的父容器被遮挡，可以设置 absolute 属性使弹出选项在单独层中渲染。（非必要情况下不建议）","Absolute \n If the parent container of the pop-up layer is occluded, you can set the absolute property to make the pop-up options rendered in a separate layer. (not recommended if not necessary)"),component:n(957).default,rawText:n(958),parseTsText:n(959)},{name:"14-innertitle",isTs:!0,isTest:!1,title:Object(i.b)("内嵌标题 \n 使用 innerTitle 展示内嵌标题","inner title \n -- use innerTitle to display the inner title"),component:n(960).default,rawText:n(961),parseTsText:n(962)},{name:"15-position",isTs:!0,isTest:!1,title:Object(i.b)("弹出框位置 \n 通过设置 position 指定弹出面板的位置。默认为自动","Position \n Set Position can control the different position of DatePicker"),component:n(963).default,rawText:n(964),parseTsText:n(965)},{name:"16-timezone",isTs:!0,isTest:!1,title:Object(i.b)("时区 \n 设置 timeZone","timeZone \n set timeZone"),component:n(966).default,rawText:n(967),parseTsText:n(968)},{name:"17-clearable",isTs:!0,isTest:!1,title:Object(i.b)("可清空 \n 允许清空内容","Clearable \n Could be clearable"),component:n(969).default,rawText:n(970),parseTsText:n(971)},{name:"18-clearable",isTs:!0,isTest:!1,title:Object(i.b)(" \n 在清空值时抛出抛出 undefined"," \n onChange get undefined while clear value"),component:n(972).default,rawText:n(973),parseTsText:n(974)},{name:"19-default-picker-value",isTs:!0,isTest:!1,title:Object(i.b)("面板默认时间 \n 打开面板后的默认时间，仅在未选择日期时生效","DefaultPickerValue \n default date of panel，work under has no value"),component:n(975).default,rawText:n(976),parseTsText:n(977)},{name:"test-001-control",isTs:!0,isTest:!0,title:Object(i.b)("完全受控 \n 通过封装实现完全受控","完全受控 \n 通过封装实现完全受控"),component:n(978).default,rawText:n(979),parseTsText:n(980)},{name:"test-002-time-range-max",isTs:!0,isTest:!0,title:Object(i.b)("timepicker range max \n timepicker max 和 range 一起使用导致禁用逻辑错误",""),component:n(981).default,rawText:n(982),parseTsText:n(983)}];t.default=Object(o.a)(function(e){return r.a.createElement(l.b,Object.assign({},e,{codes:void 0,source:p,examples:m}))})},878:function(e,t){e.exports="# DatePicker *日期选择*\n\n####   <br />*请注意date-fns的 format 字符串 与 Moment.js 的区别: [区别](https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md)\n\n<example />\n\n## API\n\n### DatePicker\n\n| 属性 | 类型 | 默认值 | 说明 |\n| --- | --- | --- | --- |\n| className | string | 无 | 扩展className |\n| clearable | boolean | true | 是否可清空 |\n| defaultValue | string \\| number \\| Date \\| \\[any, any] | 无 | 默认值。如果 defaultValue 和 format 类型不一致，会执行一次 format，并触发 onChange 事件返回 format 后的值 |\n| disabled | (date: Date, type: string, value: \\[any, any]) => boolean \\| boolean  | false | 如果 disabled 为 true，禁用全部选项，如果 disabled 为函数，根据函数反回结果禁用选项。（注意：如果只想单独禁用时间，可使用 disabledTime 属性。） |\n| format | string | | 不同type对应的默认值<br />'date': 'yyyy-MM-dd'<br />'time': 'HH:mm:ss'<br />'week': 'RRRR II'<br />'month': 'yyyy-MM'<br />'quarter': 'yyyy-\\[Q]Q'<br />'year': 'yyyy'<br />'datetime': 'yyyy-MM-dd HH:mm:ss' |\n| formatResult | string \\| (date: Date) => string | props.format | 对选中时间进行格式化 |\n| onChange | (value: string \\| \\[string \\| undefined, string \\| undefined\\]) => void | 无 | 值改变回调函数 |\n| placeholder | string \\| string[] | 无 | 占位文字<br />range 属性不为空时，为长度为2的数组 |\n| range | boolean \\| number | 无 | 范围跨度，单位 **秒**，<br />为 true 时表示不限制选择范围。 |\n| style | object | 无 | 最外层扩展样式 |\n| type | 'date' \\| 'time' \\| 'datetime' \\| 'month' \\| 'quarter' \\| 'week' \\| 'year' | 'date' | 时间类型|\n| value | string \\| number \\| Date \\| \\[any, any] | 无 | 值。为 string 时，需要和 format 属性匹配。<br />range 属性为 true 时，值为长度为2的数组 |\n| defaultTime | string \\| \\[any, any] | 无 | 选择日期时默认的时间, 格式为: 'HH:mm:ss' |\n| absolute | boolean \\| (() => element) | false | 为 true 时，选项弹出层在 BODY 下独立 render， 为函数时 选项弹出层在函数返回的 DOM 下render  |\n| zIndex | number | 1000 | 选择面板 z-index 值 |\n| allowSingle | boolean | false | 是否允许单选, 仅在 range 模式下有效 |\n| quickSelect | object[] | false | 快速选择, name: 文字提示, value: 时间范围或时间 |\n| min | string \\| number \\| Date | 无 | 可选最小值 |\n| max | string \\| number \\| Date | 无 | 可选最大值 |\n| defaultRangeMonth | string[] \\| number[] \\| Date[] | 无 | 范围选择的初始月份, 值为时间对象 或者时间戳, 仅在 range 模式下生效, 优先级低于 value 和 defaultValue |\n| defaultPickerValue | string \\| number \\| Date \\| string[] \\| number[] \\| Date[] | 无 | 面板默认时间，在未选择日期时生效 |\n| hourStep | number | 无 | 小时选项步长 |\n| minuteStep | number | 无 | 分钟选项步长 |\n| secondStep | number | 无 | 秒选项步长 |\n| onPickerChange | (value: any, quickSelect?: object \\| void, type?: string) => void | 无 | 值改变回调，有别于 onChange, onPickerChange会在每项值改变的时候执行 |\n| disabledTime | string \\| ((time: string) => boolean) | 无 | 禁用指定 Time。 |\n| align | 'center' \\| 'left' \\| 'right' | 'center' | 值水平布局方式 |\n| underline | boolean | false | 是否只展示下边框 |\n| clearWithUndefined | boolean | false | 在清空值时抛出是否抛出 undefined |\n| innerTitle | string | - | 内嵌标题 |\n| inputable | boolean | false | 可输入 |\n| position | 'left-top' \\| 'left-bottom' \\| 'right-top' \\| 'right-bottom' | - | 弹出框位置 |\n| size | 'small' \\| 'default' \\| 'large' | 'default' | 尺寸大小 |\n| timeZone | string | 无 | 设置默认时区,格式为/^(\\[+-\\]\\d{2})$/ 支持 '-12' 到 '+13' |\n\n### DatePickerFormat\n\n我们使用的格式化字符串(date-fns)和 moment.js 是不一致的, 如:<br />\nmoment: YYYY  => date-fns: yyyy <br />\nmoment: DD&nbsp;&nbsp;&nbsp;&nbsp; => date-fns: dd <br />\nmoment: hh&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  => date-fns: HH<br />\n常用的 format 格式如下，更多见 [format](https://date-fns.org/v2.0.0-alpha.20/docs/format)\n\n| 格式 | 说明 | 示例 |\n| --- | --- | --- |\n|\tM\t| 月 | 1, 2, ..., 12 |\n| MM | 月（补0）| 01, 02, ..., 12 |\n| Q | 季度 | 1, 2, 3, 4 |\n| d | 日 |\t1, 2, ..., 31\n| dd | 日（补0） |\t01, 02, ..., 31 |\n| I | ISO周 | 1, 2, ..., 53 |\n| II | ISO周（补0）| 01, 02, ..., 53 |\n| yy | 年 | 00, 01, ..., 99 |\n| yyyy | 完整年 | 1900, 1901, ..., 2099 |\n| a | AM/PM | AM, PM |\n| H | 小时 | 0, 1, ... 23 |\n| HH | 小时（补0） | 00, 01, ... 23 |\n| h | 小时（12小时制） | 1, 2, ..., 12 |\n| hh | 小时（12小时制，补0） | 01, 02, ..., 12 |\n| m | 分钟 | 0, 1, ..., 59 |\n| mm | 分钟（补0） | 00, 01, ..., 59 |\n| s | 秒 | 0, 1, ..., 59 |\n| ss | 秒（补0） | 00, 01, ..., 59 |\n| SSS | 毫秒 | 000, 001, ..., 999 |\n| Z | 时区 | -01:00, +00:00, ... +12:00 |\n| t | 时间戳（秒） |\t512969520 |\n| T | 时间戳（毫秒） | 512969520900 |\n"},879:function(e,t){e.exports="# Datepicker\n\n####   <br />*Please note that the format tokens differ from Moment.js and other libraries: [differ](https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md)\n\n<example />\n\n## API\n\n### DatePicker\n\n| Property | Type | Default | Description |\n| --- | --- | --- | --- |\n| className | string | - | extend className |\n| clearable | boolean | true | \bwhether it can be cleared |\n| defaultValue | string \\| number \\| Date \\| \\[any, any] | - | default |\n| disabled | (date: Date, type: string, value: \\[any, any]) => boolean \\| boolean  | false | When the value is true, disabled all options; When the value is function, disable the options that this function returns true. (Note: If you only want to disable the time alone, you can use the disabledTime attribute.) |\n| format | string | | default values for different types: <br />'date': 'yyyy-MM-dd'<br />'time': 'HH:mm:ss'<br />'week': 'RRRR II'<br />'month': 'yyyy-MM'<br />'quarter': 'yyyy-\\[Q]Q'<br />'year': 'yyyy'<br />'datetime': 'yyyy-MM-dd HH:mm:ss' |\n| formatResult | string \\| (date: Date) => string | props.format | Format the selected time |\n| onChange | (value: string \\| \\[string \\| undefined, string \\| undefined\\]) => void | - | a callback when the value is changing |\n| placeholder | string \\| string[] | - | placeholder text<br />When the range property is not empty, it is an array of length 2. |\n| range | boolean \\| number | - | range span，unit: **second**，<br />When it is true, selection scope is not limited. |\n| style | object | - | Container element style |\n| type | 'date' \\| 'time' \\| 'datetime' \\| 'month' \\| 'quarter' \\| 'week' \\| 'year' | 'date' | type of datepicker |\n| value | string \\| number \\| Date \\| \\[any, any] | - | When the value is string, it needs to match the format attribute. <br /> When the range property is true, the value is an array of length 2. |\n| defaultTime | string \\| \\[any, any] | - | Default time when selecting a date, the format is: 'HH:mm:ss' |\n| absolute \\| (() => element) | boolean | false | When it is true, the pop-up layer of option append into document.body. When it is function, the pop-up layer of option append into it's return DOM.  |\n| zIndex | number | 1000 | panel z-index |\n| allowSingle | boolean | false | allow single select, only in range can set |\n| quickSelect | object[] | false | quick select, name: tip, value: range date or date |\n| min | string \\| number \\| Date | none | option min value |\n| max | string \\| number \\| Date | none | option max value |\n| defaultRangeMonth | string[] \\| number[] \\| Date[] | - | The initial month of range selection, the value is a time object, valid only in range mode, and the priority is lower than value and defaultValue |\n| defaultPickerValue | string \\| number \\| Date \\| string[] \\| number[] \\| Date[] | none | default date of panel，work under has no value |\n| hourStep | number | none | hour step |\n| minuteStep | number | none | minute step |\n| secondStep | number | none | second step |\n| onPickerChange | (value: any, quickSelect?: object \\| void, type: string) => void | none | value onchange callback (every type of date) |\n| disabledTime | string \\| ((time: string) => boolean) | none | Disable the specified Time. |\n| align | 'center' \\| 'left' \\| 'right' | 'center' | horizontal align of the value |\n| underline | boolean | false | only display border bottom  |\n| clearWithUndefined | boolean | false | onChange get undefined while clear value |\n| innerTitle | string | - | inner title |\n| inputable | boolean | false | Allow enter something into DatePicker |\n| position | 'left-top' \\| 'left-bottom' \\| 'right-top' \\| 'right-bottom' | - | Set Position can control the different position of DatePicker |\n| size | 'small' \\| 'default' \\| 'large' | 'default' | There are three built-in size: small、default、large. |\n| timeZone | string | - | Set the default time zone, the format is /^(\\[+-\\]\\d{2})$/ Support '-12' to '+13' |\n\n### DatePickerFormat\n\ntip: The format string we used (date-fns) and moment.js are inconsistent, such as:<br />\nmoment: YYYY  => date-fns: yyyy <br />\nmoment: DD&nbsp;&nbsp;&nbsp;&nbsp; => date-fns: dd <br />\nmoment: hh&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  => date-fns: HH<br />\nThe commonly used format is as follows\n\n| format | Description | example |\n| --- | --- | --- |\n|\tM\t| month | 1, 2, ..., 12 |\n| MM | month(fill up 0) | 01, 02, ..., 12 |\n| Q | quarter | 1, 2, 3, 4 |\n| d | day |\t1, 2, ..., 31\n| dd | day(fill up 0) |\t01, 02, ..., 31 |\n| I | ISO week | 1, 2, ..., 53 |\n| II | ISO week(fill up 0) | 01, 02, ..., 53 |\n| yy | year | 00, 01, ..., 99 |\n| yyyy | full year | 1900, 1901, ..., 2099 |\n| a | AM/PM | AM, PM |\n| H | hour | 0, 1, ... 23 |\n| HH | hour(fill up 0) | 00, 01, ... 23 |\n| h | hour（12 hours system） | 1, 2, ..., 12 |\n| hh | hour（12 hours system,补0） | 01, 02, ..., 12 |\n| m | minute | 0, 1, ..., 59 |\n| mm | minute(fill up 0) | 00, 01, ..., 59 |\n| s | second | 0, 1, ..., 59 |\n| ss | second(fill up 0) | 00, 01, ..., 59 |\n| SSS | ms | 000, 001, ..., 999 |\n| Z | Time Zone | -01:00, +00:00, ... +12:00 |\n| t | Time stamp(s) |\t512969520 |\n| T | Time stamp(ms) | 512969520900 |\n"},880:function(e,t,n){"use strict";n.r(t);var a=n(0),r=n.n(a),o=n(319);t.default=function(){return r.a.createElement("div",null,r.a.createElement(o.a,{type:"date",placeholder:"Select date"}),r.a.createElement("br",null),r.a.createElement(o.a,{type:"datetime",style:{marginTop:"12px"},placeholder:"Select datetime"}))}},896:function(e,t){e.exports='/**\n * cn - 基本用法\n *    -- 最基本的用法\n * en - Base\n *    -- The basic usage\n */\nimport React from \'react\'\nimport { DatePicker } from \'shineout\'\n\nconst App: React.FC = () => (\n  <div>\n    <DatePicker type="date" placeholder="Select date" />\n    <br />\n    <DatePicker type="datetime" style={{ marginTop: \'12px\' }} placeholder="Select datetime" />\n  </div>\n)\n\nexport default App\n'},897:function(e,t){e.exports='/**\n * cn - 基本用法\n *    -- 最基本的用法\n * en - Base\n *    -- The basic usage\n */\nimport React from \'react\';\nimport { DatePicker } from \'shineout\';\nconst App = () => (<div>\n    <DatePicker type="date" placeholder="Select date"/>\n    <br />\n    <DatePicker type="datetime" style={{ marginTop: \'12px\' }} placeholder="Select datetime"/>\n  </div>);\nexport default App;\n'},898:function(e,t,n){"use strict";n.r(t);var b=n(23),h=n(0),D=n.n(h),g=n(319),P=n(127);t.default=function(){var e=Object(h.useState)(new Date),t=Object(b.a)(e,2),n=t[0],a=t[1],r=Object(h.useState)("yyyy-M-d HH:mm"),o=Object(b.a)(r,2),l=o[0],i=o[1],s=Object(h.useState)("yy/MM/dd"),c=Object(b.a)(s,2),d=c[0],u=c[1],p=Object(h.useState)(new Date),m=Object(b.a)(p,2),f=m[0],y=m[1];return D.a.createElement("div",null,D.a.createElement(g.a,{value:n,format:l,type:"datetime",placeholder:"format date",style:{marginBottom:5},onChange:function(e){return a(e)}}),D.a.createElement(P.a.Group,{width:240,style:{marginBottom:20}},D.a.createElement(P.a,{style:{flex:1},value:"format",disabled:!0}),D.a.createElement(P.a,{style:{flex:3},placeholder:"格式化",value:l,onChange:function(e){return i(e)}})),D.a.createElement(g.a,{type:"datetime",format:"yyyy-MM-dd HH:mm:ss",placeholder:"format date",value:f,formatResult:d,onChange:y,style:{marginBottom:5}}),D.a.createElement(P.a.Group,{width:240,style:{marginBottom:5},disabled:!0},D.a.createElement(P.a,{style:{flex:1},value:"value"}),D.a.createElement(P.a,{style:{flex:3},placeholder:"值",value:String(f)})),D.a.createElement(P.a.Group,{width:240,style:{marginBottom:20}},D.a.createElement(P.a,{style:{flex:3},value:"formatResult",disabled:!0}),D.a.createElement(P.a,{style:{flex:4},placeholder:"展示格式化",value:d,onChange:function(e){return u(e)}})))}},899:function(e,t){e.exports='/**\n * cn - 格式化\n *    -- 传入值可为 日期对象，时间戳，字符串，通过format 属性可以定义返回值的格式. <br />支持通过 formatResult 属性单独格式化值展示格式. <br /><br /> <b>注: 我们使用的格式化字符串(date-fns)和 moment 是不一致的, 如: <br /> <br /> moment: YYYY  => date-fns: yyyy <br /> moment: DD&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; => date-fns: dd <br /> moment: hh&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  => date-fns: HH  </b><br /><br /> 详细的请参照 <a href="#heading-3-Format">Format<a>\n * en - Format\n *    -- The format attribute defines the format of the return value.  <br /><br /> <b>tip: The format string we used (date-fns) and moment.js are inconsistent, such as: <br /> <br /> moment: YYYY  => date-fns: yyyy <br /> moment: DD&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; => date-fns: dd <br /> moment: hh&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  => date-fns: HH  </b><br /><br /> Please refer to the details <a href="#heading-3-Format">Format<a>\n */\nimport React, { useState } from \'react\'\nimport { DatePicker, Input, TYPE } from \'shineout\'\n\ntype DatePickerValue = TYPE.DatePicker.Value\ntype DatePickerProps = TYPE.DatePicker.Props<DatePickerValue>\ntype DatePickerFormat = DatePickerProps[\'format\']\ntype DatePickerOnChange = DatePickerProps[\'onChange\']\n\ntype InputProps = TYPE.Input.Props<string>\ntype InputOnChange = InputProps[\'onChange\']\n\nconst App: React.FC = () => {\n  const [value, setValue] = useState<DatePickerValue>(new Date())\n  const [format, setFormat] = useState<DatePickerFormat>(\'yyyy-M-d HH:mm\')\n  const [formatResult, setFormatResult] = useState<DatePickerFormat>(\'yy/MM/dd\')\n  const [formatResultValue, setFormatResultValue] = useState<DatePickerValue>(new Date())\n\n  const handleFormatChange: InputOnChange = v => setFormat(v)\n\n  const handleValueChange: DatePickerOnChange = v => setValue(v)\n\n  const handleFormatResultChange: InputOnChange = v => setFormatResult(v)\n\n  return (\n    <div>\n      <DatePicker\n        value={value}\n        format={format}\n        type="datetime"\n        placeholder="format date"\n        style={{ marginBottom: 5 }}\n        onChange={handleValueChange}\n      />\n\n      <Input.Group width={240} style={{ marginBottom: 20 }}>\n        <Input style={{ flex: 1 }} value="format" disabled />\n        <Input style={{ flex: 3 }} placeholder="格式化" value={format} onChange={handleFormatChange} />\n      </Input.Group>\n\n      <DatePicker\n        type="datetime"\n        format="yyyy-MM-dd HH:mm:ss"\n        placeholder="format date"\n        value={formatResultValue}\n        formatResult={formatResult}\n        onChange={setFormatResultValue}\n        style={{ marginBottom: 5 }}\n      />\n\n      <Input.Group width={240} style={{ marginBottom: 5 }} disabled>\n        <Input style={{ flex: 1 }} value="value" />\n        <Input style={{ flex: 3 }} placeholder="值" value={String(formatResultValue)} />\n      </Input.Group>\n\n      <Input.Group width={240} style={{ marginBottom: 20 }}>\n        <Input style={{ flex: 3 }} value="formatResult" disabled />\n        <Input style={{ flex: 4 }} placeholder="展示格式化" value={formatResult} onChange={handleFormatResultChange} />\n      </Input.Group>\n    </div>\n  )\n}\n\nexport default App\n'},900:function(e,t){e.exports='/**\n * cn - 格式化\n *    -- 传入值可为 日期对象，时间戳，字符串，通过format 属性可以定义返回值的格式. <br />支持通过 formatResult 属性单独格式化值展示格式. <br /><br /> <b>注: 我们使用的格式化字符串(date-fns)和 moment 是不一致的, 如: <br /> <br /> moment: YYYY  => date-fns: yyyy <br /> moment: DD&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; => date-fns: dd <br /> moment: hh&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  => date-fns: HH  </b><br /><br /> 详细的请参照 <a href="#heading-3-Format">Format<a>\n * en - Format\n *    -- The format attribute defines the format of the return value.  <br /><br /> <b>tip: The format string we used (date-fns) and moment.js are inconsistent, such as: <br /> <br /> moment: YYYY  => date-fns: yyyy <br /> moment: DD&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; => date-fns: dd <br /> moment: hh&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  => date-fns: HH  </b><br /><br /> Please refer to the details <a href="#heading-3-Format">Format<a>\n */\nimport React, { useState } from \'react\';\nimport { DatePicker, Input } from \'shineout\';\nconst App = () => {\n    const [value, setValue] = useState(new Date());\n    const [format, setFormat] = useState(\'yyyy-M-d HH:mm\');\n    const [formatResult, setFormatResult] = useState(\'yy/MM/dd\');\n    const [formatResultValue, setFormatResultValue] = useState(new Date());\n    const handleFormatChange = v => setFormat(v);\n    const handleValueChange = v => setValue(v);\n    const handleFormatResultChange = v => setFormatResult(v);\n    return (<div>\n      <DatePicker value={value} format={format} type="datetime" placeholder="format date" style={{ marginBottom: 5 }} onChange={handleValueChange}/>\n\n      <Input.Group width={240} style={{ marginBottom: 20 }}>\n        <Input style={{ flex: 1 }} value="format" disabled/>\n        <Input style={{ flex: 3 }} placeholder="格式化" value={format} onChange={handleFormatChange}/>\n      </Input.Group>\n\n      <DatePicker type="datetime" format="yyyy-MM-dd HH:mm:ss" placeholder="format date" value={formatResultValue} formatResult={formatResult} onChange={setFormatResultValue} style={{ marginBottom: 5 }}/>\n\n      <Input.Group width={240} style={{ marginBottom: 5 }} disabled>\n        <Input style={{ flex: 1 }} value="value"/>\n        <Input style={{ flex: 3 }} placeholder="值" value={String(formatResultValue)}/>\n      </Input.Group>\n\n      <Input.Group width={240} style={{ marginBottom: 20 }}>\n        <Input style={{ flex: 3 }} value="formatResult" disabled/>\n        <Input style={{ flex: 4 }} placeholder="展示格式化" value={formatResult} onChange={handleFormatResultChange}/>\n      </Input.Group>\n    </div>);\n};\nexport default App;\n'},901:function(e,t,n){"use strict";n.r(t);var a=n(0),r=n.n(a),o=n(319),l=Date.now(),i=["small","default","large"];t.default=function(){return r.a.createElement("div",null,i.map(function(e){return r.a.createElement("div",{key:e,style:{marginBottom:12}},r.a.createElement(o.a,{size:e,type:"datetime",style:{marginInlineEnd:12},defaultValue:l}),r.a.createElement(o.a,{size:e,style:{marginInlineEnd:12},defaultValue:l}),r.a.createElement(o.a,{size:e,type:"time",defaultValue:"12:12:12"}))}))}},902:function(e,t){e.exports="/**\n * cn - 尺寸\n *    -- 内置了三种尺寸，small、default、large\n * en - Size\n *    -- There are three built-in size: small、default、large.\n */\nimport React from 'react'\nimport { DatePicker, TYPE } from 'shineout'\n\ntype DatePickerValue = TYPE.DatePicker.Value\ntype DatePickerProps = TYPE.DatePicker.Props<DatePickerValue>\ntype DatePickerSize = DatePickerProps['size']\ntype DatePickerDefaultValue = DatePickerProps['defaultValue']\n\nconst Now: DatePickerDefaultValue = Date.now()\nconst Size: DatePickerSize[] = ['small', 'default', 'large']\n\nconst App: React.FC = () => (\n  <div>\n    {Size.map(size => (\n      <div key={size} style={{ marginBottom: 12 }}>\n        <DatePicker size={size} type=\"datetime\" style={{ marginInlineEnd: 12 }} defaultValue={Now} />\n        <DatePicker size={size} style={{ marginInlineEnd: 12 }} defaultValue={Now} />\n        <DatePicker size={size} type=\"time\" defaultValue=\"12:12:12\" />\n      </div>\n    ))}\n  </div>\n)\n\nexport default App\n"},903:function(e,t){e.exports="/**\n * cn - 尺寸\n *    -- 内置了三种尺寸，small、default、large\n * en - Size\n *    -- There are three built-in size: small、default、large.\n */\nimport React from 'react';\nimport { DatePicker } from 'shineout';\nconst Now = Date.now();\nconst Size = ['small', 'default', 'large'];\nconst App = () => (<div>\n    {Size.map(size => (<div key={size} style={{ marginBottom: 12 }}>\n        <DatePicker size={size} type=\"datetime\" style={{ marginInlineEnd: 12 }} defaultValue={Now}/>\n        <DatePicker size={size} style={{ marginInlineEnd: 12 }} defaultValue={Now}/>\n        <DatePicker size={size} type=\"time\" defaultValue=\"12:12:12\"/>\n      </div>))}\n  </div>);\nexport default App;\n"},904:function(e,t,n){"use strict";n.r(t);var a=n(0),r=n.n(a),o=n(319),l=Date.now();t.default=function(){return r.a.createElement(o.a,{type:"date",format:"yyyy-MM-dd",defaultValue:l})}},905:function(e,t){e.exports="/**\n * cn - 选择天\n *    -- 设置 type 为 date，选择 天\n * en - Day Mode\n *    -- Set type to be date to select day.\n */\nimport React from 'react'\nimport { DatePicker, TYPE } from 'shineout'\n\ntype DatePickerValue = TYPE.DatePicker.Value\ntype DatePickerProps = TYPE.DatePicker.Props<DatePickerValue>\ntype DatePickerDefaultValue = DatePickerProps['defaultValue']\n\nconst Now: DatePickerDefaultValue = Date.now()\n\nconst App: React.FC = () => <DatePicker type=\"date\" format=\"yyyy-MM-dd\" defaultValue={Now} />\n\nexport default App\n"},906:function(e,t){e.exports="/**\n * cn - 选择天\n *    -- 设置 type 为 date，选择 天\n * en - Day Mode\n *    -- Set type to be date to select day.\n */\nimport React from 'react';\nimport { DatePicker } from 'shineout';\nconst Now = Date.now();\nconst App = () => <DatePicker type=\"date\" format=\"yyyy-MM-dd\" defaultValue={Now}/>;\nexport default App;\n"},907:function(e,t,n){"use strict";n.r(t);var a=n(0),r=n.n(a),o=n(319),l=Date.now();t.default=function(){return r.a.createElement("div",null,r.a.createElement(o.a,{type:"datetime",min:l,placeholder:"Select min datetime"}),r.a.createElement("br",null),r.a.createElement(o.a,{min:l,type:"datetime",max:l+3456e5,style:{marginTop:"12px"},placeholder:"Select min/max datetime"}))}},908:function(e,t){e.exports='/**\n * cn - 最大最小时间\n *    -- 可以通过设置 min/max 去设置一个选择时间的最大最小值. 推荐在单选且datetime 类型下使用\n * en - min max date\n *    -- The basic usage\n */\nimport React from \'react\'\nimport { DatePicker, TYPE } from \'shineout\'\n\ntype DatePickerDateTimeType = TYPE.DatePicker.DateTimeType\n\nconst Now: DatePickerDateTimeType = Date.now()\n\nconst App: React.FC = () => (\n  <div>\n    <DatePicker type="datetime" min={Now} placeholder="Select min datetime" />\n\n    <br />\n\n    <DatePicker\n      min={Now}\n      type="datetime"\n      max={Now + 4 * 86400000}\n      style={{ marginTop: \'12px\' }}\n      placeholder="Select min/max datetime"\n    />\n  </div>\n)\n\nexport default App\n'},909:function(e,t){e.exports='/**\n * cn - 最大最小时间\n *    -- 可以通过设置 min/max 去设置一个选择时间的最大最小值. 推荐在单选且datetime 类型下使用\n * en - min max date\n *    -- The basic usage\n */\nimport React from \'react\';\nimport { DatePicker } from \'shineout\';\nconst Now = Date.now();\nconst App = () => (<div>\n    <DatePicker type="datetime" min={Now} placeholder="Select min datetime"/>\n\n    <br />\n\n    <DatePicker min={Now} type="datetime" max={Now + 4 * 86400000} style={{ marginTop: \'12px\' }} placeholder="Select min/max datetime"/>\n  </div>);\nexport default App;\n'},910:function(e,t,n){"use strict";n.r(t);var a=n(0),r=n.n(a),o=n(319),l=Date.now();t.default=function(){return r.a.createElement(o.a,{type:"week",defaultValue:l})}},911:function(e,t){e.exports="/**\n * cn - 选择星期\n *    -- 设置 type 为 week，选择星期\n * en - Week Mode\n *    -- Set type to be week to select week.\n */\nimport React from 'react'\nimport { DatePicker, TYPE } from 'shineout'\n\ntype DatePickerValue = TYPE.DatePicker.Value\ntype DatePickerProps = TYPE.DatePicker.Props<DatePickerValue>\ntype DatePickerDefaultValue = DatePickerProps['defaultValue']\n\nconst Now: DatePickerDefaultValue = Date.now()\n\nconst App: React.FC = () => <DatePicker type=\"week\" defaultValue={Now} />\n\nexport default App\n"},912:function(e,t){e.exports="/**\n * cn - 选择星期\n *    -- 设置 type 为 week，选择星期\n * en - Week Mode\n *    -- Set type to be week to select week.\n */\nimport React from 'react';\nimport { DatePicker } from 'shineout';\nconst Now = Date.now();\nconst App = () => <DatePicker type=\"week\" defaultValue={Now}/>;\nexport default App;\n"},913:function(e,t,n){"use strict";n.r(t);var a=n(0),r=n.n(a),o=n(319),l=Date.now();t.default=function(){return r.a.createElement(o.a,{type:"month",defaultValue:l})}},914:function(e,t){e.exports="/**\n * cn - 选择月\n *    -- 设置 type 为 month，选择月\n * en - Month Mode\n *    -- Set type to be month to select month.\n */\nimport React from 'react'\nimport { DatePicker, TYPE } from 'shineout'\n\ntype DatePickerValue = TYPE.DatePicker.Value\ntype DatePickerProps = TYPE.DatePicker.Props<DatePickerValue>\ntype DatePickerDefaultValue = DatePickerProps['defaultValue']\n\nconst Now: DatePickerDefaultValue = Date.now()\n\nconst App: React.FC = () => <DatePicker type=\"month\" defaultValue={Now} />\n\nexport default App\n"},915:function(e,t){e.exports="/**\n * cn - 选择月\n *    -- 设置 type 为 month，选择月\n * en - Month Mode\n *    -- Set type to be month to select month.\n */\nimport React from 'react';\nimport { DatePicker } from 'shineout';\nconst Now = Date.now();\nconst App = () => <DatePicker type=\"month\" defaultValue={Now}/>;\nexport default App;\n"},916:function(e,t,n){"use strict";n.r(t);var a=n(0),r=n.n(a),o=n(319),l=Date.now();t.default=function(){return r.a.createElement(o.a,{type:"quarter",defaultValue:l})}},917:function(e,t){e.exports="/**\n * cn - 选择季度\n *    -- 设置 type 为 quarter，选择季度\n * en - Quarter Mode\n *    -- Set type to be quarter to select month.\n */\nimport React from 'react'\nimport { DatePicker, TYPE } from 'shineout'\n\ntype DatePickerValue = TYPE.DatePicker.Value\ntype DatePickerProps = TYPE.DatePicker.Props<DatePickerValue>\ntype DatePickerDefaultValue = DatePickerProps['defaultValue']\n\nconst Now: DatePickerDefaultValue = Date.now()\n\nconst App: React.FC = () => <DatePicker type=\"quarter\" defaultValue={Now} />\n\nexport default App\n"},918:function(e,t){e.exports="/**\n * cn - 选择季度\n *    -- 设置 type 为 quarter，选择季度\n * en - Quarter Mode\n *    -- Set type to be quarter to select month.\n */\nimport React from 'react';\nimport { DatePicker } from 'shineout';\nconst Now = Date.now();\nconst App = () => <DatePicker type=\"quarter\" defaultValue={Now}/>;\nexport default App;\n"},919:function(e,t,n){"use strict";n.r(t);var a=n(0),r=n.n(a),o=n(319);t.default=function(){return r.a.createElement(o.a,{type:"year",defaultValue:Date.now()})}},920:function(e,t){e.exports="/**\n * cn - 选择年\n *    -- 设置 type 为 year，选择年\n * en - Year Mode\n *    -- Set type to be year to select year.\n */\nimport React from 'react'\nimport { DatePicker } from 'shineout'\n\nconst App: React.FC = () => <DatePicker type=\"year\" defaultValue={Date.now()} />\n\nexport default App\n"},921:function(e,t){e.exports="/**\n * cn - 选择年\n *    -- 设置 type 为 year，选择年\n * en - Year Mode\n *    -- Set type to be year to select year.\n */\nimport React from 'react';\nimport { DatePicker } from 'shineout';\nconst App = () => <DatePicker type=\"year\" defaultValue={Date.now()}/>;\nexport default App;\n"},922:function(e,t,n){"use strict";n.r(t);var a=n(0),r=n.n(a),o=n(319),l=Date.now(),i={marginInlineEnd:12};t.default=function(){return r.a.createElement("div",null,r.a.createElement(o.a,{style:i,type:"time",defaultValue:l}),r.a.createElement(o.a,{style:i,type:"time",format:"HH:mm",defaultValue:l}),r.a.createElement(o.a,{style:i,type:"time",format:"hh:mm a",defaultValue:l}))}},923:function(e,t){e.exports='/**\n * cn - 选择时间\n *    -- 设置 type 为 time，选择时间，根据 format 自动加载相应的选择列\n * en - Time Mode\n *    -- Set type to be time to select time and automatically load the corresponding selection column according to the format property.\n */\nimport React from \'react\'\nimport { DatePicker, TYPE } from \'shineout\'\n\ntype DatePickerValue = TYPE.DatePicker.Value\ntype DatePickerProps = TYPE.DatePicker.Props<DatePickerValue>\ntype DatePickerDefaultValue = DatePickerProps[\'defaultValue\']\n\nconst Now: DatePickerDefaultValue = Date.now()\n\nconst style = { marginInlineEnd: 12 }\n\nconst App: React.FC = () => (\n  <div>\n    <DatePicker style={style} type="time" defaultValue={Now} />\n    <DatePicker style={style} type="time" format="HH:mm" defaultValue={Now} />\n    <DatePicker style={style} type="time" format="hh:mm a" defaultValue={Now} />\n  </div>\n)\n\nexport default App\n'},924:function(e,t){e.exports='/**\n * cn - 选择时间\n *    -- 设置 type 为 time，选择时间，根据 format 自动加载相应的选择列\n * en - Time Mode\n *    -- Set type to be time to select time and automatically load the corresponding selection column according to the format property.\n */\nimport React from \'react\';\nimport { DatePicker } from \'shineout\';\nconst Now = Date.now();\nconst style = { marginInlineEnd: 12 };\nconst App = () => (<div>\n    <DatePicker style={style} type="time" defaultValue={Now}/>\n    <DatePicker style={style} type="time" format="HH:mm" defaultValue={Now}/>\n    <DatePicker style={style} type="time" format="hh:mm a" defaultValue={Now}/>\n  </div>);\nexport default App;\n'},925:function(e,t,n){"use strict";n.r(t);var a=n(0),r=n.n(a),o=n(319),l={marginInlineEnd:12};t.default=function(){return r.a.createElement("div",null,r.a.createElement(o.a,{placeholder:"Hour Step",style:l,type:"time",hourStep:2}),r.a.createElement(o.a,{placeholder:"Minute Step",style:l,type:"time",minuteStep:2}),r.a.createElement(o.a,{placeholder:"Second Step",style:l,type:"time",secondStep:2}))}},926:function(e,t){e.exports='/**\n * cn -\n *    -- 步进设置\n * en - Step\n *    -- Set step of TimePicker\n */\nimport React from \'react\'\nimport { DatePicker } from \'shineout\'\n\nconst style = { marginInlineEnd: 12 }\n\nconst step: number = 2\n\nconst App: React.FC = () => (\n  <div>\n    <DatePicker placeholder="Hour Step" style={style} type="time" hourStep={step} />\n    <DatePicker placeholder="Minute Step" style={style} type="time" minuteStep={step} />\n    <DatePicker placeholder="Second Step" style={style} type="time" secondStep={step} />\n  </div>\n)\n\nexport default App\n'},927:function(e,t){e.exports='/**\n * cn -\n *    -- 步进设置\n * en - Step\n *    -- Set step of TimePicker\n */\nimport React from \'react\';\nimport { DatePicker } from \'shineout\';\nconst style = { marginInlineEnd: 12 };\nconst step = 2;\nconst App = () => (<div>\n    <DatePicker placeholder="Hour Step" style={style} type="time" hourStep={step}/>\n    <DatePicker placeholder="Minute Step" style={style} type="time" minuteStep={step}/>\n    <DatePicker placeholder="Second Step" style={style} type="time" secondStep={step}/>\n  </div>);\nexport default App;\n'},928:function(e,t,n){"use strict";n.r(t);var a=n(0),r=n.n(a),o=n(319),l=Date.now();t.default=function(){return r.a.createElement(o.a,{type:"datetime",defaultValue:l})}},929:function(e,t){e.exports="/**\n * cn - 选择日期时间\n *    -- 设置 type 为 datetime，选择日期 + 时间\n * en - Datetime Mode\n *    -- Set type to be datetime to select date and time.\n */\nimport React from 'react'\nimport { DatePicker, TYPE } from 'shineout'\n\ntype DatePickerValue = TYPE.DatePicker.Value\ntype DatePickerProps = TYPE.DatePicker.Props<DatePickerValue>\ntype DatePickerDefaultValue = DatePickerProps['defaultValue']\n\nconst Now: DatePickerDefaultValue = Date.now()\n\nconst App: React.FC = () => <DatePicker type=\"datetime\" defaultValue={Now} />\n\nexport default App\n"},930:function(e,t){e.exports="/**\n * cn - 选择日期时间\n *    -- 设置 type 为 datetime，选择日期 + 时间\n * en - Datetime Mode\n *    -- Set type to be datetime to select date and time.\n */\nimport React from 'react';\nimport { DatePicker } from 'shineout';\nconst Now = Date.now();\nconst App = () => <DatePicker type=\"datetime\" defaultValue={Now}/>;\nexport default App;\n"},931:function(e,t,n){"use strict";n.r(t);var a=n(0),r=n.n(a),o=n(319),l={marginBottom:12},i=Date.now();t.default=function(){return r.a.createElement("div",null,r.a.createElement(o.a,{type:"date",style:l,range:1728e3,onChange:function(e){return console.log(e)},placeholder:["Start date","End date"]}),r.a.createElement("br",null),r.a.createElement(o.a,{type:"week",style:l,range:1728e3,onChange:function(e){return console.log(e)},placeholder:["Start week","End week"]}),r.a.createElement("br",null),r.a.createElement(o.a,{type:"month",style:l,range:864e4,onChange:function(e){return console.log(e)},placeholder:["First month","Last month"]}),r.a.createElement("br",null),r.a.createElement(o.a,{range:!0,type:"quarter",style:l,onChange:function(e){return console.log(e)},placeholder:["First quarter","Last quarter"]}),r.a.createElement("br",null),r.a.createElement(o.a,{range:!0,type:"year",style:l,onChange:function(e){return console.log(e)},placeholder:["First year","Last year"]}),r.a.createElement("br",null),r.a.createElement(o.a,{min:i,type:"time",style:l,format:"HH:mm",range:21600,placeholder:["Start time","End time"]}),r.a.createElement("br",null),r.a.createElement(o.a,{range:!0,style:l,type:"datetime",onChange:function(e){return console.log(e)},defaultTime:["00:00:00","23:59:59"],placeholder:["Start datetime","End datetime"]}),r.a.createElement("br",null),r.a.createElement(o.a,{range:!0,min:i,type:"datetime",max:i+3456e5,onChange:function(e){return console.log(e)},defaultTime:["02:33:33","14:33:33"],placeholder:["Start datetime","End datetime"]}))}},932:function(e,t){e.exports="/**\n * cn - 范围选择\n *    -- 设置 range 属性可以选择范围，输入和返回的 value 为长度为 2 的数组\n * en - Range\n *    --Set the range property to select range, the input value and return value is an array of length 2.\n */\nimport React from 'react'\nimport { DatePicker, TYPE } from 'shineout'\n\ntype DatePickerDateTimeType = TYPE.DatePicker.DateTimeType\n\nconst style = { marginBottom: 12 }\nconst Now: DatePickerDateTimeType = Date.now()\n\nconst App: React.FC = () => (\n  <div>\n    <DatePicker\n      type=\"date\"\n      style={style}\n      range={86400 * 20}\n      onChange={a => console.log(a)}\n      placeholder={['Start date', 'End date']}\n    />\n\n    <br />\n\n    <DatePicker\n      type=\"week\"\n      style={style}\n      range={86400 * 20}\n      onChange={a => console.log(a)}\n      placeholder={['Start week', 'End week']}\n    />\n\n    <br />\n\n    <DatePicker\n      type=\"month\"\n      style={style}\n      range={86400 * 100}\n      onChange={v => console.log(v)}\n      placeholder={['First month', 'Last month']}\n    />\n\n    <br />\n\n    <DatePicker\n      range\n      type=\"quarter\"\n      style={style}\n      onChange={v => console.log(v)}\n      placeholder={['First quarter', 'Last quarter']}\n    />\n\n    <br />\n\n    <DatePicker\n      range\n      type=\"year\"\n      style={style}\n      onChange={v => console.log(v)}\n      placeholder={['First year', 'Last year']}\n    />\n\n    <br />\n\n    <DatePicker\n      min={Now}\n      type=\"time\"\n      style={style}\n      format=\"HH:mm\"\n      range={3600 * 6}\n      placeholder={['Start time', 'End time']}\n    />\n\n    <br />\n\n    <DatePicker\n      range\n      style={style}\n      type=\"datetime\"\n      onChange={d => console.log(d)}\n      defaultTime={['00:00:00', '23:59:59']}\n      placeholder={['Start datetime', 'End datetime']}\n    />\n\n    <br />\n\n    <DatePicker\n      range\n      min={Now}\n      type=\"datetime\"\n      max={Now + 86400000 * 4}\n      onChange={d => console.log(d)}\n      defaultTime={['02:33:33', '14:33:33']}\n      placeholder={['Start datetime', 'End datetime']}\n    />\n  </div>\n)\n\nexport default App\n"},933:function(e,t){e.exports="/**\n * cn - 范围选择\n *    -- 设置 range 属性可以选择范围，输入和返回的 value 为长度为 2 的数组\n * en - Range\n *    --Set the range property to select range, the input value and return value is an array of length 2.\n */\nimport React from 'react';\nimport { DatePicker } from 'shineout';\nconst style = { marginBottom: 12 };\nconst Now = Date.now();\nconst App = () => (<div>\n    <DatePicker type=\"date\" style={style} range={86400 * 20} onChange={a => console.log(a)} placeholder={['Start date', 'End date']}/>\n\n    <br />\n\n    <DatePicker type=\"week\" style={style} range={86400 * 20} onChange={a => console.log(a)} placeholder={['Start week', 'End week']}/>\n\n    <br />\n\n    <DatePicker type=\"month\" style={style} range={86400 * 100} onChange={v => console.log(v)} placeholder={['First month', 'Last month']}/>\n\n    <br />\n\n    <DatePicker range type=\"quarter\" style={style} onChange={v => console.log(v)} placeholder={['First quarter', 'Last quarter']}/>\n\n    <br />\n\n    <DatePicker range type=\"year\" style={style} onChange={v => console.log(v)} placeholder={['First year', 'Last year']}/>\n\n    <br />\n\n    <DatePicker min={Now} type=\"time\" style={style} format=\"HH:mm\" range={3600 * 6} placeholder={['Start time', 'End time']}/>\n\n    <br />\n\n    <DatePicker range style={style} type=\"datetime\" onChange={d => console.log(d)} defaultTime={['00:00:00', '23:59:59']} placeholder={['Start datetime', 'End datetime']}/>\n\n    <br />\n\n    <DatePicker range min={Now} type=\"datetime\" max={Now + 86400000 * 4} onChange={d => console.log(d)} defaultTime={['02:33:33', '14:33:33']} placeholder={['Start datetime', 'End datetime']}/>\n  </div>);\nexport default App;\n"},934:function(e,t,n){"use strict";n.r(t);var a=n(0),r=n.n(a),o=n(319),l=new Date,i={marginBottom:12},s=Date.now()-2592e6,c=Date.now()+2592e6,d=[s,l],u=[l,c];t.default=function(){return r.a.createElement("div",null,r.a.createElement(o.a,{range:!0,type:"date",style:i,defaultRangeMonth:d,placeholder:["Start date","End date"]}),r.a.createElement("br",null),r.a.createElement(o.a,{range:!0,style:i,type:"datetime",defaultRangeMonth:u,placeholder:["Start datetime","End datetime"]}))}},935:function(e,t){e.exports="/**\n * cn - 默认月份\n *    -- 设置  defaultRangeMonth 可以设置范围选择的初始面板月份.优先级低于 value 和 defaultValue, 值为时间对象或者时间戳\n * en - Range\n *    --Set the range property to select range, the input value and return value is an array of length 2.\n */\nimport React from 'react'\nimport { DatePicker, TYPE } from 'shineout'\n\ntype DatePickerValue = TYPE.DatePicker.Value\ntype DatePickerDateTimeType = TYPE.DatePicker.DateTimeType\ntype DatePickerProps = TYPE.DatePicker.Props<DatePickerValue>\ntype DatePickerDefaultRangeMonth = DatePickerProps['defaultRangeMonth']\n\nconst today = new Date()\nconst style = { marginBottom: 12 }\nconst lastMonth: DatePickerDateTimeType = Date.now() - 86400000 * 30\nconst nextMonth: DatePickerDateTimeType = Date.now() + 86400000 * 30\nconst DateRangeLast: DatePickerDefaultRangeMonth = [lastMonth, today]\nconst DateRangeNext: DatePickerDefaultRangeMonth = [today, nextMonth]\n\nconst App: React.FC = () => (\n  <div>\n    <DatePicker\n      range\n      type=\"date\"\n      style={style}\n      defaultRangeMonth={DateRangeLast}\n      placeholder={['Start date', 'End date']}\n    />\n\n    <br />\n\n    <DatePicker\n      range\n      style={style}\n      type=\"datetime\"\n      defaultRangeMonth={DateRangeNext}\n      placeholder={['Start datetime', 'End datetime']}\n    />\n  </div>\n)\n\nexport default App\n"},936:function(e,t){e.exports="/**\n * cn - 默认月份\n *    -- 设置  defaultRangeMonth 可以设置范围选择的初始面板月份.优先级低于 value 和 defaultValue, 值为时间对象或者时间戳\n * en - Range\n *    --Set the range property to select range, the input value and return value is an array of length 2.\n */\nimport React from 'react';\nimport { DatePicker } from 'shineout';\nconst today = new Date();\nconst style = { marginBottom: 12 };\nconst lastMonth = Date.now() - 86400000 * 30;\nconst nextMonth = Date.now() + 86400000 * 30;\nconst DateRangeLast = [lastMonth, today];\nconst DateRangeNext = [today, nextMonth];\nconst App = () => (<div>\n    <DatePicker range type=\"date\" style={style} defaultRangeMonth={DateRangeLast} placeholder={['Start date', 'End date']}/>\n\n    <br />\n\n    <DatePicker range style={style} type=\"datetime\" defaultRangeMonth={DateRangeNext} placeholder={['Start datetime', 'End datetime']}/>\n  </div>);\nexport default App;\n"},937:function(e,t,n){"use strict";n.r(t);var a=n(0),r=n.n(a),o=n(319);t.default=function(){return r.a.createElement(o.a,{range:!0,allowSingle:!0,type:"datetime",style:{marginTop:"12px"},onChange:function(e){return console.log(e)},placeholder:["Start datetime","End datetime"]})}},938:function(e,t){e.exports="/**\n * cn - 允许单选\n *    -- 可以设置范围选择的时候只选择一侧.\n * en - allow single\n *    -- can set range select only select single\n */\nimport React from 'react'\nimport { DatePicker } from 'shineout'\n\nconst App: React.FC = () => (\n  <DatePicker\n    range\n    allowSingle\n    type=\"datetime\"\n    style={{ marginTop: '12px' }}\n    onChange={d => console.log(d)}\n    placeholder={['Start datetime', 'End datetime']}\n  />\n)\n\nexport default App\n"},939:function(e,t){e.exports="/**\n * cn - 允许单选\n *    -- 可以设置范围选择的时候只选择一侧.\n * en - allow single\n *    -- can set range select only select single\n */\nimport React from 'react';\nimport { DatePicker } from 'shineout';\nconst App = () => (<DatePicker range allowSingle type=\"datetime\" style={{ marginTop: '12px' }} onChange={d => console.log(d)} placeholder={['Start datetime', 'End datetime']}/>);\nexport default App;\n"},940:function(e,t,n){"use strict";n.r(t);var a=n(0),r=n.n(a),o=n(319),l=n(579),i=n.n(l),s=new Date,c="YYYY-MM-DD",d="YYYY-MM-DD 00:00:00",u="YYYY-MM-DD 23:59:59",p=[{name:"Today",value:i()(s).format(c)},{name:"A week later",value:i()(s).add(7,"day").format(c)},{name:"A month later",value:i()(s).add(30,"day").format(c)}],m=[{name:"Next Week",value:[i()(s).format(d),i()(s).add(7,"day").format(u)]},{name:"Last Week",value:[i()(s).add(-7,"day").format(d),i()(s).format(u)]},{name:"Next Month",value:[i()(s).format(d),i()(s).add(30,"day").format(u)]},{name:"Last Month",value:[i()(s).add(-30,"day").format(d),i()(s).format(u)]},{name:"special date",value:["2019-01-01 00:00:00","2019-12-31 23:59:59"]}];t.default=function(){return r.a.createElement("div",null,r.a.createElement(o.a,{range:!0,type:"datetime",onChange:function(e){return console.log(e)},quickSelect:m,placeholder:["Start datetime","End datetime"],style:{marginBottom:"12px",display:"block"}}),r.a.createElement(o.a,{placeholder:"Quick Date",quickSelect:p}))}},941:function(e,t){e.exports="/**\n * cn - 快速选择\n *    -- 可以配置一些快速选择的选项, 日期可以是 Date, 时间戳, 或者字符串,字符串需要和所格式填写的 format 一致\n * en - Quick select\n *    -- can configure some options for quick selection. The date can be Date, timestamp, or string. The string needs to be in the same format as the format.\n */\nimport React from 'react'\nimport { DatePicker, TYPE } from 'shineout'\nimport dayjs from 'dayjs'\n\ntype DatePickerQuickSelect = TYPE.DatePicker.QuickSelect\n\nconst today = new Date()\nconst fmt = 'YYYY-MM-DD'\nconst formatStart = 'YYYY-MM-DD 00:00:00'\nconst formatEnd = 'YYYY-MM-DD 23:59:59'\n\nconst QuickSelectData: DatePickerQuickSelect[] = [\n  { name: 'Today', value: dayjs(today).format(fmt) },\n  {\n    name: 'A week later',\n    value: dayjs(today)\n      .add(7, 'day')\n      .format(fmt),\n  },\n  {\n    name: 'A month later',\n    value: dayjs(today)\n      .add(30, 'day')\n      .format(fmt),\n  },\n]\nconst QuickSelectDataTime: DatePickerQuickSelect[] = [\n  {\n    name: 'Next Week',\n    value: [\n      dayjs(today).format(formatStart),\n      dayjs(today)\n        .add(7, 'day')\n        .format(formatEnd),\n    ],\n  },\n  {\n    name: 'Last Week',\n    value: [\n      dayjs(today)\n        .add(-7, 'day')\n        .format(formatStart),\n      dayjs(today).format(formatEnd),\n    ],\n  },\n  {\n    name: 'Next Month',\n    value: [\n      dayjs(today).format(formatStart),\n      dayjs(today)\n        .add(30, 'day')\n        .format(formatEnd),\n    ],\n  },\n  {\n    name: 'Last Month',\n    value: [\n      dayjs(today)\n        .add(-30, 'day')\n        .format(formatStart),\n      dayjs(today).format(formatEnd),\n    ],\n  },\n  {\n    name: 'special date',\n    value: ['2019-01-01 00:00:00', '2019-12-31 23:59:59'],\n  },\n]\n\nconst App: React.FC = () => (\n  <div>\n    <DatePicker\n      range\n      type=\"datetime\"\n      onChange={d => console.log(d)}\n      quickSelect={QuickSelectDataTime}\n      placeholder={['Start datetime', 'End datetime']}\n      style={{ marginBottom: '12px', display: 'block' }}\n    />\n\n    <DatePicker placeholder=\"Quick Date\" quickSelect={QuickSelectData} />\n  </div>\n)\n\nexport default App\n"},942:function(e,t){e.exports="/**\n * cn - 快速选择\n *    -- 可以配置一些快速选择的选项, 日期可以是 Date, 时间戳, 或者字符串,字符串需要和所格式填写的 format 一致\n * en - Quick select\n *    -- can configure some options for quick selection. The date can be Date, timestamp, or string. The string needs to be in the same format as the format.\n */\nimport React from 'react';\nimport { DatePicker } from 'shineout';\nimport dayjs from 'dayjs';\nconst today = new Date();\nconst fmt = 'YYYY-MM-DD';\nconst formatStart = 'YYYY-MM-DD 00:00:00';\nconst formatEnd = 'YYYY-MM-DD 23:59:59';\nconst QuickSelectData = [\n    { name: 'Today', value: dayjs(today).format(fmt) },\n    {\n        name: 'A week later',\n        value: dayjs(today)\n            .add(7, 'day')\n            .format(fmt),\n    },\n    {\n        name: 'A month later',\n        value: dayjs(today)\n            .add(30, 'day')\n            .format(fmt),\n    },\n];\nconst QuickSelectDataTime = [\n    {\n        name: 'Next Week',\n        value: [\n            dayjs(today).format(formatStart),\n            dayjs(today)\n                .add(7, 'day')\n                .format(formatEnd),\n        ],\n    },\n    {\n        name: 'Last Week',\n        value: [\n            dayjs(today)\n                .add(-7, 'day')\n                .format(formatStart),\n            dayjs(today).format(formatEnd),\n        ],\n    },\n    {\n        name: 'Next Month',\n        value: [\n            dayjs(today).format(formatStart),\n            dayjs(today)\n                .add(30, 'day')\n                .format(formatEnd),\n        ],\n    },\n    {\n        name: 'Last Month',\n        value: [\n            dayjs(today)\n                .add(-30, 'day')\n                .format(formatStart),\n            dayjs(today).format(formatEnd),\n        ],\n    },\n    {\n        name: 'special date',\n        value: ['2019-01-01 00:00:00', '2019-12-31 23:59:59'],\n    },\n];\nconst App = () => (<div>\n    <DatePicker range type=\"datetime\" onChange={d => console.log(d)} quickSelect={QuickSelectDataTime} placeholder={['Start datetime', 'End datetime']} style={{ marginBottom: '12px', display: 'block' }}/>\n\n    <DatePicker placeholder=\"Quick Date\" quickSelect={QuickSelectData}/>\n  </div>);\nexport default App;\n"},943:function(e,t,n){"use strict";n.r(t);var a=n(0),r=n.n(a),o=n(319),l=Date.now();t.default=function(){return r.a.createElement(o.a,{disabled:!0,defaultValue:l})}},944:function(e,t){e.exports="/**\n * cn - 禁用\n *    -- disabled 为 true 时，禁用整个日期选择。\n * en - Disabled\n *    -- When the disabled is true, disable all the date selection.\n */\nimport React from 'react'\nimport { DatePicker, TYPE } from 'shineout'\n\ntype DatePickerValue = TYPE.DatePicker.Value\ntype DatePickerProps = TYPE.DatePicker.Props<DatePickerValue>\ntype DatePickerDefaultValue = DatePickerProps['defaultValue']\n\nconst Now: DatePickerDefaultValue = Date.now()\n\nconst App: React.FC = () => <DatePicker disabled defaultValue={Now} />\n\nexport default App\n"},945:function(e,t){e.exports="/**\n * cn - 禁用\n *    -- disabled 为 true 时，禁用整个日期选择。\n * en - Disabled\n *    -- When the disabled is true, disable all the date selection.\n */\nimport React from 'react';\nimport { DatePicker } from 'shineout';\nconst Now = Date.now();\nconst App = () => <DatePicker disabled defaultValue={Now}/>;\nexport default App;\n"},946:function(e,t,n){"use strict";n.r(t);var a=n(0),r=n.n(a),o=n(319),l=n(579),i=n.n(l);t.default=function(){return r.a.createElement("div",null,r.a.createElement(o.a,{inputable:!0,type:"datetime",defaultValue:Date.now(),style:{marginInlineEnd:12},disabled:function(e){return[0,5,6].includes(i()(e).day())},disabledTime:"22:22:22"}))}},947:function(e,t){e.exports="/**\n * cn -\n *    -- 同时禁用日期和时间\n * en -\n *    -- Disable both special date and special time\n */\nimport React from 'react'\nimport { DatePicker } from 'shineout'\nimport dayjs from 'dayjs'\n\nexport default function() {\n  return (\n    <div>\n      <DatePicker\n        inputable\n        type=\"datetime\"\n        defaultValue={Date.now()}\n        style={{ marginInlineEnd: 12 }}\n        disabled={d => [0, 5, 6].includes(dayjs(d).day())}\n        disabledTime=\"22:22:22\"\n      />\n    </div>\n  )\n}\n"},948:function(e,t,n){"use strict";n.r(t);var a=n(0),r=n.n(a),o=n(319),l=n(579),i=n.n(l),s=Date.now();t.default=function(){return r.a.createElement("div",null,r.a.createElement(o.a,{type:"datetime",defaultValue:s,defaultTime:"10:00:00",style:{marginInlineEnd:12},disabledTime:function(e){return"12:00:00"===e},disabled:function(e){return[0,6].includes(i()(e).day())}}))}},949:function(e,t){e.exports="/**\n * cn -\n *    -- disabledTime 属性支持单独禁用时间。\n * en -\n *    -- The disabledTime attribute supports separate disable time.\n */\nimport React from 'react'\nimport { DatePicker, TYPE } from 'shineout'\nimport dayjs from 'dayjs'\n\ntype DatePickerValue = TYPE.DatePicker.Value\ntype DatePickerProps = TYPE.DatePicker.Props<DatePickerValue>\ntype DatePickerDefaultValue = DatePickerProps['defaultValue']\n\nconst Now: DatePickerDefaultValue = Date.now()\n\nconst App: React.FC = () => (\n  <div>\n    <DatePicker\n      type=\"datetime\"\n      defaultValue={Now}\n      defaultTime=\"10:00:00\"\n      style={{ marginInlineEnd: 12 }}\n      disabledTime={time => time === '12:00:00'}\n      disabled={d => [0, 6].includes(dayjs(d).day())}\n    />\n  </div>\n)\n\nexport default App\n"},950:function(e,t){e.exports="/**\n * cn -\n *    -- disabledTime 属性支持单独禁用时间。\n * en -\n *    -- The disabledTime attribute supports separate disable time.\n */\nimport React from 'react';\nimport { DatePicker } from 'shineout';\nimport dayjs from 'dayjs';\nconst Now = Date.now();\nconst App = () => (<div>\n    <DatePicker type=\"datetime\" defaultValue={Now} defaultTime=\"10:00:00\" style={{ marginInlineEnd: 12 }} disabledTime={time => time === '12:00:00'} disabled={d => [0, 6].includes(dayjs(d).day())}/>\n  </div>);\nexport default App;\n"},951:function(e,t,n){"use strict";n.r(t);var a=n(0),r=n.n(a),o=n(319),l=n(579),i=n.n(l),s=Date.now();t.default=function(){return r.a.createElement("div",null,r.a.createElement(o.a,{type:"datetime",defaultValue:s,style:{marginInlineEnd:12},disabled:function(e){return[0,6].includes(i()(e).day())}}),r.a.createElement(o.a,{type:"time",defaultValue:"12:12:12",disabled:function(e){return 15<e.getHours()}}))}},952:function(e,t){e.exports="/**\n * cn -\n *    -- disabled 为函数时，禁用返回为true的选项, disable 应该用于禁用一些特殊的时间, 如果需要使用比如现在以前的时间不能选择的, 推荐使用 min/max。（注意：如果只想单独禁用时间，可使用 disabledTime 属性。）\n * en -\n *    -- When the disabled is a function, disbale should be used to disable some special time, if you need to use such as now before the time can not be selected, it is recommended to use min/max. (Note: If you only want to disable the time alone, you can use the disabledTime attribute.)\n */\nimport React from 'react'\nimport { DatePicker, TYPE } from 'shineout'\nimport dayjs from 'dayjs'\n\ntype DatePickerValue = TYPE.DatePicker.Value\ntype DatePickerProps = TYPE.DatePicker.Props<DatePickerValue>\ntype DatePickerDefaultValue = DatePickerProps['defaultValue']\n\nconst Now: DatePickerDefaultValue = Date.now()\n\nconst App: React.FC = () => (\n  <div>\n    <DatePicker\n      type=\"datetime\"\n      defaultValue={Now}\n      style={{ marginInlineEnd: 12 }}\n      disabled={d => [0, 6].includes(dayjs(d).day())}\n    />\n\n    <DatePicker\n      type=\"time\"\n      defaultValue=\"12:12:12\"\n      disabled={d => {\n        if (d.getHours() > 15) return true\n        return false\n      }}\n    />\n  </div>\n)\n\nexport default App\n"},953:function(e,t){e.exports="/**\n * cn -\n *    -- disabled 为函数时，禁用返回为true的选项, disable 应该用于禁用一些特殊的时间, 如果需要使用比如现在以前的时间不能选择的, 推荐使用 min/max。（注意：如果只想单独禁用时间，可使用 disabledTime 属性。）\n * en -\n *    -- When the disabled is a function, disbale should be used to disable some special time, if you need to use such as now before the time can not be selected, it is recommended to use min/max. (Note: If you only want to disable the time alone, you can use the disabledTime attribute.)\n */\nimport React from 'react';\nimport { DatePicker } from 'shineout';\nimport dayjs from 'dayjs';\nconst Now = Date.now();\nconst App = () => (<div>\n    <DatePicker type=\"datetime\" defaultValue={Now} style={{ marginInlineEnd: 12 }} disabled={d => [0, 6].includes(dayjs(d).day())}/>\n\n    <DatePicker type=\"time\" defaultValue=\"12:12:12\" disabled={d => {\n        if (d.getHours() > 15)\n            return true;\n        return false;\n    }}/>\n  </div>);\nexport default App;\n"},954:function(e,t,n){"use strict";n.r(t);var a=n(0),r=n.n(a),o=n(319),l=Date.now();t.default=function(){return r.a.createElement("div",null,r.a.createElement(o.a,{placeholder:"Input date",inputable:!0,style:{marginInlineEnd:12}}),r.a.createElement(o.a,{type:"datetime",inputable:!0,defaultValue:l}),r.a.createElement("br",null),r.a.createElement(o.a,{range:!0,inputable:!0,defaultValue:[l-864e6,new Date],style:{marginTop:12}}))}},955:function(e,t){e.exports="/**\n * cn - 可输入\n *    -- 设置 inputable 使日期可输入\n * en - Inputable\n *    -- Set inputable to true, you can change the value by input\n */\nimport React from 'react'\nimport { DatePicker, TYPE } from 'shineout'\n\ntype DatePickerValue = TYPE.DatePicker.Value\ntype DatePickerProps = TYPE.DatePicker.Props<DatePickerValue>\ntype DatePickerDefaultValue = DatePickerProps['defaultValue']\n\nconst Now: DatePickerDefaultValue = Date.now()\n\nconst App: React.FC = () => (\n  <div>\n    <DatePicker placeholder=\"Input date\" inputable style={{ marginInlineEnd: 12 }} />\n\n    <DatePicker type=\"datetime\" inputable defaultValue={Now} />\n\n    <br />\n\n    <DatePicker range inputable defaultValue={[Now - 864000000, new Date()]} style={{ marginTop: 12 }} />\n  </div>\n)\n\nexport default App\n"},956:function(e,t){e.exports="/**\n * cn - 可输入\n *    -- 设置 inputable 使日期可输入\n * en - Inputable\n *    -- Set inputable to true, you can change the value by input\n */\nimport React from 'react';\nimport { DatePicker } from 'shineout';\nconst Now = Date.now();\nconst App = () => (<div>\n    <DatePicker placeholder=\"Input date\" inputable style={{ marginInlineEnd: 12 }}/>\n\n    <DatePicker type=\"datetime\" inputable defaultValue={Now}/>\n\n    <br />\n\n    <DatePicker range inputable defaultValue={[Now - 864000000, new Date()]} style={{ marginTop: 12 }}/>\n  </div>);\nexport default App;\n"},957:function(e,t,n){"use strict";n.r(t);var a=n(0),r=n.n(a),o=n(319),l=Date.now();t.default=function(){return r.a.createElement("div",{style:{padding:10,height:150,overflow:"hidden"}},r.a.createElement(o.a,{absolute:!0,format:"t",type:"datetime",defaultValue:new Date,style:{marginBottom:8},formatResult:"yyyy-MM-dd HH:mm:ss"}),r.a.createElement("br",null),r.a.createElement(o.a,{absolute:!0,inputable:!0,range:!0,defaultValue:["2018-05-25","2018-06-05"],style:{marginBottom:8}}),r.a.createElement("br",null),r.a.createElement(o.a,{absolute:!0,type:"time",defaultValue:l}))}},958:function(e,t){e.exports="/**\n * cn - 绝对定位\n *    -- 如果选项弹出层的父容器被遮挡，可以设置 absolute 属性使弹出选项在单独层中渲染。（非必要情况下不建议）\n * en - Absolute\n *    -- If the parent container of the pop-up layer is occluded, you can set the absolute property to make the pop-up options rendered in a separate layer. (not recommended if not necessary)\n */\nimport React from 'react'\nimport { DatePicker, TYPE } from 'shineout'\n\ntype DatePickerValue = TYPE.DatePicker.Value\ntype DatePickerProps = TYPE.DatePicker.Props<DatePickerValue>\ntype DatePickerDefaultValue = DatePickerProps['defaultValue']\n\nconst Now: DatePickerDefaultValue = Date.now()\n\nconst App: React.FC = () => (\n  <div style={{ padding: 10, height: 150, overflow: 'hidden' }}>\n    <DatePicker\n      absolute\n      format=\"t\"\n      type=\"datetime\"\n      defaultValue={new Date()}\n      style={{ marginBottom: 8 }}\n      formatResult=\"yyyy-MM-dd HH:mm:ss\"\n    />\n    <br />\n    <DatePicker absolute inputable range defaultValue={['2018-05-25', '2018-06-05']} style={{ marginBottom: 8 }} />\n    <br />\n    <DatePicker absolute type=\"time\" defaultValue={Now} />\n  </div>\n)\n\nexport default App\n"},959:function(e,t){e.exports="/**\n * cn - 绝对定位\n *    -- 如果选项弹出层的父容器被遮挡，可以设置 absolute 属性使弹出选项在单独层中渲染。（非必要情况下不建议）\n * en - Absolute\n *    -- If the parent container of the pop-up layer is occluded, you can set the absolute property to make the pop-up options rendered in a separate layer. (not recommended if not necessary)\n */\nimport React from 'react';\nimport { DatePicker } from 'shineout';\nconst Now = Date.now();\nconst App = () => (<div style={{ padding: 10, height: 150, overflow: 'hidden' }}>\n    <DatePicker absolute format=\"t\" type=\"datetime\" defaultValue={new Date()} style={{ marginBottom: 8 }} formatResult=\"yyyy-MM-dd HH:mm:ss\"/>\n    <br />\n    <DatePicker absolute inputable range defaultValue={['2018-05-25', '2018-06-05']} style={{ marginBottom: 8 }}/>\n    <br />\n    <DatePicker absolute type=\"time\" defaultValue={Now}/>\n  </div>);\nexport default App;\n"},960:function(e,t,n){"use strict";n.r(t);var a=n(0),r=n.n(a),o=n(319);t.default=function(){return r.a.createElement("div",null,r.a.createElement(o.a,{type:"date",innerTitle:"Select date",clearable:!0,style:{marginBottom:8}}),r.a.createElement("br",null),r.a.createElement(o.a,{range:!0,innerTitle:"Select date",clearable:!0,style:{marginBottom:8}}),r.a.createElement("br",null),r.a.createElement(o.a,{type:"datetime",inputable:!0,clearable:!0,innerTitle:"Select datetime"}))}},961:function(e,t){e.exports='/**\n * cn - 内嵌标题\n *    -- 使用 innerTitle 展示内嵌标题\n * en - inner title\n *    -- -- use innerTitle to display the inner title\n */\nimport React from \'react\'\nimport { DatePicker } from \'shineout\'\n\nconst App: React.FC = () => (\n  <div>\n    <DatePicker type="date" innerTitle="Select date" clearable style={{ marginBottom: 8 }} />\n\n    <br />\n\n    <DatePicker range innerTitle="Select date" clearable style={{ marginBottom: 8 }} />\n\n    <br />\n\n    <DatePicker type="datetime" inputable clearable innerTitle="Select datetime" />\n  </div>\n)\n\nexport default App\n'},962:function(e,t){e.exports='/**\n * cn - 内嵌标题\n *    -- 使用 innerTitle 展示内嵌标题\n * en - inner title\n *    -- -- use innerTitle to display the inner title\n */\nimport React from \'react\';\nimport { DatePicker } from \'shineout\';\nconst App = () => (<div>\n    <DatePicker type="date" innerTitle="Select date" clearable style={{ marginBottom: 8 }}/>\n\n    <br />\n\n    <DatePicker range innerTitle="Select date" clearable style={{ marginBottom: 8 }}/>\n\n    <br />\n\n    <DatePicker type="datetime" inputable clearable innerTitle="Select datetime"/>\n  </div>);\nexport default App;\n'},963:function(e,t,n){"use strict";n.r(t);var a=n(0),r=n.n(a),o=n(319),l={marginRight:"12px"};t.default=function(){return r.a.createElement("div",null,r.a.createElement(o.a,{style:l,type:"date",placeholder:"left-top",position:"left-top"}),r.a.createElement(o.a,{style:l,type:"date",placeholder:"right-top",position:"right-top"}),r.a.createElement(o.a,{style:l,type:"date",placeholder:"left-bottom",position:"left-bottom"}),r.a.createElement(o.a,{style:l,type:"date",placeholder:"right-bottom",position:"right-bottom"}))}},964:function(e,t){e.exports='/**\n * cn - 弹出框位置\n *    -- 通过设置 position 指定弹出面板的位置。默认为自动\n * en - Position\n *    -- Set Position can control the different position of DatePicker\n */\nimport React from \'react\'\nimport { DatePicker } from \'shineout\'\n\nconst style = { marginRight: \'12px\' }\n\nconst App: React.FC = () => (\n  <div>\n    <DatePicker style={style} type="date" placeholder="left-top" position="left-top" />\n    <DatePicker style={style} type="date" placeholder="right-top" position="right-top" />\n    <DatePicker style={style} type="date" placeholder="left-bottom" position="left-bottom" />\n    <DatePicker style={style} type="date" placeholder="right-bottom" position="right-bottom" />\n  </div>\n)\n\nexport default App\n'},965:function(e,t){e.exports='/**\n * cn - 弹出框位置\n *    -- 通过设置 position 指定弹出面板的位置。默认为自动\n * en - Position\n *    -- Set Position can control the different position of DatePicker\n */\nimport React from \'react\';\nimport { DatePicker } from \'shineout\';\nconst style = { marginRight: \'12px\' };\nconst App = () => (<div>\n    <DatePicker style={style} type="date" placeholder="left-top" position="left-top"/>\n    <DatePicker style={style} type="date" placeholder="right-top" position="right-top"/>\n    <DatePicker style={style} type="date" placeholder="left-bottom" position="left-bottom"/>\n    <DatePicker style={style} type="date" placeholder="right-bottom" position="right-bottom"/>\n  </div>);\nexport default App;\n'},966:function(e,t,n){"use strict";n.r(t);var r=n(23),o=n(0),l=n.n(o),i=n(319),s=n(202),c=new Array(26).fill(void 0).map(function(e,t){var n=t-12,a=Math.abs(n),r=a<10?"0".concat(a):"".concat(a);return"".concat(n<0?"-":"+").concat(r)});t.default=function(){var e=Object(o.useState)("+08"),t=Object(r.a)(e,2),n=t[0],a=t[1];return l.a.createElement("div",null,l.a.createElement(i.a,{format:"T",timeZone:n,type:"datetime",defaultValue:new Date,placeholder:"Select datetime",onChange:function(e){return console.log(e)},formatResult:"yyyy-MM-dd HH:mm:ss"}),l.a.createElement(s.a,{keygen:!0,width:90,value:n,data:c,onChange:function(e){return a(e)},style:{marginInlineStart:12}}))}},967:function(e,t){e.exports="/**\n * cn - 时区\n *    -- 设置 timeZone\n * en - timeZone\n *    -- set timeZone\n */\nimport React, { useState } from 'react'\nimport { DatePicker, Select, TYPE } from 'shineout'\n\ntype DatePickerValue = TYPE.DatePicker.Value\ntype DatePickerProps = TYPE.DatePicker.Props<DatePickerValue>\ntype DateTimeZone = DatePickerProps['timeZone']\n\nconst offsetList = new Array(26).fill(undefined).map((_, index) => {\n  const num = index - 12\n  const abs = Math.abs(num)\n  const str = abs < 10 ? `0${abs}` : `${abs}`\n  return `${num < 0 ? '-' : '+'}${str}`\n})\n\nconst App: React.FC = () => {\n  const [tz, setTz] = useState<DateTimeZone>('+08')\n  return (\n    <div>\n      <DatePicker\n        format=\"T\"\n        timeZone={tz}\n        type=\"datetime\"\n        defaultValue={new Date()}\n        placeholder=\"Select datetime\"\n        onChange={d => console.log(d)}\n        formatResult=\"yyyy-MM-dd HH:mm:ss\"\n      />\n      <Select\n        keygen\n        width={90}\n        value={tz}\n        data={offsetList}\n        onChange={v => setTz(v)}\n        style={{ marginInlineStart: 12 }}\n      />\n    </div>\n  )\n}\n\nexport default App\n"},968:function(e,t){e.exports="/**\n * cn - 时区\n *    -- 设置 timeZone\n * en - timeZone\n *    -- set timeZone\n */\nimport React, { useState } from 'react';\nimport { DatePicker, Select } from 'shineout';\nconst offsetList = new Array(26).fill(undefined).map((_, index) => {\n    const num = index - 12;\n    const abs = Math.abs(num);\n    const str = abs < 10 ? `0${abs}` : `${abs}`;\n    return `${num < 0 ? '-' : '+'}${str}`;\n});\nconst App = () => {\n    const [tz, setTz] = useState('+08');\n    return (<div>\n      <DatePicker format=\"T\" timeZone={tz} type=\"datetime\" defaultValue={new Date()} placeholder=\"Select datetime\" onChange={d => console.log(d)} formatResult=\"yyyy-MM-dd HH:mm:ss\"/>\n      <Select keygen width={90} value={tz} data={offsetList} onChange={v => setTz(v)} style={{ marginInlineStart: 12 }}/>\n    </div>);\n};\nexport default App;\n"},969:function(e,t,n){"use strict";n.r(t);var a=n(0),r=n.n(a),o=n(319);t.default=function(){return r.a.createElement("div",null,r.a.createElement(o.a,{clearable:!0,defaultValue:"2022-02-22",onChange:function(e){console.log(e)},type:"date",placeholder:"Select date"}))}},970:function(e,t){e.exports='/**\n * cn - 可清空\n *    -- 允许清空内容\n * en - Clearable\n *    -- Could be clearable\n */\nimport React from \'react\'\nimport { DatePicker } from \'shineout\'\n\nconst App: React.FC = () => (\n  <div>\n    <DatePicker\n      clearable\n      defaultValue="2022-02-22"\n      onChange={v => {\n        console.log(v)\n      }}\n      type="date"\n      placeholder="Select date"\n    />\n  </div>\n)\nexport default App\n'},971:function(e,t){e.exports='/**\n * cn - 可清空\n *    -- 允许清空内容\n * en - Clearable\n *    -- Could be clearable\n */\nimport React from \'react\';\nimport { DatePicker } from \'shineout\';\nconst App = () => (<div>\n    <DatePicker clearable defaultValue="2022-02-22" onChange={v => {\n        console.log(v);\n    }} type="date" placeholder="Select date"/>\n  </div>);\nexport default App;\n'},972:function(e,t,n){"use strict";n.r(t);var r=n(23),o=n(0),l=n.n(o),i=n(319),s=n(127);t.default=function(){var e=Object(o.useState)("2022-02-22"),t=Object(r.a)(e,2),n=t[0],a=t[1];return l.a.createElement("div",null,l.a.createElement(i.a,{clearable:!0,type:"date",value:n,clearWithUndefined:!0,onChange:a,style:{marginBottom:5},placeholder:"Select date"}),l.a.createElement("br",null),l.a.createElement(s.a.Group,{style:{width:150},disabled:!0},l.a.createElement("b",null,"Value"),l.a.createElement(s.a,{value:String(n)})))}},973:function(e,t){e.exports="/**\n * cn -\n *    -- 在清空值时抛出抛出 undefined\n * en -\n *    -- onChange get undefined while clear value\n */\nimport React, { useState } from 'react'\nimport { DatePicker, Input, TYPE } from 'shineout'\n\ntype DatePickerValue = TYPE.DatePicker.Value\n\nconst App: React.FC = () => {\n  const [value, setValue] = useState<DatePickerValue>('2022-02-22')\n  return (\n    <div>\n      <DatePicker\n        clearable\n        type=\"date\"\n        value={value}\n        clearWithUndefined\n        onChange={setValue}\n        style={{ marginBottom: 5 }}\n        placeholder=\"Select date\"\n      />\n\n      <br />\n\n      <Input.Group style={{ width: 150 }} disabled>\n        <b>Value</b>\n        <Input value={String(value)} />\n      </Input.Group>\n    </div>\n  )\n}\nexport default App\n"},974:function(e,t){e.exports="/**\n * cn -\n *    -- 在清空值时抛出抛出 undefined\n * en -\n *    -- onChange get undefined while clear value\n */\nimport React, { useState } from 'react';\nimport { DatePicker, Input } from 'shineout';\nconst App = () => {\n    const [value, setValue] = useState('2022-02-22');\n    return (<div>\n      <DatePicker clearable type=\"date\" value={value} clearWithUndefined onChange={setValue} style={{ marginBottom: 5 }} placeholder=\"Select date\"/>\n\n      <br />\n\n      <Input.Group style={{ width: 150 }} disabled>\n        <b>Value</b>\n        <Input value={String(value)}/>\n      </Input.Group>\n    </div>);\n};\nexport default App;\n"},975:function(e,t,n){"use strict";n.r(t);var a=n(0),r=n.n(a),o=n(319);t.default=function(){return r.a.createElement("div",null,r.a.createElement(o.a,{defaultPickerValue:"2022-09",type:"date",placeholder:"Select date",style:{marginBottom:12}}),r.a.createElement("br",null),r.a.createElement(o.a,{range:!0,type:"date",placeholder:["Start date","End date"],defaultPickerValue:["2022-11","2022-12"]}))}},976:function(e,t){e.exports="/**\n * cn - 面板默认时间\n *    -- 打开面板后的默认时间，仅在未选择日期时生效\n * en - DefaultPickerValue\n *    -- default date of panel，work under has no value\n */\nimport React from 'react'\nimport { DatePicker } from 'shineout'\n\nconst App: React.FC = () => (\n  <div>\n    <DatePicker defaultPickerValue=\"2022-09\" type=\"date\" placeholder=\"Select date\" style={{ marginBottom: 12 }} />\n\n    <br />\n\n    <DatePicker\n      range\n      type=\"date\"\n      placeholder={['Start date', 'End date']}\n      defaultPickerValue={['2022-11', '2022-12']}\n    />\n  </div>\n)\n\nexport default App\n"},977:function(e,t){e.exports="/**\n * cn - 面板默认时间\n *    -- 打开面板后的默认时间，仅在未选择日期时生效\n * en - DefaultPickerValue\n *    -- default date of panel，work under has no value\n */\nimport React from 'react';\nimport { DatePicker } from 'shineout';\nconst App = () => (<div>\n    <DatePicker defaultPickerValue=\"2022-09\" type=\"date\" placeholder=\"Select date\" style={{ marginBottom: 12 }}/>\n\n    <br />\n\n    <DatePicker range type=\"date\" placeholder={['Start date', 'End date']} defaultPickerValue={['2022-11', '2022-12']}/>\n  </div>);\nexport default App;\n"},978:function(e,t,n){"use strict";n.r(t);var l=n(23),a=n(0),i=n.n(a),s=n(319),r=function(r){var e=i.a.useState(),t=Object(l.a)(e,2),n=t[0],o=t[1];return i.a.useEffect(function(){console.log(n,r.value),r.value!==n&&o(r.value)},[n,r.value]),i.a.createElement(s.a,Object.assign({type:"date",placeholder:"Select date"},r,{value:n,onChange:function(e){o(e);for(var t=arguments.length,n=new Array(1<t?t-1:0),a=1;a<t;a++)n[a-1]=arguments[a];r.onChange.apply(r,[e].concat(n))}}))};t.default=function(){var e=i.a.useState(),t=Object(l.a)(e,2),n=t[0],a=t[1];return i.a.createElement(r,{value:n,onChange:function(e){var t=e.split("-").map(function(e){return Number.parseInt(e,10)});new Date(t[0],t[1]-1,t[2]).valueOf()>Date.now()?a(new Date):a(e)}})}},979:function(e,t){e.exports="/**\n * cn - 完全受控\n *    -- 通过封装实现完全受控\n * en - 完全受控\n *    -- 通过封装实现完全受控\n */\nimport React from 'react'\nimport { DatePicker } from 'shineout'\n\nconst App = (props: any) => {\n  const [v, setV] = React.useState()\n  React.useEffect(\n    () => {\n      console.log(v, props.value)\n      if (props.value !== v) {\n        setV(props.value)\n      }\n    },\n    [v, props.value]\n  )\n  return (\n    <DatePicker\n      type=\"date\"\n      placeholder=\"Select date\"\n      {...props}\n      value={v}\n      onChange={(d: any, ...rest) => {\n        setV(d)\n        props.onChange(d, ...rest)\n      }}\n    />\n  )\n}\n\nconst App1 = () => {\n  const [v, setV] = React.useState<string | Date>()\n  return (\n    <App\n      value={v}\n      onChange={(d: string) => {\n        const arr = d.split('-').map(i => Number.parseInt(i, 10))\n        const date = new Date(arr[0], arr[1] - 1, arr[2])\n        if (date.valueOf() > Date.now()) {\n          setV(new Date())\n        } else {\n          setV(d)\n        }\n      }}\n    />\n  )\n}\n\nexport default App1\n"},980:function(e,t){e.exports="/**\n * cn - 完全受控\n *    -- 通过封装实现完全受控\n * en - 完全受控\n *    -- 通过封装实现完全受控\n */\nimport React from 'react';\nimport { DatePicker } from 'shineout';\nconst App = (props) => {\n    const [v, setV] = React.useState();\n    React.useEffect(() => {\n        console.log(v, props.value);\n        if (props.value !== v) {\n            setV(props.value);\n        }\n    }, [v, props.value]);\n    return (<DatePicker type=\"date\" placeholder=\"Select date\" {...props} value={v} onChange={(d, ...rest) => {\n            setV(d);\n            props.onChange(d, ...rest);\n        }}/>);\n};\nconst App1 = () => {\n    const [v, setV] = React.useState();\n    return (<App value={v} onChange={(d) => {\n            const arr = d.split('-').map(i => Number.parseInt(i, 10));\n            const date = new Date(arr[0], arr[1] - 1, arr[2]);\n            if (date.valueOf() > Date.now()) {\n                setV(new Date());\n            }\n            else {\n                setV(d);\n            }\n        }}/>);\n};\nexport default App1;\n"},981:function(e,t,n){"use strict";n.r(t);var a=n(0),r=n.n(a),o=n(319),l=new Date("2022/02/24 23:59:59");t.default=function(){return r.a.createElement("div",null,r.a.createElement(o.a,{type:"datetime",defaultValue:["2022-02-17 00:00:00","2022-02-24 00:00:00"],range:604800,style:{marginTop:"12px"},placeholder:"Select datetime",max:l}))}},982:function(e,t){e.exports="/**\n * cn - timepicker range max\n *    -- timepicker max 和 range 一起使用导致禁用逻辑错误\n */\nimport React from 'react'\nimport { DatePicker } from 'shineout'\n\nconst date = new Date('2022/02/24 23:59:59')\n\nconst App = () => (\n  <div>\n    <DatePicker\n      type=\"datetime\"\n      defaultValue={['2022-02-17 00:00:00', '2022-02-24 00:00:00']}\n      range={7 * 24 * 3600}\n      style={{ marginTop: '12px' }}\n      placeholder=\"Select datetime\"\n      max={date}\n    />\n  </div>\n)\nexport default App\n"},983:function(e,t){e.exports="/**\n * cn - timepicker range max\n *    -- timepicker max 和 range 一起使用导致禁用逻辑错误\n */\nimport React from 'react';\nimport { DatePicker } from 'shineout';\nconst date = new Date('2022/02/24 23:59:59');\nconst App = () => (<div>\n    <DatePicker type=\"datetime\" defaultValue={['2022-02-17 00:00:00', '2022-02-24 00:00:00']} range={7 * 24 * 3600} style={{ marginTop: '12px' }} placeholder=\"Select datetime\" max={date}/>\n  </div>);\nexport default App;\n"}}]);