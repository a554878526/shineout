(window.webpackJsonpShineoutDoc=window.webpackJsonpShineoutDoc||[]).push([[8],{700:function(n,t,e){"use strict";e.r(t);var a=e(0),o=e.n(a),r=e(565),u=e(566),i=e(40),l=e(701),s=e.n(l),p=e(702),c=e.n(p),d=Object(i.b)(s.a,c.a),m=[{name:"1-base",isTs:!0,isTest:!1,title:Object(i.b)("基本用法 \n Button 内置了几种常用的类型，分为默认(default), 主要(primary), 次要(secondary), 成功(success), 警告(warning), 危险(danger)和链接(link)","Base \n Button has several built-in type, default, primary, secondary, success, warning, dange, and link."),component:e(703).default,rawText:e(704),parseTsText:e(705)},{name:"1-text",isTs:!0,isTest:!1,title:Object(i.b)("文字按钮 \n 设置 text 属性来使用文字按钮","Text \n set text to use text button"),component:e(706).default,rawText:e(707),parseTsText:e(708)},{name:"2-icon",isTs:!0,isTest:!1,title:Object(i.b)("图标 \n shineout 并不提供内置的图标, 所以需要图标可以在内容中自行加入","Icon \n shineout does not provide built-in icons, you can add it to the content by yourself."),component:e(709).default,rawText:e(710),parseTsText:e(711)},{name:"3-size",isTs:!0,isTest:!1,title:Object(i.b)("大小 \n 一共有三种尺寸，['small', 'default', 'large']，默认为 'default'","Size \n There are three sizes, ['small', 'default', 'large'], default value is 'default'."),component:e(712).default,rawText:e(713),parseTsText:e(714)},{name:"4-disabled",isTs:!0,isTest:!1,title:Object(i.b)("不可用 \n 添加 disabled 属性可以禁用按钮。","Disabled \n Adding disabled property can disable the button."),component:e(715).default,rawText:e(716),parseTsText:e(717)},{name:"5-loading",isTs:!0,isTest:!1,title:Object(i.b)("加载中 \n 设定 loading 属性，可以让按钮变成加载中状态","Loading \n Set loading property can add a loading indicator to button."),component:e(718).default,rawText:e(719),parseTsText:e(720)},{name:"6-href",isTs:!0,isTest:!1,title:Object(i.b)("链接 \n 设置 href 属性，按钮会渲染为 a 标签，同时可以设置 target 属性","Link \n Set the href attribute, the button will be rendered as <a> tag and you can also set the target property."),component:e(721).default,rawText:e(722),parseTsText:e(723)},{name:"7-outline",isTs:!0,isTest:!1,title:Object(i.b)("透明背景 \n 添加 outline 属性可以设置为透明背景，type 不能为 default 和 link。","Outline \n Adding outline property can set background to transparent. Outline type can not be default and link."),component:e(724).default,rawText:e(725),parseTsText:e(726)},{name:"8-group",isTs:!0,isTest:!1,title:Object(i.b)("组合 \n 一组 Button 可以用 Button.Group 容器中，按钮样式通过 Button.Gorup 的 size, type, outline 属性设置","Group \n A series of buttons can group by Button.Group, set styles by Button.Group's size, type, and outline property."),component:e(727).default,rawText:e(728),parseTsText:e(729)}];t.default=Object(r.a)(function(n){return o.a.createElement(u.b,Object.assign({},n,{codes:void 0,source:d,examples:m}))})},701:function(n,t){n.exports="# Button *按钮*\n\n<example />\n\n## API\n\n### Button\n\n| 属性 | 类型 | 默认值 | 说明 |\n| --- | --- | --- | --- |\n| children | ReactNode | 必填 | 按钮里面的内容, 可以是文字图标等  |\n| className | string | 无 | 扩展className |\n| disabled | boolean | false | 禁用 |\n| href | string | 无 | 如果设置了 href 属性，将会用 &lt;a> 代替 &lt;button> |\n| outline | boolean | false | outline 为 true 时，显示透明背景的按钮 |\n| size | 'large' \\| 'default' \\| 'small' | 'default' | 按钮尺寸 |\n| style | object | 无 | 最外层扩展样式 |\n| type | 'default' \\| 'primary' \\| 'secondary' \\| 'success' \\| 'warning' \\| 'danger' \\| 'link' | 'default' | 可选值  |\n| text | boolean | false | 文字按钮，不展示边框和背景 |\n| onClick | () => void | 无 | 按钮点击回调 |\n| space | boolean | false | 仅有2个汉字的按钮，是否在2个汉字中间插入空格 |\n| loading | boolean | false | 是否是加载中状态 |\n| htmlType | 'button' \\| 'reset' \\| 'submit' | 'button' | button的原生type属性 |\n\n### Button.Group\n\n| 属性 | 类型 | 默认值 | 说明 |\n| --- | --- | --- | --- |\n| children | ReactNode | 必填 | 由 Button 组成的 array |\n| size | 'large' \\| 'default' \\| 'small' | 无 | 同 Button；如果 Button 和 Group 同时设置 size，以 Group 为准 |\n| outline | boolean | 无 | 同 Button；如果 Button 未设置，使用此值 |\n| type | 'default' \\| 'primary' \\| 'secondary' \\| 'success' \\| 'warning' \\| 'danger' \\| 'link' | 无 | 同 Button；如果 Button 和 Group 同时设置 type，以 Group 为准 |\n"},702:function(n,t){n.exports="# Button\n\n<example />\n\n## API\n\n### Button\n\n| Property | Type | Default | Description |\n| --- | --- | --- | --- |\n| children | ReactNode | required | The content inside the button, can be a text icon, etc.  |\n| className | string | - | extend className |\n| disabled | boolean | false | Specifies the button should be disabled |\n| href | string | - | If the href attribute is set, &lt;a> will be used instead of &lt;button>. |\n| outline | boolean | false | When outline is true, the background is transparent. |\n| size | 'large' \\| 'default' \\| 'small' | 'default' | size of button |\n| style | object | - | Container element style |\n| type | 'default' \\| 'primary' \\| 'secondary' \\| 'success' \\| 'warning' \\| 'danger' \\| 'link' | 'default' | type of button |\n| text | boolean | false | text button |\n| onClick | () => void | none | button click callback |\n| space | boolean | false | For Button with only 2 Chinese characters, whether to insert a space between the two Chinese characters. |\n| loading | boolean | false | is loading |\n| htmlType | 'button' \\| 'reset' \\| 'submit' | 'button' | type of button original |\n\n### Button.Group\n\n| Property | Type | Default | Description |\n| --- | --- | --- | --- |\n| children | ReactNode | required | array of Button |\n| size | string | - | same as Button |\n| outline | boolean | - | same as Button |\n| type | string | - | same as Button |\n"},703:function(n,t,e){"use strict";e.r(t);var a=e(0),o=e.n(a),r=e(68);t.default=function(){return o.a.createElement("div",null,o.a.createElement(r.a,null,"Default"),o.a.createElement(r.a,{type:"primary"},"Primary"),o.a.createElement(r.a,{type:"secondary"},"Secondary"),o.a.createElement(r.a,{type:"success"},"Success"),o.a.createElement(r.a,{type:"warning"},"Warning"),o.a.createElement(r.a,{type:"danger"},"Danger"),o.a.createElement(r.a,{type:"link"},"Link"))}},704:function(n,t){n.exports='/**\n * cn - 基本用法\n *    -- Button 内置了几种常用的类型，分为默认(default), 主要(primary), 次要(secondary), 成功(success), 警告(warning), 危险(danger)和链接(link)\n * en - Base\n *    -- Button has several built-in type, default, primary, secondary, success, warning, dange, and link.\n */\nimport React from \'react\'\nimport { Button } from \'shineout\'\n\nconst App: React.FC = () => (\n  <div>\n    <Button>Default</Button>\n    <Button type="primary">Primary</Button>\n    <Button type="secondary">Secondary</Button>\n    <Button type="success">Success</Button>\n    <Button type="warning">Warning</Button>\n    <Button type="danger">Danger</Button>\n    <Button type="link">Link</Button>\n  </div>\n)\n\nexport default App\n'},705:function(n,t){n.exports='/**\n * cn - 基本用法\n *    -- Button 内置了几种常用的类型，分为默认(default), 主要(primary), 次要(secondary), 成功(success), 警告(warning), 危险(danger)和链接(link)\n * en - Base\n *    -- Button has several built-in type, default, primary, secondary, success, warning, dange, and link.\n */\nimport React from \'react\';\nimport { Button } from \'shineout\';\nconst App = () => (<div>\n    <Button>Default</Button>\n    <Button type="primary">Primary</Button>\n    <Button type="secondary">Secondary</Button>\n    <Button type="success">Success</Button>\n    <Button type="warning">Warning</Button>\n    <Button type="danger">Danger</Button>\n    <Button type="link">Link</Button>\n  </div>);\nexport default App;\n'},706:function(n,t,e){"use strict";e.r(t);var a=e(0),o=e.n(a),r=e(68);t.default=function(){return o.a.createElement("div",null,o.a.createElement(r.a,{text:!0},"Default"),o.a.createElement(r.a,{text:!0,type:"primary"},"Primary"),o.a.createElement(r.a,{text:!0,type:"secondary"},"Secondary"),o.a.createElement(r.a,{text:!0,type:"success"},"Success"),o.a.createElement(r.a,{text:!0,type:"warning"},"Warning"),o.a.createElement(r.a,{text:!0,type:"danger"},"Danger"),o.a.createElement(r.a,{text:!0,type:"link"},"Link"))}},707:function(n,t){n.exports='/**\n * cn - 文字按钮\n *    -- 设置 text 属性来使用文字按钮\n * en - Text\n *    -- set text to use text button\n */\nimport React from \'react\'\nimport { Button } from \'shineout\'\n\nconst App: React.FC = () => (\n  <div>\n    <Button text>Default</Button>\n    <Button text type="primary">\n      Primary\n    </Button>\n    <Button text type="secondary">\n      Secondary\n    </Button>\n    <Button text type="success">\n      Success\n    </Button>\n    <Button text type="warning">\n      Warning\n    </Button>\n    <Button text type="danger">\n      Danger\n    </Button>\n    <Button text type="link">\n      Link\n    </Button>\n  </div>\n)\n\nexport default App\n'},708:function(n,t){n.exports='/**\n * cn - 文字按钮\n *    -- 设置 text 属性来使用文字按钮\n * en - Text\n *    -- set text to use text button\n */\nimport React from \'react\';\nimport { Button } from \'shineout\';\nconst App = () => (<div>\n    <Button text>Default</Button>\n    <Button text type="primary">\n      Primary\n    </Button>\n    <Button text type="secondary">\n      Secondary\n    </Button>\n    <Button text type="success">\n      Success\n    </Button>\n    <Button text type="warning">\n      Warning\n    </Button>\n    <Button text type="danger">\n      Danger\n    </Button>\n    <Button text type="link">\n      Link\n    </Button>\n  </div>);\nexport default App;\n'},709:function(n,t,e){"use strict";e.r(t);var a=e(0),o=e.n(a),r=e(68),u=e(186);t.default=function(){return o.a.createElement("div",null,o.a.createElement(r.a,{type:"primary"},o.a.createElement(u.a,{name:"home",style:{marginInlineEnd:4}}),"left"),o.a.createElement(r.a,{type:"primary"},"right",o.a.createElement(u.a,{name:"home",style:{marginInlineStart:4}})),o.a.createElement(r.a,{type:"primary"},"ce",o.a.createElement(u.a,{name:"home",style:{margin:"0 4px"}}),"ter"))}},710:function(n,t){n.exports='/**\n * cn - 图标\n *    -- shineout 并不提供内置的图标, 所以需要图标可以在内容中自行加入\n * en - Icon\n *    -- shineout does not provide built-in icons, you can add it to the content by yourself.\n */\nimport React from \'react\'\nimport { Button } from \'shineout\'\nimport FontAwesome from \'../Icon/FontAwesome\'\n\nconst App: React.FC = () => (\n  <div>\n    <Button type="primary">\n      <FontAwesome name="home" style={{ marginInlineEnd: 4 }} />\n      left\n    </Button>\n    <Button type="primary">\n      right\n      <FontAwesome name="home" style={{ marginInlineStart: 4 }} />\n    </Button>\n    <Button type="primary">\n      ce\n      <FontAwesome name="home" style={{ margin: \'0 4px\' }} />\n      ter\n    </Button>\n  </div>\n)\n\nexport default App\n'},711:function(n,t){n.exports='/**\n * cn - 图标\n *    -- shineout 并不提供内置的图标, 所以需要图标可以在内容中自行加入\n * en - Icon\n *    -- shineout does not provide built-in icons, you can add it to the content by yourself.\n */\nimport React from \'react\';\nimport { Button } from \'shineout\';\nimport FontAwesome from \'../Icon/FontAwesome\';\nconst App = () => (<div>\n    <Button type="primary">\n      <FontAwesome name="home" style={{ marginInlineEnd: 4 }}/>\n      left\n    </Button>\n    <Button type="primary">\n      right\n      <FontAwesome name="home" style={{ marginInlineStart: 4 }}/>\n    </Button>\n    <Button type="primary">\n      ce\n      <FontAwesome name="home" style={{ margin: \'0 4px\' }}/>\n      ter\n    </Button>\n  </div>);\nexport default App;\n'},712:function(n,t,e){"use strict";e.r(t);var a=e(0),o=e.n(a),r=e(68);t.default=function(){return o.a.createElement("div",null,o.a.createElement("div",null,o.a.createElement(r.a,{size:"small"},"Default"),o.a.createElement(r.a,{size:"small",type:"primary"},"Primary"),o.a.createElement(r.a,{size:"small",type:"secondary"},"Secondary"),o.a.createElement(r.a,{size:"small",type:"success"},"Success"),o.a.createElement(r.a,{size:"small",type:"warning"},"Warning"),o.a.createElement(r.a,{size:"small",type:"danger"},"Danger"),o.a.createElement(r.a,{size:"small",type:"link"},"Link")),o.a.createElement("br",null),o.a.createElement("div",null,o.a.createElement(r.a,null,"Default"),o.a.createElement(r.a,{type:"primary"},"Primary"),o.a.createElement(r.a,{type:"secondary"},"Secondary"),o.a.createElement(r.a,{type:"success"},"Success"),o.a.createElement(r.a,{type:"warning"},"Warning"),o.a.createElement(r.a,{type:"danger"},"Danger"),o.a.createElement(r.a,{type:"link"},"Link")),o.a.createElement("br",null),o.a.createElement("div",null,o.a.createElement(r.a,{size:"large"},"Default"),o.a.createElement(r.a,{size:"large",type:"primary"},"Primary"),o.a.createElement(r.a,{size:"large",type:"secondary"},"Secondary"),o.a.createElement(r.a,{size:"large",type:"success"},"Success"),o.a.createElement(r.a,{size:"large",type:"warning"},"Warning"),o.a.createElement(r.a,{size:"large",type:"danger"},"Danger"),o.a.createElement(r.a,{size:"large",type:"link"},"Link")))}},713:function(n,t){n.exports='/**\n * cn - 大小\n *    -- 一共有三种尺寸，[\'small\', \'default\', \'large\']，默认为 \'default\'\n * en - Size\n *    -- There are three sizes, [\'small\', \'default\', \'large\'], default value is \'default\'.\n */\nimport React from \'react\'\nimport { Button } from \'shineout\'\n\nconst App: React.FC = () => (\n  <div>\n    <div>\n      <Button size="small">Default</Button>\n      <Button size="small" type="primary">\n        Primary\n      </Button>\n      <Button size="small" type="secondary">\n        Secondary\n      </Button>\n      <Button size="small" type="success">\n        Success\n      </Button>\n      <Button size="small" type="warning">\n        Warning\n      </Button>\n      <Button size="small" type="danger">\n        Danger\n      </Button>\n      <Button size="small" type="link">\n        Link\n      </Button>\n    </div>\n    <br />\n    <div>\n      <Button>Default</Button>\n      <Button type="primary">Primary</Button>\n      <Button type="secondary">Secondary</Button>\n      <Button type="success">Success</Button>\n      <Button type="warning">Warning</Button>\n      <Button type="danger">Danger</Button>\n      <Button type="link">Link</Button>\n    </div>\n    <br />\n    <div>\n      <Button size="large">Default</Button>\n      <Button size="large" type="primary">\n        Primary\n      </Button>\n      <Button size="large" type="secondary">\n        Secondary\n      </Button>\n      <Button size="large" type="success">\n        Success\n      </Button>\n      <Button size="large" type="warning">\n        Warning\n      </Button>\n      <Button size="large" type="danger">\n        Danger\n      </Button>\n      <Button size="large" type="link">\n        Link\n      </Button>\n    </div>\n  </div>\n)\n\nexport default App\n'},714:function(n,t){n.exports='/**\n * cn - 大小\n *    -- 一共有三种尺寸，[\'small\', \'default\', \'large\']，默认为 \'default\'\n * en - Size\n *    -- There are three sizes, [\'small\', \'default\', \'large\'], default value is \'default\'.\n */\nimport React from \'react\';\nimport { Button } from \'shineout\';\nconst App = () => (<div>\n    <div>\n      <Button size="small">Default</Button>\n      <Button size="small" type="primary">\n        Primary\n      </Button>\n      <Button size="small" type="secondary">\n        Secondary\n      </Button>\n      <Button size="small" type="success">\n        Success\n      </Button>\n      <Button size="small" type="warning">\n        Warning\n      </Button>\n      <Button size="small" type="danger">\n        Danger\n      </Button>\n      <Button size="small" type="link">\n        Link\n      </Button>\n    </div>\n    <br />\n    <div>\n      <Button>Default</Button>\n      <Button type="primary">Primary</Button>\n      <Button type="secondary">Secondary</Button>\n      <Button type="success">Success</Button>\n      <Button type="warning">Warning</Button>\n      <Button type="danger">Danger</Button>\n      <Button type="link">Link</Button>\n    </div>\n    <br />\n    <div>\n      <Button size="large">Default</Button>\n      <Button size="large" type="primary">\n        Primary\n      </Button>\n      <Button size="large" type="secondary">\n        Secondary\n      </Button>\n      <Button size="large" type="success">\n        Success\n      </Button>\n      <Button size="large" type="warning">\n        Warning\n      </Button>\n      <Button size="large" type="danger">\n        Danger\n      </Button>\n      <Button size="large" type="link">\n        Link\n      </Button>\n    </div>\n  </div>);\nexport default App;\n'},715:function(n,t,e){"use strict";e.r(t);var a=e(0),o=e.n(a),r=e(68);t.default=function(){return o.a.createElement("div",null,o.a.createElement(r.a,{disabled:!0},"Default"),o.a.createElement(r.a,{disabled:!0,type:"primary"},"Primary"),o.a.createElement(r.a,{disabled:!0,type:"secondary"},"Secondary"),o.a.createElement(r.a,{disabled:!0,type:"success"},"Success"),o.a.createElement(r.a,{disabled:!0,type:"warning"},"Warning"),o.a.createElement(r.a,{disabled:!0,type:"danger"},"Danger"),o.a.createElement(r.a,{disabled:!0,type:"link"},"Link"))}},716:function(n,t){n.exports='/**\n * cn - 不可用\n *    -- 添加 disabled 属性可以禁用按钮。\n * en - Disabled\n *    -- Adding disabled property can disable the button.\n */\nimport React from \'react\'\nimport { Button } from \'shineout\'\n\nconst App: React.FC = () => (\n  <div>\n    <Button disabled>Default</Button>\n    <Button disabled type="primary">\n      Primary\n    </Button>\n    <Button disabled type="secondary">\n      Secondary\n    </Button>\n    <Button disabled type="success">\n      Success\n    </Button>\n    <Button disabled type="warning">\n      Warning\n    </Button>\n    <Button disabled type="danger">\n      Danger\n    </Button>\n    <Button disabled type="link">\n      Link\n    </Button>\n  </div>\n)\n\nexport default App\n'},717:function(n,t){n.exports='/**\n * cn - 不可用\n *    -- 添加 disabled 属性可以禁用按钮。\n * en - Disabled\n *    -- Adding disabled property can disable the button.\n */\nimport React from \'react\';\nimport { Button } from \'shineout\';\nconst App = () => (<div>\n    <Button disabled>Default</Button>\n    <Button disabled type="primary">\n      Primary\n    </Button>\n    <Button disabled type="secondary">\n      Secondary\n    </Button>\n    <Button disabled type="success">\n      Success\n    </Button>\n    <Button disabled type="warning">\n      Warning\n    </Button>\n    <Button disabled type="danger">\n      Danger\n    </Button>\n    <Button disabled type="link">\n      Link\n    </Button>\n  </div>);\nexport default App;\n'},718:function(n,t,e){"use strict";e.r(t);var a=e(0),o=e.n(a),r=e(68);t.default=function(){return o.a.createElement("div",null,o.a.createElement(r.a,{loading:!0,size:"small",type:"primary"},"Small"),o.a.createElement(r.a,{loading:!0,type:"primary"},"Default"),o.a.createElement(r.a,{loading:!0,size:"large",type:"primary"},"Large"))}},719:function(n,t){n.exports='/**\n * cn - 加载中\n *    -- 设定 loading 属性，可以让按钮变成加载中状态\n * en - Loading\n *    -- Set loading property can add a loading indicator to button.\n */\nimport React from \'react\'\nimport { Button } from \'shineout\'\n\nconst App: React.FC = () => (\n  <div>\n    <Button loading size="small" type="primary">\n      Small\n    </Button>\n    <Button loading type="primary">\n      Default\n    </Button>\n    <Button loading size="large" type="primary">\n      Large\n    </Button>\n  </div>\n)\n\nexport default App\n'},720:function(n,t){n.exports='/**\n * cn - 加载中\n *    -- 设定 loading 属性，可以让按钮变成加载中状态\n * en - Loading\n *    -- Set loading property can add a loading indicator to button.\n */\nimport React from \'react\';\nimport { Button } from \'shineout\';\nconst App = () => (<div>\n    <Button loading size="small" type="primary">\n      Small\n    </Button>\n    <Button loading type="primary">\n      Default\n    </Button>\n    <Button loading size="large" type="primary">\n      Large\n    </Button>\n  </div>);\nexport default App;\n'},721:function(n,t,e){"use strict";e.r(t);var a=e(0),o=e.n(a),r=e(68);t.default=function(){return o.a.createElement(r.a,{href:"#home",target:"_blank",type:"primary"},"Home")}},722:function(n,t){n.exports='/**\n * cn - 链接\n *    -- 设置 href 属性，按钮会渲染为 a 标签，同时可以设置 target 属性\n * en - Link\n *    -- Set the href attribute, the button will be rendered as <a> tag and you can also set the target property.\n */\nimport React from \'react\'\nimport { Button } from \'shineout\'\n\nconst App: React.FC = () => (\n  <Button href="#home" target="_blank" type="primary">\n    Home\n  </Button>\n)\n\nexport default App\n'},723:function(n,t){n.exports='/**\n * cn - 链接\n *    -- 设置 href 属性，按钮会渲染为 a 标签，同时可以设置 target 属性\n * en - Link\n *    -- Set the href attribute, the button will be rendered as <a> tag and you can also set the target property.\n */\nimport React from \'react\';\nimport { Button } from \'shineout\';\nconst App = () => (<Button href="#home" target="_blank" type="primary">\n    Home\n  </Button>);\nexport default App;\n'},724:function(n,t,e){"use strict";e.r(t);var a=e(0),o=e.n(a),r=e(68);t.default=function(){return o.a.createElement("div",null,o.a.createElement(r.a,{outline:!0,type:"primary"},"Primary"),o.a.createElement(r.a,{outline:!0,type:"secondary"},"Secondary"),o.a.createElement(r.a,{outline:!0,type:"success"},"Success"),o.a.createElement(r.a,{outline:!0,type:"warning"},"Warning"),o.a.createElement(r.a,{outline:!0,type:"danger"},"Danger"))}},725:function(n,t){n.exports='/**\n * cn - 透明背景\n *    -- 添加 outline 属性可以设置为透明背景，type 不能为 default 和 link。\n * en - Outline\n *    -- Adding outline property can set background to transparent. Outline type can not be default and link.\n */\nimport React from \'react\'\nimport { Button } from \'shineout\'\n\nconst App: React.FC = () => (\n  <div>\n    <Button outline type="primary">\n      Primary\n    </Button>\n    <Button outline type="secondary">\n      Secondary\n    </Button>\n    <Button outline type="success">\n      Success\n    </Button>\n    <Button outline type="warning">\n      Warning\n    </Button>\n    <Button outline type="danger">\n      Danger\n    </Button>\n  </div>\n)\n\nexport default App\n'},726:function(n,t){n.exports='/**\n * cn - 透明背景\n *    -- 添加 outline 属性可以设置为透明背景，type 不能为 default 和 link。\n * en - Outline\n *    -- Adding outline property can set background to transparent. Outline type can not be default and link.\n */\nimport React from \'react\';\nimport { Button } from \'shineout\';\nconst App = () => (<div>\n    <Button outline type="primary">\n      Primary\n    </Button>\n    <Button outline type="secondary">\n      Secondary\n    </Button>\n    <Button outline type="success">\n      Success\n    </Button>\n    <Button outline type="warning">\n      Warning\n    </Button>\n    <Button outline type="danger">\n      Danger\n    </Button>\n  </div>);\nexport default App;\n'},727:function(n,t,e){"use strict";e.r(t);var a=e(0),o=e.n(a),r=e(9),u=e(68),i=e(186),l="rtl"===r.a.direction;t.default=function(){return o.a.createElement("div",null,o.a.createElement(u.a.Group,null,o.a.createElement(u.a,null,"Start"),o.a.createElement(u.a,null,"Center"),o.a.createElement(u.a,null,"End")),o.a.createElement("br",null),o.a.createElement(u.a.Group,{outline:!0,type:"primary"},o.a.createElement(u.a,null,"Start"),o.a.createElement(u.a,null,"Center"),o.a.createElement(u.a,null,"End")),o.a.createElement("br",null),o.a.createElement(u.a.Group,{outline:!0,type:"primary"},o.a.createElement(u.a,{disabled:!0},"Start"),o.a.createElement(u.a,{disabled:!0},"Center"),o.a.createElement(u.a,null,"End")),o.a.createElement("br",null),o.a.createElement(u.a.Group,{type:"primary"},o.a.createElement(u.a,null,o.a.createElement(i.a,{name:l?"angle-right":'"angle-left"',style:{marginInlineEnd:4}}),"Start"),o.a.createElement(u.a,null,"Center"),o.a.createElement(u.a,null,"End",o.a.createElement(i.a,{name:l?"angle-left":'"angle-right"',style:{marginInlineStart:4}}))),o.a.createElement("br",null),o.a.createElement(u.a.Group,{size:"large"},o.a.createElement(u.a,null,"Start"),o.a.createElement(u.a,null,"Center"),o.a.createElement(u.a,null,"End")))}},728:function(n,t){n.exports="/**\n * cn - 组合\n *    -- 一组 Button 可以用 Button.Group 容器中，按钮样式通过 Button.Gorup 的 size, type, outline 属性设置\n * en - Group\n *    -- A series of buttons can group by Button.Group, set styles by Button.Group's size, type, and outline property.\n */\nimport React from 'react'\nimport { Button, config } from 'shineout'\nimport FontAwesome from '../Icon/FontAwesome'\n\nconst isRtl = config.direction === 'rtl'\n\nconst App: React.FC = () => (\n  <div>\n    <Button.Group>\n      <Button>Start</Button>\n      <Button>Center</Button>\n      <Button>End</Button>\n    </Button.Group>\n\n    <br />\n\n    <Button.Group outline type=\"primary\">\n      <Button>Start</Button>\n      <Button>Center</Button>\n      <Button>End</Button>\n    </Button.Group>\n\n    <br />\n    <Button.Group outline type=\"primary\">\n      <Button disabled>Start</Button>\n      <Button disabled>Center</Button>\n      <Button>End</Button>\n    </Button.Group>\n\n    <br />\n\n    <Button.Group type=\"primary\">\n      <Button>\n        <FontAwesome name={isRtl ? 'angle-right' : '\"angle-left\"'} style={{ marginInlineEnd: 4 }} />\n        Start\n      </Button>\n      <Button>Center</Button>\n      <Button>\n        End\n        <FontAwesome name={isRtl ? 'angle-left' : '\"angle-right\"'} style={{ marginInlineStart: 4 }} />\n      </Button>\n    </Button.Group>\n\n    <br />\n\n    <Button.Group size=\"large\">\n      <Button>Start</Button>\n      <Button>Center</Button>\n      <Button>End</Button>\n    </Button.Group>\n  </div>\n)\n\nexport default App\n"},729:function(n,t){n.exports="/**\n * cn - 组合\n *    -- 一组 Button 可以用 Button.Group 容器中，按钮样式通过 Button.Gorup 的 size, type, outline 属性设置\n * en - Group\n *    -- A series of buttons can group by Button.Group, set styles by Button.Group's size, type, and outline property.\n */\nimport React from 'react';\nimport { Button, config } from 'shineout';\nimport FontAwesome from '../Icon/FontAwesome';\nconst isRtl = config.direction === 'rtl';\nconst App = () => (<div>\n    <Button.Group>\n      <Button>Start</Button>\n      <Button>Center</Button>\n      <Button>End</Button>\n    </Button.Group>\n\n    <br />\n\n    <Button.Group outline type=\"primary\">\n      <Button>Start</Button>\n      <Button>Center</Button>\n      <Button>End</Button>\n    </Button.Group>\n\n    <br />\n    <Button.Group outline type=\"primary\">\n      <Button disabled>Start</Button>\n      <Button disabled>Center</Button>\n      <Button>End</Button>\n    </Button.Group>\n\n    <br />\n\n    <Button.Group type=\"primary\">\n      <Button>\n        <FontAwesome name={isRtl ? 'angle-right' : '\"angle-left\"'} style={{ marginInlineEnd: 4 }}/>\n        Start\n      </Button>\n      <Button>Center</Button>\n      <Button>\n        End\n        <FontAwesome name={isRtl ? 'angle-left' : '\"angle-right\"'} style={{ marginInlineStart: 4 }}/>\n      </Button>\n    </Button.Group>\n\n    <br />\n\n    <Button.Group size=\"large\">\n      <Button>Start</Button>\n      <Button>Center</Button>\n      <Button>End</Button>\n    </Button.Group>\n  </div>);\nexport default App;\n"}}]);