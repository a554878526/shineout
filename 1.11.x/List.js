(window.webpackJsonpShineoutDoc=window.webpackJsonpShineoutDoc||[]).push([[31],{1492:function(e,t,n){"use strict";n.r(t);var a=n(0),r=n.n(a),i=n(562),o=n(563),s=n(40),c=n(1493),l=n.n(c),u=n(1494),d=n.n(u),m=Object(s.b)(l.a,d.a),f=[{name:"01-base",isTs:!0,isTest:!1,title:Object(s.b)("基本用法 \n 基础的List用法。","Base \n Basic List usage."),component:n(1495).default,rawText:n(1496),parseTsText:n(1497)},{name:"01-renderItem",isTs:!0,isTest:!1,title:Object(s.b)("不使用 renderItem \n 当数据是字符串数组时，可以不传renderItem。","dont use renderItem \n When the data is a string array, renderItem can not be passed."),component:n(1498).default,rawText:n(1499),parseTsText:n(1500)},{name:"02-fixed",isTs:!0,isTest:!1,title:Object(s.b)("性能 \n 设置 fixed 属性来启用虚拟列表，本例加载了10000条数据。 \n 支持自动高度，默认跟随父元素高度 \n lineHeight 用来设置列表项高度 \n rowsInView 用来设置同时所展示的列表项数量，默认为10个","Performance \n Set the fixed property to enable the virtual list, which in this case loads 10,000 pieces of data. \n support automatic height, and follow the height of parent element by default \n lineheight is used to set the height of list items \n rowsinview is used to set the number of list items displayed on a page. The default is 10"),component:n(1501).default,rawText:n(1502),parseTsText:n(1503)},{name:"02-pagination",isTs:!0,isTest:!1,title:Object(s.b)("分页 \n 前端分页的情况下, 设置 pagination 显示分页，没有设置 onChange 处理数据的情况下，会自动对数据进行分页 \n pagination 的参数和 Pagination 组件一致","Pagination \n Set the pagination property to show the pagination and if not set onChange property, the data is automatically paged. \n The parameters of pagination are consistent with the Pagination component."),component:n(1504).default,rawText:n(1505),parseTsText:n(1506)},{name:"02-size",isTs:!0,isTest:!1,title:Object(s.b)("尺寸 \n 通过设置 size 为 large small 分别把按钮设为大、小尺寸。若不设置 size，则尺寸为中。","size \n If a large or small list is desired, set the size property to either large or small respectively. Omit the size property for a list with the default size."),component:n(1507).default,rawText:n(1508),parseTsText:n(1509)},{name:"03-checkbox",isTs:!0,isTest:!1,title:Object(s.b)("选择行 \n 设置 onChange 属性，会自动添加选择行","Select \n Set the onChange property will automatically add a row with checkbox."),component:n(1510).default,rawText:n(1511),parseTsText:n(1512)},{name:"04-footer",isTs:!0,isTest:!1,title:Object(s.b)("加载更多 \n 通过使用 footer 属性，可实现加载更多功能","Load more \n Through use the footer attribute, you can load more functions."),component:n(1513).default,rawText:n(1514),parseTsText:n(1515)},{name:"05-scroll-load",isTs:!0,isTest:!1,title:Object(s.b)("滚动加载 \n 设置 scrollLoading 属性，当滚动到底部时，会自动调用该属性","scroll loading \n Set the scrollLoad property, when the scroll to the bottom, it will automatically call to change the property."),component:n(1516).default,rawText:n(1517),parseTsText:n(1518)},{name:"06-base-item",isTs:!0,isTest:!1,title:Object(s.b)("List.BaseItem 布局 \n 使用 List.BaseItem 组件，可使用经典布局方式快速布局","List.BaseItem layout \n Use List.BaseItem component to quickly layout"),component:n(1519).default,rawText:n(1520),parseTsText:n(1521)}];t.default=Object(i.a)(function(e){return r.a.createElement(o.b,Object.assign({},e,{codes:void 0,source:m,examples:f}))})},1493:function(e,t){e.exports="# List *列表*\n\n<example />\n\n## API\n\n### List\n\n| 属性 | 类型 | 默认值 | 必填 | 说明 |\n| --- | --- | --- | -- | --- |\n| data | any[] | [] | 是 | 需要渲染成列表的数据 |\n| className | string | 无 | 否 | 扩展外层类名 |\n| renderItem | ((rowData, index) => React.node) \\| string | 无 | 否 | 渲染列表 |\n| onChange | (rowData, rowIndex) => void | 无 | 否 | 选择行。rowData为选中的数据，rowIndex为选中行号。如果需要数据需要格式化的处理，建议配置 format。 |\n| keygen | ((data) => any) \\| string \\| boolean | 无 | 是 | 生成每一项key的辅助方法<br />为 true 时，以数据项本身作为key，相当于 (d => d)<br />为函数时，使用此函数返回值<br />为string时，使用这个string对应的数据值。如 'id'，相当于 (d => d.id) |\n| value | any[] | 无 | 否 | 当前选中值，格式和 onChange 返回值一致 |\n| format | (data) => any \\| string | d => d | 否 | 格式化 value<br />默认值，返回原始数据<br />为string时，会作为key从原始数据中获取值，相当于 (d) => d\\[format\\]<br /> 为函数时，以函数返回结果作为 value |\n| footer | (() => React.node) \\| React.node | 无 | 否 | 底部内容 |\n| style | object | 无 | 否 | 扩展容器样式 |\n| scrollLoading | (() => void) | 无 | 否 | 滚动到底部时触发 |\n| loading | boolean \\| React.node | 无 | 否 | 加载中 |\n| rowClassName | ((rowData, index) => string) \\| string | 无 | 否 | 自定义行 className |\n| bordered | boolean | 无 | 否 | 是否显示边框 |\n| prediction | (v: any, data) => boolean | (val, d) => val===format(d) | false | 默认使用 format 函数执行的结果来比较是否匹配，在某些情况下（例如返回原始数据的对象，更新数据时，生成了一个值相同，非同一个对象的选项），需要借助 prediction 函数来判断是否匹配 |\n| empty | string \\| React.node | null | 否 | 无数据时展示的内容 |\n| fixed | boolean | false | 否 | 是否启用虚拟列表 |\n| rowsInView | number | 10 | 否 | 同时展示的列表项数量 |\n| lineHeight | number | 32 | 否 | 列表项高度 |\n| colNum | number | 1 | 否 | 多列展示 |\n| size | small \\| default \\| large | default | 否 | 尺寸 |\n\n### List.BaseItem\n\n| 属性 | 类型 | 默认值 | 必填 | 说明 |\n| --- | --- | --- | -- | --- |\n| avatar | string \\| React.node \\| (() => React.node) | 无 | 否 | 列表元素的图标 |\n| title | string | 无 | 否 | 列表元素的标题 |\n| desc | string | 无 | 否 | 描述 |\n| content | string \\| React.node \\| (() => React.node) | 无 | 否 | 列表内容 |\n| extra | array \\| React.node | 无 | 否 | 列表右侧内容 |\n| className | string | 无 | 否 | Item 容器的className |\n"},1494:function(e,t){e.exports="# List\n\n<example />\n\n## API\n\n### List\n\n| Property | Type | Default | required | Description |\n| --- | --- | --- | -- | --- |\n| data | any[] | [] | true | render data |\n| className | string | null | false | expand container className |\n| renderItem | ((rowData, index) => React.node) \\| string | null | false | render item |\n| onChange | (rowData, rowIndex) => void | null | false | Select the row. <br />rowData is the selected data, rowIndex is the selected row number. If the data needs to be formatted, it is recommended to configure format. |\n| keygen | ((data) => any) \\| string \\| boolean | null | false | Generate a auxiliary method for each key<br />If not filled, index will be used (not recommended, in some cases there may be problems)<br />When it is a function, use its return value. <br />When it is a string，ues the value of the string.For example, 'id' is the same thing as (d) => d.id . |\n| format | (data) => any \\| string | d => d | false | Format value<br />The defaule value is return the original data.<br />When it is a string, the value is fetched from the original data as a key equivalent to (d) => d\\[format]<br />When it is a function, use its return value. |\n| value | any[] | none | false | The current selected value. |\n| footer | ReactNode | null | false | The content at the bottom |\n| style | object | null | false | expand container style |\n| scrollLoading | (() => void) | null | false | Triggered when scrolling to the bottom |\n| loading | boolean \\| React.node | null | false | loading |\n| rowClassName | ((rowData, index) => string) \\| string | null | false | custom row className |\n| bordered | boolean | null | false | show border |\n| prediction | (v: any, data) => boolean | (val, d) => val===format(d) | false | By default, the result of the format function is used to compare whether it matches. In some cases (for example, whe an object that returns the original data is updated, an different option with the same value  is generated), the prediction function needs to be used to determine whether match |\n| empty | string \\| React.node | null | false | What to display when no data |\n| fixed | boolean | false | false | virtualized list |\n| rowsInView | number | 10 | false | Number of list items displayed at the same time |\n| lineHeight | number | 32 | false | height of item |\n| colNum | number | 1 | false | Multi-column display |\n| size | small \\| default \\| large | default | false | Size of list |\n\n### List.BaseItem\n\n| Property | Type | Default | required | Description |\n| --- | --- | --- | -- | --- |\n| avatar | string \\| React.node \\| (() => React.node) | null | false | List images |\n| title | string | null | false | The title of the list |\n| desc | string | null | false | description |\n| content | string \\| React.node \\| (() => React.node) | null | false | list content |\n| extra | array \\| React.node | null | false | Content area on the right side of the list |\n| className | string | null | false | Item className |\n"},1495:function(e,t,n){"use strict";n.r(t);var a=n(0),r=n.n(a),i=n(321),o=[{id:1,firstName:"Ephraim",lastName:"Wisozk",position:"Marketing Designer",start:"2012-01-29",time:"01:42",salary:115777,country:"Reunion",office:"Miami",office5:"Istanbul",height:113.74},{id:2,firstName:"Osvaldo",lastName:"Beer",position:"Financial Controller",start:"2007-09-04",time:"03:26",salary:396093,country:"Syrian Arab Republic",office:"San Paulo",office5:"Shenzhen",height:82.13},{id:3,firstName:"Dylan",lastName:"Ratke",position:"Development Lead",start:"2009-10-16",time:"01:45",salary:236064,country:"Peru",office:"Boston",office5:"Delhi",height:179.53},{id:4,firstName:"Shaniya",lastName:"Jacobs",position:"Developer",start:"2014-06-30",time:"02:17",salary:338985,country:"Peru",office:"Chengdu",office5:"Dallas-Fort Worth",height:190.11}];t.default=function(){return r.a.createElement(i.a,{keygen:"id",bordered:!0,data:o,renderItem:function(e){return r.a.createElement("div",null,"Name: ".concat(e.firstName,"-").concat(e.lastName))}})}},1496:function(e,t){e.exports="/**\n * cn - 基本用法\n *    -- 基础的List用法。\n * en - Base\n *    -- Basic List usage.\n */\nimport React from 'react'\nimport { List, TYPE } from 'shineout'\n\ninterface ListItem {\n  id: number\n  time: string\n  start: string\n  height: number\n  salary: number\n  office: string\n  country: string\n  office5: string\n  position: string\n  lastName: string\n  firstName: string\n}\ntype ListProps = TYPE.List.Props<ListItem, ListItem>\ntype ListData = ListProps['data']\ntype ListRenderItem = ListProps['renderItem']\n\nconst data: ListData = [\n  {\n    id: 1,\n    firstName: 'Ephraim',\n    lastName: 'Wisozk',\n    position: 'Marketing Designer',\n    start: '2012-01-29',\n    time: '01:42',\n    salary: 115777,\n    country: 'Reunion',\n    office: 'Miami',\n    office5: 'Istanbul',\n    height: 113.74,\n  },\n  {\n    id: 2,\n    firstName: 'Osvaldo',\n    lastName: 'Beer',\n    position: 'Financial Controller',\n    start: '2007-09-04',\n    time: '03:26',\n    salary: 396093,\n    country: 'Syrian Arab Republic',\n    office: 'San Paulo',\n    office5: 'Shenzhen',\n    height: 82.13,\n  },\n  {\n    id: 3,\n    firstName: 'Dylan',\n    lastName: 'Ratke',\n    position: 'Development Lead',\n    start: '2009-10-16',\n    time: '01:45',\n    salary: 236064,\n    country: 'Peru',\n    office: 'Boston',\n    office5: 'Delhi',\n    height: 179.53,\n  },\n  {\n    id: 4,\n    firstName: 'Shaniya',\n    lastName: 'Jacobs',\n    position: 'Developer',\n    start: '2014-06-30',\n    time: '02:17',\n    salary: 338985,\n    country: 'Peru',\n    office: 'Chengdu',\n    office5: 'Dallas-Fort Worth',\n    height: 190.11,\n  },\n]\n\nconst App: React.FC = () => {\n  const renderItem: ListRenderItem = rowData => <div>{`Name: ${rowData.firstName}-${rowData.lastName}`}</div>\n\n  return <List keygen=\"id\" bordered data={data} renderItem={renderItem} />\n}\n\nexport default App\n"},1497:function(e,t){e.exports="/**\n * cn - 基本用法\n *    -- 基础的List用法。\n * en - Base\n *    -- Basic List usage.\n */\nimport React from 'react';\nimport { List } from 'shineout';\nconst data = [\n    {\n        id: 1,\n        firstName: 'Ephraim',\n        lastName: 'Wisozk',\n        position: 'Marketing Designer',\n        start: '2012-01-29',\n        time: '01:42',\n        salary: 115777,\n        country: 'Reunion',\n        office: 'Miami',\n        office5: 'Istanbul',\n        height: 113.74,\n    },\n    {\n        id: 2,\n        firstName: 'Osvaldo',\n        lastName: 'Beer',\n        position: 'Financial Controller',\n        start: '2007-09-04',\n        time: '03:26',\n        salary: 396093,\n        country: 'Syrian Arab Republic',\n        office: 'San Paulo',\n        office5: 'Shenzhen',\n        height: 82.13,\n    },\n    {\n        id: 3,\n        firstName: 'Dylan',\n        lastName: 'Ratke',\n        position: 'Development Lead',\n        start: '2009-10-16',\n        time: '01:45',\n        salary: 236064,\n        country: 'Peru',\n        office: 'Boston',\n        office5: 'Delhi',\n        height: 179.53,\n    },\n    {\n        id: 4,\n        firstName: 'Shaniya',\n        lastName: 'Jacobs',\n        position: 'Developer',\n        start: '2014-06-30',\n        time: '02:17',\n        salary: 338985,\n        country: 'Peru',\n        office: 'Chengdu',\n        office5: 'Dallas-Fort Worth',\n        height: 190.11,\n    },\n];\nconst App = () => {\n    const renderItem = rowData => <div>{`Name: ${rowData.firstName}-${rowData.lastName}`}</div>;\n    return <List keygen=\"id\" bordered data={data} renderItem={renderItem}/>;\n};\nexport default App;\n"},1498:function(e,t,n){"use strict";n.r(t);var a=n(0),r=n.n(a),i=n(321),o=["red","orange","yellow","green","cyan","blue","violet"];t.default=function(){return r.a.createElement(i.a,{keygen:!0,bordered:!0,data:o})}},1499:function(e,t){e.exports="/**\n * cn - 不使用 renderItem\n *    -- 当数据是字符串数组时，可以不传renderItem。\n * en - dont use renderItem\n *    -- When the data is a string array, renderItem can not be passed.\n */\nimport React from 'react'\nimport { List, TYPE } from 'shineout'\n\ntype ListItem = string\ntype ListProps = TYPE.List.Props<ListItem, ListItem>\ntype ListData = ListProps['data']\n\nconst data: ListData = ['red', 'orange', 'yellow', 'green', 'cyan', 'blue', 'violet']\n\nconst App: React.FC = () => <List keygen bordered data={data} />\n\nexport default App\n"},1500:function(e,t){e.exports="/**\n * cn - 不使用 renderItem\n *    -- 当数据是字符串数组时，可以不传renderItem。\n * en - dont use renderItem\n *    -- When the data is a string array, renderItem can not be passed.\n */\nimport React from 'react';\nimport { List } from 'shineout';\nconst data = ['red', 'orange', 'yellow', 'green', 'cyan', 'blue', 'violet'];\nconst App = () => <List keygen bordered data={data}/>;\nexport default App;\n"},1501:function(e,t,n){"use strict";n.r(t);var a=n(0),r=n.n(a),i=n(321),o=n(564),s=Object(o.b)(1e4),c={width:22,height:22,background:"#eee",borderRadius:"50%",marginInlineEnd:12,alignItems:"center",display:"inline-flex",justifyContent:"center"},l=function(e){var t=e.id,n=e.firstName;return r.a.createElement("div",{style:{height:30,display:"flex",alignItems:"center"}},r.a.createElement("span",{style:c},n.slice(0,1)),r.a.createElement("span",{style:{flex:1}},n),r.a.createElement("span",null,t))};t.default=function(){return r.a.createElement(i.a,{height:300,lineHeight:54,fixed:!0,keygen:"id",bordered:!0,data:s,renderItem:l})}},1502:function(e,t){e.exports="/**\n * cn - 性能\n *    -- 设置 fixed 属性来启用虚拟列表，本例加载了10000条数据。\n *    -- 支持自动高度，默认跟随父元素高度\n *    -- lineHeight 用来设置列表项高度\n *    -- rowsInView 用来设置同时所展示的列表项数量，默认为10个\n * en - Performance\n *    -- Set the fixed property to enable the virtual list, which in this case loads 10,000 pieces of data.\n *    -- support automatic height, and follow the height of parent element by default\n *    -- lineheight is used to set the height of list items\n *    -- rowsinview is used to set the number of list items displayed on a page. The default is 10\n */\nimport React from 'react'\nimport { List, TYPE } from 'shineout'\nimport { fetchSync } from 'doc/data/user'\n\ninterface ListItem {\n  id: number\n  time: string\n  start: string\n  height: number\n  salary: number\n  office: string\n  country: string\n  office5: string\n  position: string\n  lastName: string\n  firstName: string\n}\ntype ListProps = TYPE.List.Props<ListItem, any>\ntype ListRenderItem = ListProps['renderItem']\n\nconst names: ListItem[] = fetchSync(10000)\n\nconst style: React.CSSProperties = {\n  width: 22,\n  height: 22,\n  background: '#eee',\n  borderRadius: '50%',\n  marginInlineEnd: 12,\n  alignItems: 'center',\n  display: 'inline-flex',\n  justifyContent: 'center',\n}\n\n// eslint-disable-next-line react/prop-types\nconst renderItem: ListRenderItem = ({ id, firstName }) => (\n  <div style={{ height: 30, display: 'flex', alignItems: 'center' }}>\n    <span style={style}>{firstName.slice(0, 1)}</span>\n    <span style={{ flex: 1 }}>{firstName}</span>\n    <span>{id}</span>\n  </div>\n)\n\nconst App: React.FC = () => (\n  <List height={300} lineHeight={54} fixed keygen=\"id\" bordered data={names} renderItem={renderItem} />\n)\n\nexport default App\n"},1503:function(e,t){e.exports="/**\n * cn - 性能\n *    -- 设置 fixed 属性来启用虚拟列表，本例加载了10000条数据。\n *    -- 支持自动高度，默认跟随父元素高度\n *    -- lineHeight 用来设置列表项高度\n *    -- rowsInView 用来设置同时所展示的列表项数量，默认为10个\n * en - Performance\n *    -- Set the fixed property to enable the virtual list, which in this case loads 10,000 pieces of data.\n *    -- support automatic height, and follow the height of parent element by default\n *    -- lineheight is used to set the height of list items\n *    -- rowsinview is used to set the number of list items displayed on a page. The default is 10\n */\nimport React from 'react';\nimport { List } from 'shineout';\nimport { fetchSync } from 'doc/data/user';\nconst names = fetchSync(10000);\nconst style = {\n    width: 22,\n    height: 22,\n    background: '#eee',\n    borderRadius: '50%',\n    marginInlineEnd: 12,\n    alignItems: 'center',\n    display: 'inline-flex',\n    justifyContent: 'center',\n};\n// eslint-disable-next-line react/prop-types\nconst renderItem = ({ id, firstName }) => (<div style={{ height: 30, display: 'flex', alignItems: 'center' }}>\n    <span style={style}>{firstName.slice(0, 1)}</span>\n    <span style={{ flex: 1 }}>{firstName}</span>\n    <span>{id}</span>\n  </div>);\nconst App = () => (<List height={300} lineHeight={54} fixed keygen=\"id\" bordered data={names} renderItem={renderItem}/>);\nexport default App;\n"},1504:function(e,t,n){"use strict";n.r(t);var p=n(27),h=n(24),g=n(0),y=n.n(g),b=n(321),v=n(189),L=n(564),I=b.a.BaseItem;t.default=function(){var e=Object(g.useState)(!1),t=Object(h.a)(e,2),n=t[0],a=t[1],r=Object(g.useState)(1),i=Object(h.a)(r,2),o=i[0],s=i[1],c=Object(g.useState)([]),l=Object(h.a)(c,2),u=l[0],d=l[1],m=function(t){a(!0),L.a.get("List",{current:o,pageSize:10,sorter:"",username:""}).then(function(e){d([].concat(Object(p.a)(u),Object(p.a)(e.data))),a(!1),s(t)})};Object(g.useEffect)(function(){m(1)},[]);var f={current:o,total:100,pageSize:10,align:"right",onChange:function(e){10<e||m(e)}};return y.a.createElement(b.a,{keygen:"id",format:"id",data:u,loading:n,renderItem:function(e){return y.a.createElement(I,{avatar:y.a.createElement(v.a,{src:"../../../images/list.png"}),title:e.country,desc:"From ".concat(e.country,". Position in ").concat(e.position,". Start datetime ").concat(e.start,"."),content:"Name: ".concat(e.firstName,"-").concat(e.lastName,". Office in ").concat(e.office)})},pagination:f})}},1505:function(e,t){e.exports="/**\n * cn - 分页\n *    -- 前端分页的情况下, 设置 pagination 显示分页，没有设置 onChange 处理数据的情况下，会自动对数据进行分页\n *    -- pagination 的参数和 Pagination 组件一致\n * en - Pagination\n *   -- Set the pagination property to show the pagination and if not set onChange property, the data is automatically paged.\n *    -- The parameters of pagination are consistent with the Pagination component.\n */\nimport React, { useState, useEffect } from 'react'\nimport { List, Image, TYPE } from 'shineout'\nimport { fetch } from 'doc/data/user'\n\ninterface ListItem {\n  id: number\n  time: string\n  start: string\n  height: number\n  salary: number\n  office: string\n  country: string\n  office5: string\n  position: string\n  lastName: string\n  firstName: string\n}\ntype ListProps = TYPE.List.Props<ListItem, ListItem>\ntype ListRenderItem = ListProps['renderItem']\n\ntype PaginationProps = TYPE.Pagination.Props\n\nconst { BaseItem } = List\n\nconst image = '../../../images/list.png'\n\nconst App: React.FC = () => {\n  const [loading, setLoading] = useState(false)\n  const [current, setCurrent] = useState<number>(1)\n  const [data, setData] = useState<ListItem[]>([])\n\n  const fetchData = (c: number) => {\n    setLoading(true)\n    fetch.get('List', { current, pageSize: 10, sorter: '', username: '' }).then((_data: { data: any }) => {\n      setData([...data, ..._data.data])\n      setLoading(false)\n      setCurrent(c)\n    })\n  }\n\n  useEffect(() => {\n    fetchData(1)\n  }, [])\n\n  const renderItem: ListRenderItem = rowData => (\n    <BaseItem\n      avatar={<Image src={image} />}\n      title={rowData.country}\n      desc={`From ${rowData.country}. Position in ${rowData.position}. Start datetime ${rowData.start}.`}\n      content={`Name: ${rowData.firstName}-${rowData.lastName}. Office in ${rowData.office}`}\n    />\n  )\n\n  const handlePageChange = (index: number) => {\n    if (index > 10) return\n    fetchData(index)\n  }\n\n  const pagination: PaginationProps = {\n    current,\n    total: 100,\n    pageSize: 10,\n    align: 'right',\n    onChange: handlePageChange,\n  }\n\n  return <List keygen=\"id\" format=\"id\" data={data} loading={loading} renderItem={renderItem} pagination={pagination} />\n}\n\nexport default App\n"},1506:function(e,t){e.exports="/**\n * cn - 分页\n *    -- 前端分页的情况下, 设置 pagination 显示分页，没有设置 onChange 处理数据的情况下，会自动对数据进行分页\n *    -- pagination 的参数和 Pagination 组件一致\n * en - Pagination\n *   -- Set the pagination property to show the pagination and if not set onChange property, the data is automatically paged.\n *    -- The parameters of pagination are consistent with the Pagination component.\n */\nimport React, { useState, useEffect } from 'react';\nimport { List, Image } from 'shineout';\nimport { fetch } from 'doc/data/user';\nconst { BaseItem } = List;\nconst image = '../../../images/list.png';\nconst App = () => {\n    const [loading, setLoading] = useState(false);\n    const [current, setCurrent] = useState(1);\n    const [data, setData] = useState([]);\n    const fetchData = (c) => {\n        setLoading(true);\n        fetch.get('List', { current, pageSize: 10, sorter: '', username: '' }).then((_data) => {\n            setData([...data, ..._data.data]);\n            setLoading(false);\n            setCurrent(c);\n        });\n    };\n    useEffect(() => {\n        fetchData(1);\n    }, []);\n    const renderItem = rowData => (<BaseItem avatar={<Image src={image}/>} title={rowData.country} desc={`From ${rowData.country}. Position in ${rowData.position}. Start datetime ${rowData.start}.`} content={`Name: ${rowData.firstName}-${rowData.lastName}. Office in ${rowData.office}`}/>);\n    const handlePageChange = (index) => {\n        if (index > 10)\n            return;\n        fetchData(index);\n    };\n    const pagination = {\n        current,\n        total: 100,\n        pageSize: 10,\n        align: 'right',\n        onChange: handlePageChange,\n    };\n    return <List keygen=\"id\" format=\"id\" data={data} loading={loading} renderItem={renderItem} pagination={pagination}/>;\n};\nexport default App;\n"},1507:function(e,t,n){"use strict";n.r(t);var r=n(24),i=n(0),o=n.n(i),s=n(321),c=n(200),l=[{id:1,firstName:"Ephraim",lastName:"Wisozk",position:"Marketing Designer",start:"2012-01-29",time:"01:42",salary:115777,country:"Reunion",office:"Miami",office5:"Istanbul",height:113.74},{id:2,firstName:"Osvaldo",lastName:"Beer",position:"Financial Controller",start:"2007-09-04",time:"03:26",salary:396093,country:"Syrian Arab Republic",office:"San Paulo",office5:"Shenzhen",height:82.13},{id:3,firstName:"Dylan",lastName:"Ratke",position:"Development Lead",start:"2009-10-16",time:"01:45",salary:236064,country:"Peru",office:"Boston",office5:"Delhi",height:179.53},{id:4,firstName:"Shaniya",lastName:"Jacobs",position:"Developer",start:"2014-06-30",time:"02:17",salary:338985,country:"Peru",office:"Chengdu",office5:"Dallas-Fort Worth",height:190.11}],u=["small","default","large"];t.default=function(){var e=Object(i.useState)("default"),t=Object(r.a)(e,2),n=t[0],a=t[1];return o.a.createElement("div",null,o.a.createElement("div",{style:{display:"flex",justifyContent:"flex-start",alignItems:"center",marginBottom:16}},o.a.createElement("span",{style:{marginInlineEnd:16,fontWeight:700}},"Size: "),o.a.createElement(c.a,{width:120,data:u,keygen:!0,value:n,onChange:function(e){return a(e)}})),o.a.createElement(s.a,{keygen:"id",size:n,data:l,renderItem:function(e){return o.a.createElement(s.a.BaseItem,{avatar:"../../../images/list.png",content:"".concat(e.firstName,"-").concat(e.lastName,": position: ").concat(e.position,", country: ").concat(e.country,", office: ").concat(e.office),desc:"From ".concat(e.country,". Position in ").concat(e.position,". Start datetime ").concat(e.start,"."),title:e.start})}}))}},1508:function(e,t){e.exports="/**\n * cn - 尺寸\n *    -- 通过设置 size 为 large small 分别把按钮设为大、小尺寸。若不设置 size，则尺寸为中。\n * en - size\n *    -- If a large or small list is desired, set the size property to either large or small respectively. Omit the size property for a list with the default size.\n */\nimport React, { useState } from 'react'\nimport { List, Select, TYPE } from 'shineout'\n\ninterface ListItem {\n  id: number\n  time: string\n  start: string\n  height: number\n  salary: number\n  office: string\n  country: string\n  office5: string\n  position: string\n  lastName: string\n  firstName: string\n}\ntype ListProps = TYPE.List.Props<ListItem, ListItem>\ntype ListSize = ListProps['size']\ntype ListRenderItem = ListProps['renderItem']\n\nconst data: ListItem[] = [\n  {\n    id: 1,\n    firstName: 'Ephraim',\n    lastName: 'Wisozk',\n    position: 'Marketing Designer',\n    start: '2012-01-29',\n    time: '01:42',\n    salary: 115777,\n    country: 'Reunion',\n    office: 'Miami',\n    office5: 'Istanbul',\n    height: 113.74,\n  },\n  {\n    id: 2,\n    firstName: 'Osvaldo',\n    lastName: 'Beer',\n    position: 'Financial Controller',\n    start: '2007-09-04',\n    time: '03:26',\n    salary: 396093,\n    country: 'Syrian Arab Republic',\n    office: 'San Paulo',\n    office5: 'Shenzhen',\n    height: 82.13,\n  },\n  {\n    id: 3,\n    firstName: 'Dylan',\n    lastName: 'Ratke',\n    position: 'Development Lead',\n    start: '2009-10-16',\n    time: '01:45',\n    salary: 236064,\n    country: 'Peru',\n    office: 'Boston',\n    office5: 'Delhi',\n    height: 179.53,\n  },\n  {\n    id: 4,\n    firstName: 'Shaniya',\n    lastName: 'Jacobs',\n    position: 'Developer',\n    start: '2014-06-30',\n    time: '02:17',\n    salary: 338985,\n    country: 'Peru',\n    office: 'Chengdu',\n    office5: 'Dallas-Fort Worth',\n    height: 190.11,\n  },\n]\n\nconst select = ['small', 'default', 'large']\n\nconst App: React.FC = () => {\n  const [size, setSize] = useState<ListSize>('default')\n\n  const renderItem: ListRenderItem = rowData => (\n    <List.BaseItem\n      avatar=\"../../../images/list.png\"\n      content={`${rowData.firstName}-${rowData.lastName}: position: ${rowData.position}, country: ${\n        rowData.country\n      }, office: ${rowData.office}`}\n      desc={`From ${rowData.country}. Position in ${rowData.position}. Start datetime ${rowData.start}.`}\n      title={rowData.start}\n    />\n  )\n\n  return (\n    <div>\n      <div style={{ display: 'flex', justifyContent: 'flex-start', alignItems: 'center', marginBottom: 16 }}>\n        <span style={{ marginInlineEnd: 16, fontWeight: 700 }}>Size: </span>\n        <Select width={120} data={select} keygen value={size} onChange={v => setSize(v)} />\n      </div>\n      <List keygen=\"id\" size={size} data={data} renderItem={renderItem} />\n    </div>\n  )\n}\n\nexport default App\n"},1509:function(e,t){e.exports="/**\n * cn - 尺寸\n *    -- 通过设置 size 为 large small 分别把按钮设为大、小尺寸。若不设置 size，则尺寸为中。\n * en - size\n *    -- If a large or small list is desired, set the size property to either large or small respectively. Omit the size property for a list with the default size.\n */\nimport React, { useState } from 'react';\nimport { List, Select } from 'shineout';\nconst data = [\n    {\n        id: 1,\n        firstName: 'Ephraim',\n        lastName: 'Wisozk',\n        position: 'Marketing Designer',\n        start: '2012-01-29',\n        time: '01:42',\n        salary: 115777,\n        country: 'Reunion',\n        office: 'Miami',\n        office5: 'Istanbul',\n        height: 113.74,\n    },\n    {\n        id: 2,\n        firstName: 'Osvaldo',\n        lastName: 'Beer',\n        position: 'Financial Controller',\n        start: '2007-09-04',\n        time: '03:26',\n        salary: 396093,\n        country: 'Syrian Arab Republic',\n        office: 'San Paulo',\n        office5: 'Shenzhen',\n        height: 82.13,\n    },\n    {\n        id: 3,\n        firstName: 'Dylan',\n        lastName: 'Ratke',\n        position: 'Development Lead',\n        start: '2009-10-16',\n        time: '01:45',\n        salary: 236064,\n        country: 'Peru',\n        office: 'Boston',\n        office5: 'Delhi',\n        height: 179.53,\n    },\n    {\n        id: 4,\n        firstName: 'Shaniya',\n        lastName: 'Jacobs',\n        position: 'Developer',\n        start: '2014-06-30',\n        time: '02:17',\n        salary: 338985,\n        country: 'Peru',\n        office: 'Chengdu',\n        office5: 'Dallas-Fort Worth',\n        height: 190.11,\n    },\n];\nconst select = ['small', 'default', 'large'];\nconst App = () => {\n    const [size, setSize] = useState('default');\n    const renderItem = rowData => (<List.BaseItem avatar=\"../../../images/list.png\" content={`${rowData.firstName}-${rowData.lastName}: position: ${rowData.position}, country: ${rowData.country}, office: ${rowData.office}`} desc={`From ${rowData.country}. Position in ${rowData.position}. Start datetime ${rowData.start}.`} title={rowData.start}/>);\n    return (<div>\n      <div style={{ display: 'flex', justifyContent: 'flex-start', alignItems: 'center', marginBottom: 16 }}>\n        <span style={{ marginInlineEnd: 16, fontWeight: 700 }}>Size: </span>\n        <Select width={120} data={select} keygen value={size} onChange={v => setSize(v)}/>\n      </div>\n      <List keygen=\"id\" size={size} data={data} renderItem={renderItem}/>\n    </div>);\n};\nexport default App;\n"},1510:function(e,t,n){"use strict";n.r(t);var g=n(27),y=n(24),b=n(0),v=n.n(b),L=n(301),I=n(321),D=n(564),w={padding:12,display:"flex",lineHeight:"22px",alignItems:"center",justifyContent:"flex-start",borderBottom:"1px solid #e8ebf0"};t.default=function(){var e=Object(b.useState)(1),t=Object(y.a)(e,2),n=t[0],a=t[1],r=Object(b.useState)(!1),i=Object(y.a)(r,2),o=i[0],s=i[1],c=Object(b.useState)([]),l=Object(y.a)(c,2),u=l[0],d=l[1],m=Object(b.useState)([1]),f=Object(y.a)(m,2),p=f[0],h=f[1];return Object(b.useEffect)(function(){var t;t=1,s(!0),D.a.get("List",{current:n,pageSize:10,sorter:"",username:""}).then(function(e){d([].concat(Object(g.a)(u),Object(g.a)(e.data))),a(t),s(!1)})},[]),v.a.createElement("div",null,v.a.createElement("div",{style:w},v.a.createElement(L.a,{checked:!(!p||p.length<=0)&&(p.length===u.length||"indeterminate"),onChange:function(e){h(e?u.map(function(e){return e.id}):[])}}),v.a.createElement("div",null,"Selected ".concat(p.length))),v.a.createElement(I.a,{format:"id",keygen:"id",data:u,value:p,loading:o,onChange:function(e){console.log("selectValue: ",e),h(e)},renderItem:function(e){return v.a.createElement("div",null,"From ".concat(e.country,". Name: ").concat(e.firstName,"-").concat(e.lastName))}}))}},1511:function(e,t){e.exports="/**\n * cn - 选择行\n *    -- 设置 onChange 属性，会自动添加选择行\n * en - Select\n *    -- Set the onChange property will automatically add a row with checkbox.\n */\nimport React, { useState, useEffect } from 'react'\nimport { List, Checkbox, TYPE } from 'shineout'\nimport { fetch } from 'doc/data/user'\n\ninterface ListItem {\n  id: number\n  time: string\n  start: string\n  height: number\n  salary: number\n  office: string\n  country: string\n  office5: string\n  position: string\n  lastName: string\n  firstName: string\n}\ntype ListProps = TYPE.List.Props<ListItem, number>\ntype ListOnChange = ListProps['onChange']\ntype ListRenderItem = ListProps['renderItem']\n\ntype CheckboxProps = TYPE.Checkbox.Props<any>\ntype CheckboxOnChange = CheckboxProps['onChange']\n\nconst style: React.CSSProperties = {\n  padding: 12,\n  display: 'flex',\n  lineHeight: '22px',\n  alignItems: 'center',\n  justifyContent: 'flex-start',\n  borderBottom: '1px solid #e8ebf0',\n}\n\nconst App: React.FC = () => {\n  const [current, setCurrent] = useState(1)\n  const [loading, setLoading] = useState(false)\n  const [data, setData] = useState<ListItem[]>([])\n  const [value, setValue] = useState<number[]>([1])\n\n  const fetchData = (c: number) => {\n    setLoading(true)\n    fetch.get('List', { current, pageSize: 10, sorter: '', username: '' }).then((_data: { data: ListItem[] }) => {\n      setData([...data, ..._data.data])\n      setCurrent(c)\n      setLoading(false)\n    })\n  }\n\n  const getChecked = () => {\n    if (!value || value.length <= 0) return false\n    if (value.length === data.length) return true\n    return 'indeterminate'\n  }\n\n  const onChange: ListOnChange = selectedValue => {\n    console.log('selectValue: ', selectedValue)\n    setValue(selectedValue)\n  }\n\n  const checkboxOnChange: CheckboxOnChange = (flag: boolean) => {\n    if (flag) {\n      setValue(data.map((v: ListItem) => v.id))\n      return\n    }\n    setValue([])\n  }\n\n  const renderItem: ListRenderItem = rowData => (\n    <div>{`From ${rowData.country}. Name: ${rowData.firstName}-${rowData.lastName}`}</div>\n  )\n\n  useEffect(() => {\n    fetchData(1)\n  }, [])\n\n  return (\n    <div>\n      <div style={style}>\n        <Checkbox checked={getChecked()} onChange={checkboxOnChange} />\n        <div>{`Selected ${value.length}`}</div>\n      </div>\n      <List\n        format=\"id\"\n        keygen=\"id\"\n        data={data}\n        value={value}\n        loading={loading}\n        onChange={onChange}\n        renderItem={renderItem}\n      />\n    </div>\n  )\n}\n\nexport default App\n"},1512:function(e,t){e.exports="/**\n * cn - 选择行\n *    -- 设置 onChange 属性，会自动添加选择行\n * en - Select\n *    -- Set the onChange property will automatically add a row with checkbox.\n */\nimport React, { useState, useEffect } from 'react';\nimport { List, Checkbox } from 'shineout';\nimport { fetch } from 'doc/data/user';\nconst style = {\n    padding: 12,\n    display: 'flex',\n    lineHeight: '22px',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    borderBottom: '1px solid #e8ebf0',\n};\nconst App = () => {\n    const [current, setCurrent] = useState(1);\n    const [loading, setLoading] = useState(false);\n    const [data, setData] = useState([]);\n    const [value, setValue] = useState([1]);\n    const fetchData = (c) => {\n        setLoading(true);\n        fetch.get('List', { current, pageSize: 10, sorter: '', username: '' }).then((_data) => {\n            setData([...data, ..._data.data]);\n            setCurrent(c);\n            setLoading(false);\n        });\n    };\n    const getChecked = () => {\n        if (!value || value.length <= 0)\n            return false;\n        if (value.length === data.length)\n            return true;\n        return 'indeterminate';\n    };\n    const onChange = selectedValue => {\n        console.log('selectValue: ', selectedValue);\n        setValue(selectedValue);\n    };\n    const checkboxOnChange = (flag) => {\n        if (flag) {\n            setValue(data.map((v) => v.id));\n            return;\n        }\n        setValue([]);\n    };\n    const renderItem = rowData => (<div>{`From ${rowData.country}. Name: ${rowData.firstName}-${rowData.lastName}`}</div>);\n    useEffect(() => {\n        fetchData(1);\n    }, []);\n    return (<div>\n      <div style={style}>\n        <Checkbox checked={getChecked()} onChange={checkboxOnChange}/>\n        <div>{`Selected ${value.length}`}</div>\n      </div>\n      <List format=\"id\" keygen=\"id\" data={data} value={value} loading={loading} onChange={onChange} renderItem={renderItem}/>\n    </div>);\n};\nexport default App;\n"},1513:function(e,t,n){"use strict";n.r(t);var p=n(27),h=n(24),g=n(0),y=n.n(g),b=n(321),v=n(67),L=n(564),I=b.a.BaseItem,D={padding:16,display:"flex",lineHeight:"22px",alignItems:"center",justifyContent:"center"};t.default=function(){var e=Object(g.useState)(1),t=Object(h.a)(e,2),n=t[0],a=t[1],r=Object(g.useState)(!1),i=Object(h.a)(r,2),o=i[0],s=i[1],c=Object(g.useState)([]),l=Object(h.a)(c,2),u=l[0],d=l[1],m=function(t){s(!0),L.a.get("List",{current:t,pageSize:10,sorter:"",username:""}).then(function(e){d([].concat(Object(p.a)(u),Object(p.a)(e.data))),a(t),s(!1)})},f=function(){o||m(n+1)};return Object(g.useEffect)(function(){m(1)},[]),y.a.createElement(b.a,{keygen:"id",data:u,renderItem:function(e){return y.a.createElement(I,{avatar:"../../../images/list.png",desc:"From ".concat(e.country,". Name: ").concat(e.firstName,"-").concat(e.lastName)})},footer:function(){return y.a.createElement("div",{style:D},y.a.createElement(v.a,{size:"small",loading:o,onClick:f},"load more"))}})}},1514:function(e,t){e.exports="/**\n * cn - 加载更多\n *    -- 通过使用 footer 属性，可实现加载更多功能\n * en - Load more\n *    -- Through use the footer attribute, you can load more functions.\n */\nimport React, { useState, useEffect } from 'react'\nimport { List, Button, TYPE } from 'shineout'\nimport { fetch } from 'doc/data/user'\n\ninterface ListItem {\n  id: number\n  time: string\n  start: string\n  height: number\n  salary: number\n  office: string\n  country: string\n  office5: string\n  position: string\n  lastName: string\n  firstName: string\n}\ntype ListProps = TYPE.List.Props<ListItem, ListItem>\ntype ListRenderItem = ListProps['renderItem']\n\nconst { BaseItem } = List\n\nconst image = '../../../images/list.png'\n\nconst style: React.CSSProperties = {\n  padding: 16,\n  display: 'flex',\n  lineHeight: '22px',\n  alignItems: 'center',\n  justifyContent: 'center',\n}\n\nconst App: React.FC = () => {\n  const [current, setCurrent] = useState(1)\n  const [loading, setLoading] = useState(false)\n  const [data, setData] = useState<ListItem[]>([])\n\n  const fetchData = (c: number) => {\n    setLoading(true)\n    fetch.get('List', { current: c, pageSize: 10, sorter: '', username: '' }).then((_data: { data: ListItem[] }) => {\n      setData([...data, ..._data.data])\n      setCurrent(c)\n      setLoading(false)\n    })\n  }\n\n  const onClick = () => {\n    if (loading) return\n\n    fetchData(current + 1)\n  }\n\n  const renderItem: ListRenderItem = rowData => (\n    <BaseItem avatar={image} desc={`From ${rowData.country}. Name: ${rowData.firstName}-${rowData.lastName}`} />\n  )\n\n  const renderFooter = () => (\n    <div style={style}>\n      <Button size=\"small\" loading={loading} onClick={onClick}>\n        load more\n      </Button>\n    </div>\n  )\n\n  useEffect(() => {\n    fetchData(1)\n  }, [])\n\n  return <List keygen=\"id\" data={data} renderItem={renderItem} footer={renderFooter} />\n}\n\nexport default App\n"},1515:function(e,t){e.exports="/**\n * cn - 加载更多\n *    -- 通过使用 footer 属性，可实现加载更多功能\n * en - Load more\n *    -- Through use the footer attribute, you can load more functions.\n */\nimport React, { useState, useEffect } from 'react';\nimport { List, Button } from 'shineout';\nimport { fetch } from 'doc/data/user';\nconst { BaseItem } = List;\nconst image = '../../../images/list.png';\nconst style = {\n    padding: 16,\n    display: 'flex',\n    lineHeight: '22px',\n    alignItems: 'center',\n    justifyContent: 'center',\n};\nconst App = () => {\n    const [current, setCurrent] = useState(1);\n    const [loading, setLoading] = useState(false);\n    const [data, setData] = useState([]);\n    const fetchData = (c) => {\n        setLoading(true);\n        fetch.get('List', { current: c, pageSize: 10, sorter: '', username: '' }).then((_data) => {\n            setData([...data, ..._data.data]);\n            setCurrent(c);\n            setLoading(false);\n        });\n    };\n    const onClick = () => {\n        if (loading)\n            return;\n        fetchData(current + 1);\n    };\n    const renderItem = rowData => (<BaseItem avatar={image} desc={`From ${rowData.country}. Name: ${rowData.firstName}-${rowData.lastName}`}/>);\n    const renderFooter = () => (<div style={style}>\n      <Button size=\"small\" loading={loading} onClick={onClick}>\n        load more\n      </Button>\n    </div>);\n    useEffect(() => {\n        fetchData(1);\n    }, []);\n    return <List keygen=\"id\" data={data} renderItem={renderItem} footer={renderFooter}/>;\n};\nexport default App;\n"},1516:function(e,t,n){"use strict";n.r(t);var f=n(27),p=n(24),h=n(0),g=n.n(h),y=n(321),b=n(189),v=n(564),L=y.a.BaseItem,I={maxHeight:300,overflowY:"scroll"};t.default=function(){var e=Object(h.useState)(1),t=Object(p.a)(e,2),n=t[0],a=t[1],r=Object(h.useState)(!1),i=Object(p.a)(r,2),o=i[0],s=i[1],c=Object(h.useState)([]),l=Object(p.a)(c,2),u=l[0],d=l[1],m=function(t){s(!0),v.a.get("List",{current:t,pageSize:10,sorter:"",username:""}).then(function(e){d([].concat(Object(f.a)(u),Object(f.a)(e.data))),a(t),s(!1)})};return Object(h.useEffect)(function(){m(1)},[]),g.a.createElement(y.a,{keygen:"id",format:"id",data:u,style:I,loading:o,renderItem:function(e){return g.a.createElement(L,{title:e.country,avatar:g.a.createElement(b.a,{src:"../../../images/list.png"}),content:"Name: ".concat(e.firstName,"-").concat(e.lastName,". Office in ").concat(e.office),desc:"From ".concat(e.country,". Position in ").concat(e.position,". Start datetime ").concat(e.start,".")})},scrollLoading:function(){10<=n||m(n+1)}})}},1517:function(e,t){e.exports="/**\n * cn - 滚动加载\n *    -- 设置 scrollLoading 属性，当滚动到底部时，会自动调用该属性\n * en - scroll loading\n *    -- Set the scrollLoad property, when the scroll to the bottom, it will automatically call to change the property.\n */\nimport React, { useState, useEffect } from 'react'\nimport { List, Image, TYPE } from 'shineout'\nimport { fetch } from 'doc/data/user'\n\ninterface ListItem {\n  id: number\n  time: string\n  start: string\n  height: number\n  salary: number\n  office: string\n  country: string\n  office5: string\n  position: string\n  lastName: string\n  firstName: string\n}\ntype ListProps = TYPE.List.Props<ListItem, number>\ntype ListRenderItem = ListProps['renderItem']\n\nconst { BaseItem } = List\n\nconst style: React.CSSProperties = { maxHeight: 300, overflowY: 'scroll' }\n\nconst image = '../../../images/list.png'\n\nconst App: React.FC = () => {\n  const [current, setCurrent] = useState(1)\n  const [loading, setLoading] = useState(false)\n  const [data, setData] = useState<ListItem[]>([])\n\n  const fetchData = (c: number) => {\n    setLoading(true)\n    fetch.get('List', { current: c, pageSize: 10, sorter: '', username: '' }).then((_data: { data: ListItem[] }) => {\n      setData([...data, ..._data.data])\n      setCurrent(c)\n      setLoading(false)\n    })\n  }\n\n  const scrollLoading = () => {\n    if (current >= 10) return\n    fetchData(current + 1)\n  }\n\n  const renderItem: ListRenderItem = rowData => (\n    <BaseItem\n      title={rowData.country}\n      avatar={<Image src={image} />}\n      content={`Name: ${rowData.firstName}-${rowData.lastName}. Office in ${rowData.office}`}\n      desc={`From ${rowData.country}. Position in ${rowData.position}. Start datetime ${rowData.start}.`}\n    />\n  )\n\n  useEffect(() => {\n    fetchData(1)\n  }, [])\n\n  return (\n    <List\n      keygen=\"id\"\n      format=\"id\"\n      data={data}\n      style={style}\n      loading={loading}\n      renderItem={renderItem}\n      scrollLoading={scrollLoading}\n    />\n  )\n}\n\nexport default App\n"},1518:function(e,t){e.exports="/**\n * cn - 滚动加载\n *    -- 设置 scrollLoading 属性，当滚动到底部时，会自动调用该属性\n * en - scroll loading\n *    -- Set the scrollLoad property, when the scroll to the bottom, it will automatically call to change the property.\n */\nimport React, { useState, useEffect } from 'react';\nimport { List, Image } from 'shineout';\nimport { fetch } from 'doc/data/user';\nconst { BaseItem } = List;\nconst style = { maxHeight: 300, overflowY: 'scroll' };\nconst image = '../../../images/list.png';\nconst App = () => {\n    const [current, setCurrent] = useState(1);\n    const [loading, setLoading] = useState(false);\n    const [data, setData] = useState([]);\n    const fetchData = (c) => {\n        setLoading(true);\n        fetch.get('List', { current: c, pageSize: 10, sorter: '', username: '' }).then((_data) => {\n            setData([...data, ..._data.data]);\n            setCurrent(c);\n            setLoading(false);\n        });\n    };\n    const scrollLoading = () => {\n        if (current >= 10)\n            return;\n        fetchData(current + 1);\n    };\n    const renderItem = rowData => (<BaseItem title={rowData.country} avatar={<Image src={image}/>} content={`Name: ${rowData.firstName}-${rowData.lastName}. Office in ${rowData.office}`} desc={`From ${rowData.country}. Position in ${rowData.position}. Start datetime ${rowData.start}.`}/>);\n    useEffect(() => {\n        fetchData(1);\n    }, []);\n    return (<List keygen=\"id\" format=\"id\" data={data} style={style} loading={loading} renderItem={renderItem} scrollLoading={scrollLoading}/>);\n};\nexport default App;\n"},1519:function(e,t,n){"use strict";n.r(t);var m=n(27),f=n(24),p=n(0),h=n.n(p),g=n(321),y=n(67),b=n(564),v=g.a.BaseItem;t.default=function(){var e=Object(p.useState)(1),t=Object(f.a)(e,2),n=t[0],a=t[1],r=Object(p.useState)(!1),i=Object(f.a)(r,2),o=i[0],s=i[1],c=Object(p.useState)([]),l=Object(f.a)(c,2),u=l[0],d=l[1];return Object(p.useEffect)(function(){var t;t=n,s(!0),b.a.get("List",{current:t,pageSize:10,sorter:"",username:""}).then(function(e){d([].concat(Object(m.a)(u),Object(m.a)(e.data))),a(t),s(!1)})},[]),h.a.createElement(g.a,{key:"1",keygen:"id",data:u,loading:o,renderItem:function(e){return h.a.createElement(v,{avatar:"../../../images/list.png",content:"".concat(e.firstName,"-").concat(e.lastName,": position: ").concat(e.position,", country: ").concat(e.country,", office: ").concat(e.office),desc:"From ".concat(e.country,". Position in ").concat(e.position,". Start datetime ").concat(e.start,"."),extra:[h.a.createElement(y.a,{type:"primary",text:!0},"edit"),h.a.createElement(y.a,{type:"primary",text:!0},"more")]})}})}},1520:function(e,t){e.exports="/**\n * cn - List.BaseItem 布局\n *    -- 使用 List.BaseItem 组件，可使用经典布局方式快速布局\n * en - List.BaseItem layout\n *    -- Use List.BaseItem component to quickly layout\n */\nimport React, { useState, useEffect } from 'react'\nimport { List, Button, TYPE } from 'shineout'\nimport { fetch } from 'doc/data/user'\n\ninterface ListItem {\n  id: number\n  time: string\n  start: string\n  height: number\n  salary: number\n  office: string\n  country: string\n  office5: string\n  position: string\n  lastName: string\n  firstName: string\n}\ntype ListProps = TYPE.List.Props<ListItem, number>\ntype ListRenderItem = ListProps['renderItem']\n\nconst { BaseItem } = List\n\nconst image = '../../../images/list.png'\n\nconst App: React.FC = () => {\n  const [current, setCurrent] = useState(1)\n  const [loading, setLoading] = useState(false)\n  const [data, setData] = useState<ListItem[]>([])\n\n  const fetchData = (c: number) => {\n    setLoading(true)\n    fetch.get('List', { current: c, pageSize: 10, sorter: '', username: '' }).then((_data: { data: ListItem[] }) => {\n      setData([...data, ..._data.data])\n      setCurrent(c)\n      setLoading(false)\n    })\n  }\n\n  const renderItem: ListRenderItem = rowData => (\n    <BaseItem\n      avatar={image}\n      content={`${rowData.firstName}-${rowData.lastName}: position: ${rowData.position}, country: ${\n        rowData.country\n      }, office: ${rowData.office}`}\n      desc={`From ${rowData.country}. Position in ${rowData.position}. Start datetime ${rowData.start}.`}\n      extra={[\n        <Button type=\"primary\" text>\n          edit\n        </Button>,\n        <Button type=\"primary\" text>\n          more\n        </Button>,\n      ]}\n    />\n  )\n\n  useEffect(() => {\n    fetchData(current)\n  }, [])\n\n  return <List key=\"1\" keygen=\"id\" data={data} loading={loading} renderItem={renderItem} />\n}\n\nexport default App\n"},1521:function(e,t){e.exports="/**\n * cn - List.BaseItem 布局\n *    -- 使用 List.BaseItem 组件，可使用经典布局方式快速布局\n * en - List.BaseItem layout\n *    -- Use List.BaseItem component to quickly layout\n */\nimport React, { useState, useEffect } from 'react';\nimport { List, Button } from 'shineout';\nimport { fetch } from 'doc/data/user';\nconst { BaseItem } = List;\nconst image = '../../../images/list.png';\nconst App = () => {\n    const [current, setCurrent] = useState(1);\n    const [loading, setLoading] = useState(false);\n    const [data, setData] = useState([]);\n    const fetchData = (c) => {\n        setLoading(true);\n        fetch.get('List', { current: c, pageSize: 10, sorter: '', username: '' }).then((_data) => {\n            setData([...data, ..._data.data]);\n            setCurrent(c);\n            setLoading(false);\n        });\n    };\n    const renderItem = rowData => (<BaseItem avatar={image} content={`${rowData.firstName}-${rowData.lastName}: position: ${rowData.position}, country: ${rowData.country}, office: ${rowData.office}`} desc={`From ${rowData.country}. Position in ${rowData.position}. Start datetime ${rowData.start}.`} extra={[\n            <Button type=\"primary\" text>\n          edit\n        </Button>,\n            <Button type=\"primary\" text>\n          more\n        </Button>,\n        ]}/>);\n    useEffect(() => {\n        fetchData(current);\n    }, []);\n    return <List key=\"1\" keygen=\"id\" data={data} loading={loading} renderItem={renderItem}/>;\n};\nexport default App;\n"},301:function(e,t,n){"use strict";var a=n(60),r=n(21),l=n(88),i=n(74),o=n(4),s=n(5),c=n(1),u=n(20),d=n(6),m=n(7),f=n(2),p=n(0),h=n.n(p),g=n(14),y=n.n(g),b=n(17),v=n(22),L=n(10),I=n(561),D=n(61);function w(a){return function(){var e,t=Object(f.a)(a);if(function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],function(){})),!0}catch(e){return!1}}()){var n=Object(f.a)(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return Object(m.a)(this,e)}}var O=function(e){Object(d.a)(a,e);var n=w(a);function a(e){var t;return Object(o.a)(this,a),(t=n.call(this,e)).handleClick=t.handleClick.bind(Object(c.a)(t)),t.handleUpdate=t.handleUpdate.bind(Object(c.a)(t)),t.handleRawChange=t.handleRawChange.bind(Object(c.a)(t)),t}return Object(s.a)(a,[{key:"componentDidMount",value:function(){Object(u.a)(Object(f.a)(a.prototype),"componentDidMount",this).call(this),this.props.datum.subscribe(L.a,this.handleUpdate)}},{key:"componentWillUnmount",value:function(){Object(u.a)(Object(f.a)(a.prototype),"componentWillUnmount",this).call(this),this.props.datum.unsubscribe(L.a,this.handleUpdate)}},{key:"getContent",value:function(e){var t=this.props.renderItem;return"string"==typeof t?e[t]:"function"==typeof t?t(e):""}},{key:"handleUpdate",value:function(){this.forceUpdate()}},{key:"handleClick",value:function(e,t,n){var a=this.props,r=a.data,i=a.datum;t?i.add(r[n]):i.remove(r[n])}},{key:"handleRawChange",value:function(e,t){var n=this.props.datum;t?n.add(e):n.remove(e)}},{key:"render",value:function(){var n=this,e=this.props,t=e.block,a=e.data,r=e.datum,i=e.keygen,o=e.children,s=e.style,c=y()(Object(D.a)("group",["no-block","block"][Number(t)]),this.props.className);return void 0===a?h.a.createElement("div",{className:c,style:s},h.a.createElement(I.a,{value:{onRawChange:this.handleRawChange,checked:r.check.bind(r)}},o)):h.a.createElement("div",{className:c,style:s},a.map(function(e,t){return h.a.createElement(l.a,{checked:r.check(e),disabled:r.disabled(e),key:Object(v.b)(e,i,t),htmlValue:t,index:t,onChange:n.handleClick},n.getContent(e))}),o)}}]),a}(b.b);O.defaultProps={renderItem:function(e){return e}};var N=O,S=Object(r.compose)(a.a,I.b)(l.a);S.Group=Object(r.compose)(a.a,i.a.hoc({bindProps:["disabled","format","prediction","separator"]}))(N),S.Checkbox=l.a,S.displayName="ShineoutCheckbox",S.Group.displayName="ShineoutCheckboxGroup";t.a=S},321:function(e,t,n){"use strict";var a=n(21),r=n(74),i=n(4),o=n(5),s=n(1),c=n(6),l=n(7),u=n(2),d=n(0),m=n.n(d),f=n(14),p=n.n(f),h=n(36),g=n(128),y=(n(31),n(8)),b=n(214),v=n.n(b),L=Object(y.a)(v.a,"list"),I=n(11),D=n(22),w=n(100),O=n(51),N=n(68),S=n(593),x=n(9);function j(a){return function(){var e,t=Object(u.a)(a);if(function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],function(){})),!0}catch(e){return!1}}()){var n=Object(u.a)(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return Object(l.a)(this,e)}}var C=function(e){Object(c.a)(a,e);var n=j(a);function a(e){var t;return Object(i.a)(this,a),(t=n.call(this,e)).bindNode=t.bindNode.bind(Object(s.a)(t)),t.bindObserver=t.bindObserver.bind(Object(s.a)(t)),t.scrollLoading=t.scrollLoading.bind(Object(s.a)(t)),t.renderItem=t.renderItem.bind(Object(s.a)(t)),t.id=null,t}return Object(o.a)(a,[{key:"componentWillUnmount",value:function(){Object(w.b)(this.id,!0),this.node=null,this.observer=null,this.id=null}},{key:"getItemClassName",value:function(e,t,n){var a=this.props.rowClassName,r=L("item",n&&"checkbox");return Object(I.isFunc)(a)?p()(r,a(e,t)):Object(I.isString)(a)?p()(r,a):r}},{key:"getContent",value:function(e,t){var n=this.props.renderItem;return Object(I.isFunc)(n)?n(e,t):Object(I.isString)(n)?e[n]:Object(I.isString)(e)?e:null}},{key:"scrollLoading",value:function(){var e=this.props.scrollLoading;Object(I.isFunc)(e)&&e()}},{key:"bindNode",value:function(e){this.node=e}},{key:"bindObserver",value:function(e){(this.observer=e)&&(Object(w.b)(this.id,!0),this.id=Object(w.a)({container:this.node,element:e,render:this.scrollLoading,offset:20,noRemove:!0}))}},{key:"renderCheckBox",value:function(e,t,n){if(!e)return null;var a=this.props.datum;return m.a.createElement(S.a,{data:t,index:n,datum:a,force:a.check(t)})}},{key:"renderItem",value:function(e,t){var n=this.props,a=n.keygen,r=n.onChange,i=Object(I.isFunc)(r);return m.a.createElement("div",{className:this.getItemClassName(e,t,i),key:Object(D.b)(e,a,t)},this.renderCheckBox(i,e,t),this.getContent(e,t))}},{key:"renderList",value:function(e){var t=this.props,n=t.data,a=t.empty,r=t.keygen,i=t.fixed,o=t.rowsInView,s=t.lineHeight,c=t.value,l=t.colNum;if(e)return m.a.createElement("div",{className:L("item","empty")},a||Object(h.a)("noData"));if(i)return m.a.createElement(g.a,{lineHeight:s,data:n,keygen:r,renderItem:this.renderItem,itemsInView:o,force:c,colNum:l});var u=n.map(this.renderItem);if(l&&1<l){var d=Array(l).fill("1fr").join(" ");return m.a.createElement("div",{style:{display:"grid",gridTemplateColumns:d}},u)}return u}},{key:"renderFooter",value:function(){var e=this.props.footer;return Object(I.isFunc)(e)?m.a.createElement("div",{className:L("footer")},e()):Object(d.isValidElement)(e)?m.a.createElement("div",{className:L("footer")},e):null}},{key:"render",value:function(){var e=this.props,t=e.data,n=e.loading,a=e.style,r=e.size,i=e.bordered,o=e.fixed,s=e.height,c=e.scrollLoading,l=!Object(I.isArray)(t)||t.length<=0,u=Object.assign({},a,s&&{height:s});return m.a.createElement("div",Object.assign({className:p()(L("container",r,i&&"bordered",o&&"fixed",Object(x.b)()&&"rtl"),this.props.className),style:u,ref:this.bindNode},Object(N.a)(this.props)),n&&m.a.createElement("div",{className:L("loading")},"boolean"==typeof n?m.a.createElement(O.a,{size:40}):n),m.a.createElement("div",{className:L("list",l&&"empty")},this.renderList(l)),!l&&Object(I.isFunc)(c)&&m.a.createElement("div",{ref:this.bindObserver}),this.renderFooter())}}]),a}(d.Component);C.defaultProps={size:"default",loading:!1,colNum:1},C.displayName="ShineoutList";var k=C,E=n(15),P=n(27),R=n(189);function z(a){return function(){var e,t=Object(u.a)(a);if(function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],function(){})),!0}catch(e){return!1}}()){var n=Object(u.a)(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return Object(l.a)(this,e)}}var T=function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return L.apply(void 0,Object(P.a)(t.map(function(e){return"meta-".concat(e)})))},B=function(e){Object(c.a)(n,e);var t=z(n);function n(){return Object(i.a)(this,n),t.apply(this,arguments)}return Object(o.a)(n,[{key:"renderAvatar",value:function(){var e=this.props.avatar;return e?Object(d.isValidElement)(e)?m.a.createElement("div",{className:T("avatar")},e):Object(I.isFunc)(e)?m.a.createElement("div",{className:T("avatar")},e()):Object(I.isString)(e)?m.a.createElement("div",{className:T("avatar")},m.a.createElement(R.a,{lazy:!0,src:e})):null:null}},{key:"renderTitle",value:function(){var e=this.props,t=e.title,n=e.desc;if(!t)return null;var a=!n;return m.a.createElement("div",{className:T("title",a&&"center")},t)}},{key:"renderDesc",value:function(){var e=this.props,t=e.desc,n=e.title;if(!t)return null;var a=!n;return m.a.createElement("div",{className:T("desc",a&&"center")},t)}},{key:"renderContent",value:function(){var e=this.props.content;return e?Object(I.isFunc)(e)?m.a.createElement("div",{className:T("content")},e()):m.a.createElement("div",{className:T("content")},e):null}},{key:"render",value:function(){var e=this.props,t=e.className,n=e.content,a=e.title,r=e.desc;return n||a||r?a||r?m.a.createElement("div",{className:p()(L("meta"),t)},m.a.createElement("div",{className:T("container")},this.renderAvatar(),m.a.createElement("div",{className:T("meta")},this.renderTitle(),this.renderDesc())),this.renderContent()):m.a.createElement("div",{className:p()(L("meta","includes"),t)},this.renderAvatar(),this.renderContent()):m.a.createElement("div",{className:p()(L("meta"),t)},this.renderAvatar())}}]),n}(d.Component);function $(a){return function(){var e,t=Object(u.a)(a);if(function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],function(){})),!0}catch(e){return!1}}()){var n=Object(u.a)(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return Object(l.a)(this,e)}}var F=function(e){Object(c.a)(n,e);var t=$(n);function n(){return Object(i.a)(this,n),t.apply(this,arguments)}return Object(o.a)(n,[{key:"render",value:function(){var n=this,e=this.props.extra.map(function(e,t){return m.a.createElement(m.a.Fragment,{key:t},e,t<n.props.extra.length-1?m.a.createElement("div",{className:L("split")}):null)});return m.a.createElement("div",{className:L("extra")},e)}}]),n}(d.PureComponent);function A(a){return function(){var e,t=Object(u.a)(a);if(function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],function(){})),!0}catch(e){return!1}}()){var n=Object(u.a)(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return Object(l.a)(this,e)}}var V=function(e){Object(c.a)(n,e);var t=A(n);function n(){return Object(i.a)(this,n),t.apply(this,arguments)}return Object(o.a)(n,[{key:"render",value:function(){var e=this.props,t=e.className,n=e.extra,a=Object(E.a)(e,["className","extra"]);return n?m.a.createElement("div",{className:p()(L("base"),t)},m.a.createElement(B,this.props),m.a.createElement(F,{extra:n})):m.a.createElement(B,Object.assign({},a,{className:t}))}}]),n}(d.PureComponent),W=n(592),Y=Object(a.compose)(r.a.hoc({bindProps:["disabled","limit","format","prediction","distinct"],ignoreUndefined:!0,setValueType:null,pure:!1}),function(n){return function(e){var t=e.pagination?Object(W.a)(n):n;return m.a.createElement(t,e)}})(k);Y.BaseItem=V;t.a=Y},561:function(e,t,n){"use strict";n.d(t,"a",function(){return s}),n.d(t,"b",function(){return c});var a=n(0),r=n.n(a),i=n(38),o=Object(i.a)(),s=o.Provider,c=function(n){return function(t){return r.a.createElement(o.Consumer,null,function(e){return r.a.createElement(n,Object.assign({},t,e))})}}},592:function(e,t,n){"use strict";var o=n(15),s=n(4),c=n(5),l=n(1),u=n(6),r=n(7),i=n(2),a=n(0),d=n.n(a),m=n(17),f=n(309);function p(a){return function(){var e,t=Object(i.a)(a);if(function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],function(){})),!0}catch(e){return!1}}()){var n=Object(i.a)(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return Object(r.a)(this,e)}}t.a=function(i){return function(e){Object(u.a)(r,e);var a=p(r);function r(e){var t;Object(s.a)(this,r),t=a.call(this,e);var n=e.pagination;return t.state={current:n.current||n.defaultCurrent||1,pageSize:n.pageSize||10},t.handleChange=t.handleChange.bind(Object(l.a)(t)),t}return Object(c.a)(r,[{key:"getProp",value:function(e){return this.props.pagination[e]||this.state[e]}},{key:"getPager",value:function(e,t){var n=this.props.loading,a=Array.isArray(e)?e.length:0;return Object.assign({current:this.getProp("current"),pageSize:this.getProp("pageSize"),total:a,disabled:!!n},t,{onChange:this.handleChange})}},{key:"handleChange",value:function(e,t){var n=this.props.pagination.onChange;this.setState({current:e,pageSize:t}),n&&n(e,t)}},{key:"render",value:function(){var e=this.props,t=e.pagination,n=e.data,a=Object(o.a)(e,["pagination","data"]),r=this.getPager(n,t);return[d.a.createElement(i,Object.assign({key:"origin",data:function(e,t){if(!Array.isArray(e))return e;if(e.length<=t.pageSize)return e;var n=(t.current-1)*t.pageSize;return e.slice(n,n+t.pageSize)}(n,r)},a)),d.a.createElement(f.a,Object.assign({key:"pager"},r))]}}]),r}(m.b)}},593:function(e,t,n){"use strict";n.d(t,"a",function(){return y});var r=n(4),i=n(5),o=n(1),s=n(20),c=n(6),l=n(7),u=n(2),a=n(0),d=n.n(a),m=n(17),f=n(10),p=n(88),h=n(186);function g(a){return function(){var e,t=Object(u.a)(a);if(function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],function(){})),!0}catch(e){return!1}}()){var n=Object(u.a)(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return Object(l.a)(this,e)}}var y=function(e){Object(c.a)(a,e);var n=g(a);function a(e){var t;return Object(r.a)(this,a),(t=n.call(this,e)).handleChange=t.handleChange.bind(Object(o.a)(t)),t.handleUpdate=t.forceUpdate.bind(Object(o.a)(t)),t}return Object(i.a)(a,[{key:"componentDidMount",value:function(){Object(s.a)(Object(u.a)(a.prototype),"componentDidMount",this).call(this),this.props.datum.subscribe(f.a,this.handleUpdate)}},{key:"componentWillUnmount",value:function(){Object(s.a)(Object(u.a)(a.prototype),"componentWillUnmount",this).call(this),this.props.datum.unsubscribe(f.a,this.handleUpdate)}},{key:"handleChange",value:function(e,t,n){var a=this.props,r=a.data,i=a.datum,o=a.treeColumnsName;t?i.add(r,n,o):i.remove(r,n,o)}},{key:"render",value:function(){var e=this.props,t=e.data,n=e.datum,a=n.disabled(t),r=n.check(t),i=1===n.limit?h.a:p.a;return d.a.createElement(i,Object.assign({},this.props,{checked:r,disabled:a,onChange:this.handleChange}))}}]),a}(m.b)}}]);